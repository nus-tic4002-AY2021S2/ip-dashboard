[{"path":"DukeFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"E | 1 | project meeting  | tmr afternoon"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"D | 0 | submit project  | 2020-09-28"}],"authorContributionMap":{"timmyly7":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"# NUS.Duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"timmyly7":1,"-":25}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":2,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    implementation \u0027org.testng:testng:6.9.6\u0027"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"    mainClassName \u003d \"NUS.Duke.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"    archiveBaseName \u003d \"NUS.Duke.Launcher\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"timmyly7":19,"-":43}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"* [Setting Up and Getting Started](#Setting-Up-and-Getting-Started)"},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"* [Design](#Design)"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"  * [Architecture](#Architecture)"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"  * [Storage component](#Storage-Component)"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"* [Appendix: Requirements](#Appendix:-Requirements)"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"  * [Product scope](#Product-scope)"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"  * [User stories](#User-Stories)"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"  * [Non-Functional Requirements](#Non-Functional-Requirements)"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"  * [Glossary](#Glossary)"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"## Setting Up and Getting Started"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":":heavy_exclamation_mark: **Caution** Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps."},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"First, **fork** this repo, and **clone** the fork into your computer."},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"If you plan to use Intellij IDEA (highly recommended):"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"1. **Configure the JDK:**"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":" * Ensure you have the correct JDK version installed in your computer."},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":" * Open IntelliJ (if you are not in the welcome screen, click ```File → Close Project``` to close the existing project dialog first)."},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":" * Set up the correct JDK version for Gradle."},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"  * Click ```Configure → Project Defaults → Project Structure```"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"  * Click ```New…``` and set it to the directory of the JDK."},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"2. **Import the project as a Gradle project:**"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":" * IntelliJ IDEA by default has the Gradle plugin installed. If you have disabled it, go to ```File → Settings → Plugins``` to re-enable them."},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":" * If your project involves GUI programming, similarly ensure the JavaFX plugin has not been disabled."},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":" * Click ```Import Project``` (or Open or Import in newer version of Intellij)."},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":" * Locate the ```build.gradle``` file (not the root folder as you would do in a normal importing) and select it. Click OK."},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":" * If asked, choose to Open as Project (not Open as File)."},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":" * Click OK to accept the default settings but do ensure that the selected version of Gradle JVM matches the JDK being used for the project."},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":" * Wait for the importing process to finish (could take a few minutes)."},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":" * :heavy_exclamation_mark: **Note**: Importing a Gradle project is slightly different from importing a normal Java project."},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"3. **Verify the setup:**"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":" * Run the ```java -jar NUS.Duke.Launcher.jar``` and try a few commands."},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"  "},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"  "},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"## Design"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"##### Architecture"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"![Sample - Architecture](images/Architecture.JPG)"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"The ***Architecture Diagram*** shown gives an overview of the high-level design."},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"`Main` has a class file named `Launcher`, run the main class method in `Duke.java`. It would perform the following functions:"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"- At launch: Initialize the components in the correct sequence, and connect them up with each other."},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"- At shut down / Exit: Shuts down the components and invokes save / cleanup methods where necessary."},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"The application then consists of four other components:"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"- `UI`: The UI of Duke."},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"- `Logic`: The command executor. "},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"- `Model`: Hold the data of events in memory."},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"- `Storage`: Read data from, and writes data to the hard disk."},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"One example would be the `Storage` component which defines its API in `ParseUtil.java, writeToFile() Function` as well as exposes its functionality using the same class."},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"##### Storage Component"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"###### Storage(Load)"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"![StorageComponent](images/Storage Diagram.png)"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"###### Storage(save)"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"![StorageComponent](images/Storage Diagram.png)"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"API:  ```ParseUtil.java, writeToFile() Function```"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":"The Storage Component,"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"* Load function will read the text file and passing the list of string in the file"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"to the decoding class. "},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":"* Saving function will Encode the task detail and pass it back to storage"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"to save to the file. "},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"## Appendix: Requirements"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"### Product scope"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"##### Target user profile"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"* Has a need to manage his/her task (deadline, events)"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"* Is able to use command line interface (CLI)"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"* Can type fast"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"* Prefers typing to interaction with a graphical user interface (GUI)"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"* Is comfortable using CLI commands with GUI view apps"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"##### Value proposition: "},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"To manage all tasks faster than a typical written down method"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":"### User Stories"},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":"###### *Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`*"},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"|Priority|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":"|--------|--------|----------|---------------|------------------|"},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":"|`* * *`|v1.0|Student|remind me to buy fruits|eat more healthy|"},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":"|`* * *`|v1.0|Student|remind me to attend school project meeting at meeting room|discuss project details|"},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":"|`* * *`|v1.0|Student|remind me to finish school work by friday night|submit assignment on time"},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":"### Use Cases"},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":"###### (For all use cases below, the System is the `NUS Expenses Tracker` and the Actor is the `NUS Student`)"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":114,"author":{"gitId":"timmyly7"},"content":"### Non Functional Requirements"},{"lineNumber":115,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":116,"author":{"gitId":"timmyly7"},"content":"1. Should work on any mainstream OS as long it has Java ```11``` or above installed."},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":"2. User will be able to interact with the systems with regular english text. For example: (```"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":"add chicken rice $4.00 2020-11-01 /C FOOD. ```)."},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":"3. Will be able to handle up to 1000 expenses without noticeable slowness in performance for typical usage."},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":"4. User will be able to interact with their expenses.txt if they wish to make amendment. "},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":122,"author":{"gitId":"timmyly7"},"content":"### Glossary"},{"lineNumber":123,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":124,"author":{"gitId":"timmyly7"},"content":"- *MainStream OS* - Windows, Linux, Unix, OS-X"},{"lineNumber":125,"author":{"gitId":"timmyly7"},"content":"- NET - NUS Expenses Tracker"},{"lineNumber":126,"author":{"gitId":"timmyly7"},"content":"- Regex - Regular Expressions"},{"lineNumber":127,"author":{"gitId":"timmyly7"},"content":"- JDK - Java Development Kit - [Java SE](https://www.oracle.com/sg/java/technologies/javase-downloads.html \"Java SE Downloads\")"},{"lineNumber":128,"author":{"gitId":"timmyly7"},"content":"- Gradle - Gradle Build Tool - [Gradle User Manual](https://docs.gradle.org/current/userguide/userguide.html \"Build Automation Tool - Docs\")"},{"lineNumber":129,"author":{"gitId":"timmyly7"},"content":"- Intellij / IDE - Intellij Integrated Development Environment - [IntelliJ IDEA](https://www.jetbrains.com/idea/ \"JVM IDE\") "},{"lineNumber":130,"author":{"gitId":"timmyly7"},"content":"- Plugin - IDE Plugins - [Intellij IDEA Plugins](https://www.jetbrains.com/help/idea/managing-plugins.html \"Manage plugins\")"}],"authorContributionMap":{"timmyly7":130}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"Welcome to Duke System"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"You can look for more details from the User Guide / Developer Guide Below."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"Useful links:"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"Please feel free to contact me at e0261620@u.nus.edu"}],"authorContributionMap":{"timmyly7":6,"-":4}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"## User Guide"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"Welcome to Duke System, Duke is an app for managing daily task and scheduler, optimized for use via a Command Line in User Interface "},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"while still having the benefits of a Graphical User Interface (GUI). "},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"## Quick Start"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"2. Download the latest NUS.Duke.Launcher.jar from [here](https://github.com/timmyly7/ip/releases)."},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"3. Open a command prompt / terminal window in that directory."},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"4. Run the command ```java -jar NUS.Duke.Launcher.jar``` to open up the application."},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"5. Type the ```help``` in the command box and press ```Enter``` to execute it."},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"## Features"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"```Help```: Lists the commands the user can use to interact with the application. \u003cbr/\u003e"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"```Todo```: Create todo task. \u003cbr/\u003e"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"```Event```: Create event task.  \u003cbr/\u003e"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"```Done```: Mark task as done. \u003cbr/\u003e"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"```List```: List all the tasks. \u003cbr/\u003e"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"```Find```: Find tasks with matching task description. \u003cbr/\u003e"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"```Delete```: Delete task by task id. \u003cbr/\u003e"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"```Delete All```: Delete all tasks. \u003cbr/\u003e"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"```Save```: Save the tasks to file. \u003cbr/\u003e"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"## Usage"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"### `Keyword` - Describe action"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"Describe action and its outcome."},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"Example of usage: "},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"#### `todo` - create todo task action"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"`todo (task description)`"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"e.g. `todo do homework`"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"` Got it. I\u0027ve added this task:\u0027 "},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":" [T][✗]do homework"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"  Now you have 1 tasks in the list`"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"  "},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":" #### `event` - create event task action"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":" `event (task description) /at (event timing description)`"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":" e.g. `event project meeting /at tmr afternoon`"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":" `  Got it. I\u0027ve added this task: "},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"   [E][✗]project meeting (at: tmr afternoon )"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"   Now you have 1 tasks in the list`"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":" #### `deadline` - create deadline task action"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":" `deadline (task description) /by (deadline date in format of yyyy-mm-dd)`"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":" e.g. `deadline submit project /by 2020-09-28`"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":" `  Got it. I\u0027ve added this task: "},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"   [D][✗]submit project (by: 2020 Sep 28 )"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"   Now you have 1 tasks in the list`"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":" #### `done` - mark task as done action"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":" `done (id)`"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":" e.g. `done 1`"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":" `  Nice! I\u0027ve marked this task as done: "},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"    [✓]project meeting `"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"    "},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":" #### `list` - list all tasks action"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":" `list`"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":" `  1. [T][✗]do homework"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"    2. [E][✓]project meeting (at: tmr afternoon )"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"    3. [D][✗]submit project (by: 2020 Sep 28 )`"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"    "},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":" #### `find` - find task by description action"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":" `find (task description)`"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"  e.g. `find project`"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":" `  Here are the matching tasks in your list: "},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"   2:[E][✓]project meeting (at: tmr afternoon )"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"   3:[D][✗]submit project (by: 2020 Sep 28 )`"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":" #### `delete` - find task by description action"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":" `delete (task id)`"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"  e.g. `delete 1`"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":" ` Noted. I\u0027ve removed this task: "},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":"  [T][✗]do homework"},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"   Now you have 2 tasks in the list`"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":"   "},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":" #### `deleteall` - delete all tasks action"},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":" `deleteall`"},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":" ` All the task has been deleted.`"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":" #### `save` - save task to file action"},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":" `save`"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":" ` Successfully wrote to the file.`"},{"lineNumber":114,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":115,"author":{"gitId":"timmyly7"},"content":" ## Special Handle"},{"lineNumber":116,"author":{"gitId":"timmyly7"},"content":" When user use command promt to run the jar file, they should use the following command."},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":" 1. in command promt, type `chcp` and enter, you will see this `Active code page: 65001`"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":" 2. type `java -jar -Dfile.encoding\u003dUTF-8 Duke.jar`"},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":"### Support or Contact \u003cbr/\u003e"},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":"Having trouble with executing the program? Contact me at E0261620@u.nus.edu and I\u0027ll help you sort it out. "}],"authorContributionMap":{"timmyly7":121}},{"path":"src/main/java/NUS/Duke/DTO/DeadlineDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"public class DeadlineDTO extends TaskDTO {"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"    SimpleDateFormat printFormat \u003d new SimpleDateFormat(\"yyyy MMM dd\");"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    private String deadlineDateString;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    private Date deadline;"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    public String getTaskType() {"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        return \"D\";"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    public DeadlineDTO(String taskName , String deadlineDateString) throws ProcessingException {"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"        this.setTaskName(taskName);"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        this.deadlineDateString \u003d deadlineDateString;"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"            this.deadline \u003d simpleDateFormat.parse(deadlineDateString);"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"        } catch (ParseException e) {"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"            throw new ProcessingException(\"Wrong date format. Please use the format as yyyy-mm-dd\");"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public Date getDeadline() {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        return deadline;"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    public void setDeadline(Date deadline) {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"    public String getDeadlineDateString() {"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"        return deadlineDateString;"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"    public void setDeadlineDateString(String deadlineDateString) {"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        this.deadlineDateString \u003d deadlineDateString;"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        return super.toString() +\" (by: \"+deadlineDateString+\" )\";"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    public String getTaskFullDescription() {"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"]\");"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"        int ascii \u003d 0;"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2717;"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2713;"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"        String sign \u003d Character.toString((char)ascii);"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"        sb.append(sign +\"]\");"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"(by: \");"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"        sb.append(printFormat.format(deadline));"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" )\");"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"    public String getPrintFileString() {"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"0\");"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"1\");"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"        sb.append(deadlineDateString);"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"\\n\");"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":95}},{"path":"src/main/java/NUS/Duke/DTO/EventDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class EventDTO extends TaskDTO {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"    private String eventTime;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    public String getTaskType() {"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"        return \"E\";"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    public EventDTO(String taskName,String eventTime) {"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"        this.setTaskName(taskName);"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"    public String getEventTime() {"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"        return eventTime;"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"    public void setEventTime(String eventTime) {"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"        return super.toString() +\" (at: \"+eventTime+\" )\";"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public String getTaskFullDescription() {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"]\");"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"        int ascii \u003d 0;"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2717;"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2713;"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        String sign \u003d Character.toString((char)ascii);"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        sb.append(sign +\"]\");"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"(at: \");"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"        sb.append(eventTime);"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" )\");"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"    public String getPrintFileString() {"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"0\");"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"1\");"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"        sb.append(eventTime);"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"\\n\");"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":72}},{"path":"src/main/java/NUS/Duke/DTO/TaskDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"public abstract class TaskDTO {"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    private String taskName;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"    private Date recordDate \u003d new Date();"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    private boolean isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    public boolean isDone() {"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"        return isDone;"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"    public void setDone(boolean done) {"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        isDone \u003d done;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    public String getTaskName() {"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"        return taskName;"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"    public void setTaskName(String taskName) {"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"    public Date getRecordDate() {"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"        return recordDate;"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"    public void setRecordDate(Date recordDate) {"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"        this.recordDate \u003d recordDate;"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    public TaskDTO() {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"    public String processDoneTask(){"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        this.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"       return (\" Nice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"                \"[✓]\"+this.taskName);"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"    public abstract String getTaskType();"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        return taskName;"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    public abstract String getTaskFullDescription();"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"    public abstract String getPrintFileString();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":56}},{"path":"src/main/java/NUS/Duke/DTO/TodoDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class TodoDTO extends TaskDTO {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"    public TodoDTO(String taskName) {"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"        this.setTaskName(taskName);"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"    public String getTaskType() {"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"        return \"T\";"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        return super.toString();"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    public String getTaskFullDescription() {"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"]\");"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"        int ascii \u003d 0;"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2717;"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2713;"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        String sign \u003d Character.toString((char)ascii);"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"        sb.append(sign +\"]\");"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"    public String getPrintFileString() {"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"0\");"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"1\");"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"\\n\");"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":54}},{"path":"src/main/java/NUS/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.DialogBox;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.ParserUtil;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.UI;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"import javafx.geometry.Insets;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.image.Image;"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"import javafx.stage.Stage;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"public class Duke extends Application {"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/image/userFemale.png\"));"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/image/userMale.png\"));"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"    private VBox dialogContainer;"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    private TextField userInput;"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"    private Button sendButton;"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"    private Scene scene;"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"    public static String processCommand(String originalCommand) {"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"        String operation \u003d ParserUtil.getFunctionCommand(originalCommand);"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        String details \u003d originalCommand.substring(originalCommand.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        String result \u003d \"\";"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"        switch (operation){"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"            case \"todo\":"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.createTodoTask(details,0);"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"            case \"deadline\":"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.createDeadlineTask(details,0);"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"            case \"event\":"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"                try {"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"                    result\u003dParserUtil.createEventTask(details,0);"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"                } catch (ProcessingException e) {"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"                    e.printStackTrace();"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"            case \"list\":"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"                result\u003dUI.printList(ParserUtil.taskList);"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"            case \"bye\":"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"                result\u003dUI.printByeMessage();"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"                System.exit(0);"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"            case \"done\":"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.doneTask(Integer.parseInt(details));"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"            case \"delete\":"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.deleteTask(Integer.parseInt(details));"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"            case \"save\":"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.writeToFile();"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":"            case \"find\":"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.findTask(details);"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"            case \"findby\":"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.findTaskByDate(details);"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"            case \"deleteall\":"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"                result\u003dParserUtil.deleteAllTask();"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"            case \"help\":"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"                result\u003dUI.printHelpList();"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"            case \"startwelcome\":"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"                result \u003d ParserUtil.readTaskFromFile();"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"            default:"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"                result\u003d(\"Sorry I dont understand the command, please use \u0027help\u0027 to see the command list\");"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"        return result;"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":"    public void start(Stage stage) {"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":"        //Step 1. Setting up required components"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":"        userInput \u003d new TextField();"},{"lineNumber":114,"author":{"gitId":"timmyly7"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":115,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":116,"author":{"gitId":"timmyly7"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":"        stage.setScene(scene);"},{"lineNumber":122,"author":{"gitId":"timmyly7"},"content":"        stage.show();"},{"lineNumber":123,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":124,"author":{"gitId":"timmyly7"},"content":"        // more code to be added here later"},{"lineNumber":125,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":126,"author":{"gitId":"timmyly7"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":127,"author":{"gitId":"timmyly7"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":128,"author":{"gitId":"timmyly7"},"content":"        stage.setResizable(false);"},{"lineNumber":129,"author":{"gitId":"timmyly7"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":130,"author":{"gitId":"timmyly7"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":131,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":132,"author":{"gitId":"timmyly7"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":133,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":134,"author":{"gitId":"timmyly7"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":135,"author":{"gitId":"timmyly7"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":136,"author":{"gitId":"timmyly7"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":137,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":138,"author":{"gitId":"timmyly7"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":139,"author":{"gitId":"timmyly7"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":140,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":141,"author":{"gitId":"timmyly7"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":142,"author":{"gitId":"timmyly7"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":143,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":144,"author":{"gitId":"timmyly7"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":145,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":146,"author":{"gitId":"timmyly7"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":147,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":148,"author":{"gitId":"timmyly7"},"content":"        dialogContainer.setPadding(new Insets(10,10,10,10));"},{"lineNumber":149,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":150,"author":{"gitId":"timmyly7"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":151,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":152,"author":{"gitId":"timmyly7"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":153,"author":{"gitId":"timmyly7"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":154,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":155,"author":{"gitId":"timmyly7"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":156,"author":{"gitId":"timmyly7"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":157,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":158,"author":{"gitId":"timmyly7"},"content":"        // more code to be added here later"},{"lineNumber":159,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":160,"author":{"gitId":"timmyly7"},"content":"        //Step 3. Add functionality to handle user input."},{"lineNumber":161,"author":{"gitId":"timmyly7"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":162,"author":{"gitId":"timmyly7"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":163,"author":{"gitId":"timmyly7"},"content":"            userInput.clear();"},{"lineNumber":164,"author":{"gitId":"timmyly7"},"content":"        });"},{"lineNumber":165,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":166,"author":{"gitId":"timmyly7"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":167,"author":{"gitId":"timmyly7"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":168,"author":{"gitId":"timmyly7"},"content":"            userInput.clear();"},{"lineNumber":169,"author":{"gitId":"timmyly7"},"content":"        });"},{"lineNumber":170,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":171,"author":{"gitId":"timmyly7"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":172,"author":{"gitId":"timmyly7"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":173,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":174,"author":{"gitId":"timmyly7"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":175,"author":{"gitId":"timmyly7"},"content":"            String command \u003d userInput.getText();"},{"lineNumber":176,"author":{"gitId":"timmyly7"},"content":"            handleUserInput(command);"},{"lineNumber":177,"author":{"gitId":"timmyly7"},"content":"        });"},{"lineNumber":178,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":179,"author":{"gitId":"timmyly7"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":180,"author":{"gitId":"timmyly7"},"content":"            String command \u003d userInput.getText();"},{"lineNumber":181,"author":{"gitId":"timmyly7"},"content":"            handleUserInput(command);"},{"lineNumber":182,"author":{"gitId":"timmyly7"},"content":"        });"},{"lineNumber":183,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":184,"author":{"gitId":"timmyly7"},"content":"        handleUserInput(\"startWelcome\");"},{"lineNumber":185,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":187,"author":{"gitId":"timmyly7"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":188,"author":{"gitId":"timmyly7"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":189,"author":{"gitId":"timmyly7"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":190,"author":{"gitId":"timmyly7"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":191,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":192,"author":{"gitId":"timmyly7"},"content":"        return textToAdd;"},{"lineNumber":193,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":195,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"timmyly7"},"content":"     * Iteration 2:"},{"lineNumber":197,"author":{"gitId":"timmyly7"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":198,"author":{"gitId":"timmyly7"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":199,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"timmyly7"},"content":"    private void handleUserInput(String command) {"},{"lineNumber":201,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":202,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":203,"author":{"gitId":"timmyly7"},"content":"        UI ui \u003d new UI();"},{"lineNumber":204,"author":{"gitId":"timmyly7"},"content":"//        UI.printWelcomeMessage();"},{"lineNumber":205,"author":{"gitId":"timmyly7"},"content":"//        String command \u003d userInput.getText();"},{"lineNumber":206,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":207,"author":{"gitId":"timmyly7"},"content":"        String result  \u003d processCommand(command);"},{"lineNumber":208,"author":{"gitId":"timmyly7"},"content":"        Label userText \u003d new Label(command);"},{"lineNumber":209,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":210,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":211,"author":{"gitId":"timmyly7"},"content":"        userText.setTextFill(Color.web(\"#000000\"));"},{"lineNumber":212,"author":{"gitId":"timmyly7"},"content":"        userText.setPadding(new Insets(10,10,10,10));"},{"lineNumber":213,"author":{"gitId":"timmyly7"},"content":"        userText.setStyle(\"-fx-background-radius: 18 18 18 18;-fx-border-radius: 18 18 18 18;\" +"},{"lineNumber":214,"author":{"gitId":"timmyly7"},"content":"                \"-fx-background-color: dodgerblue; -fx-start-margin: 10px\");"},{"lineNumber":215,"author":{"gitId":"timmyly7"},"content":"        Label dukeText \u003d new Label(result);"},{"lineNumber":216,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":217,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":218,"author":{"gitId":"timmyly7"},"content":"        dukeText.setTextFill(Color.web(\"#000000\"));"},{"lineNumber":219,"author":{"gitId":"timmyly7"},"content":"        dukeText.setPadding(new Insets(10,10,10,10));"},{"lineNumber":220,"author":{"gitId":"timmyly7"},"content":"        dukeText.setStyle(\"-fx-background-radius: 18 18 18 18;-fx-border-radius: 18 18 18 18;\" +"},{"lineNumber":221,"author":{"gitId":"timmyly7"},"content":"                \"-fx-background-color: white; -fx-start-margin: 10px\");"},{"lineNumber":222,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":223,"author":{"gitId":"timmyly7"},"content":"        if (command!\u003d\"startWelcome\") {"},{"lineNumber":224,"author":{"gitId":"timmyly7"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userText, new ImageView(user)));"},{"lineNumber":225,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"timmyly7"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(dukeText, new ImageView(duke)));"},{"lineNumber":227,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":228,"author":{"gitId":"timmyly7"},"content":"        userInput.clear();"},{"lineNumber":229,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":231,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"timmyly7"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":233,"author":{"gitId":"timmyly7"},"content":"     * Replace this stub with your completed method."},{"lineNumber":234,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"timmyly7"},"content":"    private String getResponse(String input) {"},{"lineNumber":236,"author":{"gitId":"timmyly7"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":237,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":239,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"timmyly7":232,"-":8}},{"path":"src/main/java/NUS/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":11}},{"path":"src/main/java/NUS/Duke/ProcessingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class ProcessingException extends Exception {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"    public ProcessingException(String message) {"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"        System.out.println(message);"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":9}},{"path":"src/main/java/NUS/Duke/exception/ProcessingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.exception;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class ProcessingException extends Exception {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"    private final String message;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    public ProcessingException(String message) {"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"        this.message \u003d message;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":11}},{"path":"src/main/java/NUS/Duke/utils/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.utils;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import javafx.geometry.Insets;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.Node;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"public class DialogBox extends HBox {"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    private Label text;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    private ImageView displayPicture;"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"        text \u003d l;"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        displayPicture \u003d iv;"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        text.setWrapText(true);"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"        displayPicture.setFitWidth(50.0);"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        displayPicture.setFitHeight(50.0);"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"        this.setPadding(new Insets(10,10,10,10));"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"    private void flip() {"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        DialogBox dialogBox \u003d new DialogBox(l, iv);"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"//        dialogBox.setBackground(new Background(new BackgroundFill(Color.BLUE,null,null)));"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        return dialogBox;"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"        DialogBox dialogBox \u003d new DialogBox(l, iv);"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"//        dialogBox.setBackground(new Background(new BackgroundFill(Color.GREEN,null,null)));"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        dialogBox.flip();"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"        return dialogBox;"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":53}},{"path":"src/main/java/NUS/Duke/utils/ParamConstant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.utils;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class ParamConstant {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"    public static final String UPDATE_COMMAND_AMOUNT_PARAM \u003d \"/a\";"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"    public static final String UPDATE_COMMAND_DATE_PARAM \u003d \"/d\";"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    public static final String UPDATE_COMMAND_USAGE_PARAM \u003d \"/U\";"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":7}},{"path":"src/main/java/NUS/Duke/utils/ParserUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.utils;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.DeadlineDTO;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.EventDTO;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TaskDTO;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TodoDTO;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"import java.text.ParseException;"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"import java.util.Date;"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"import java.util.List;"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"import java.util.Scanner;"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"public class ParserUtil {"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"    public static List\u003cTaskDTO\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"     * this is the function to spilt the input string originalCommand and get operation"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"     * @param originalCommand"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"     * @return"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public static String getFunctionCommand(String originalCommand) {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        String operation \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"            if (!originalCommand.isEmpty()) {"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"                operation \u003d originalCommand.split(\" \")[0];"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"            } else {"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        } catch (Exception exception) {"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"Expception occured\");"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        return operation.toLowerCase();"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"     * This is the function to make task as done input param taskId"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"     * @param taskId"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"    public static String doneTask(int taskId) {"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        String result \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"        TaskDTO task \u003d taskList.get(--taskId);"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"        result \u003d task.processDoneTask();"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"        return result;"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"     * This is the function to create event task by input param details"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"     * @param details"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"    public static String createEventTask(String details, int doneInd) throws ProcessingException {"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"        String result \u003d \"\";"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"            String taskName \u003d details.substring(0, details.indexOf(\"/at\"));"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"            String eventTime \u003d details.substring(details.indexOf(\"/at\") + 4).trim();"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"            EventDTO task \u003d new EventDTO(taskName, eventTime);"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"            if (doneInd \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":"                task.setDone(false);"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"            } else {"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"                task.setDone(true);"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":"            taskList.add(task);"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"            result \u003d UI.printAddTaskMessage(task);"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"        } catch (Exception e) {"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"            result \u003d \"Please check your input, /at is missing\";"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"            UI.printErrorMessage(\"Please check your input, /at is missing\");"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"        return result;"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"     * This is the function to create deadline task by input param details"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"     * @param details"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"    public static String createDeadlineTask(String details, int doneInd) {"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"        String result \u003d \"\";"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":"            String taskName \u003d details.substring(0, details.indexOf(\"/by\"));"},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":"            String deadlineDate \u003d details.substring(details.indexOf(\"/by\") + 4).trim();"},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":"            DeadlineDTO task \u003d new DeadlineDTO(taskName, deadlineDate);"},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"            if (doneInd \u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":"                task.setDone(false);"},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":"                task.setDone(true);"},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":"            taskList.add(task);"},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":"            result \u003d UI.printAddTaskMessage(task);"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":"        } catch (Exception e) {"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":"            result \u003d \"Please check your input, /by is missing or date entered is incorrect\";"},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":"            UI.printErrorMessage(\"Please check your input, /by is missing or date entered is incorrect\");"},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":"        return result;"},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":114,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":116,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":"     * This is the function to create todo task by input param details"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":"     * @param details"},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":"    public static String createTodoTask(String details, int doneInd) {"},{"lineNumber":122,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":123,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":124,"author":{"gitId":"timmyly7"},"content":"        TodoDTO task \u003d new TodoDTO(details);"},{"lineNumber":125,"author":{"gitId":"timmyly7"},"content":"        if (doneInd \u003d\u003d 0) {"},{"lineNumber":126,"author":{"gitId":"timmyly7"},"content":"            task.setDone(false);"},{"lineNumber":127,"author":{"gitId":"timmyly7"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"timmyly7"},"content":"            task.setDone(true);"},{"lineNumber":129,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"timmyly7"},"content":"        taskList.add(task);"},{"lineNumber":131,"author":{"gitId":"timmyly7"},"content":"        String result \u003d UI.printAddTaskMessage(task);"},{"lineNumber":132,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":133,"author":{"gitId":"timmyly7"},"content":"        return result;"},{"lineNumber":134,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":135,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":136,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":138,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"timmyly7"},"content":"     * This is a function to delete task from tasklist with input param taskIdNumber"},{"lineNumber":140,"author":{"gitId":"timmyly7"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"timmyly7"},"content":"     * @param taskIdNumber"},{"lineNumber":142,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"timmyly7"},"content":"    public static String deleteTask(int taskIdNumber) {"},{"lineNumber":144,"author":{"gitId":"timmyly7"},"content":"        TaskDTO tempTask \u003d null;"},{"lineNumber":145,"author":{"gitId":"timmyly7"},"content":"        String result \u003d \"\";"},{"lineNumber":146,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":147,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"timmyly7"},"content":"            tempTask \u003d taskList.get(--taskIdNumber);"},{"lineNumber":149,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":150,"author":{"gitId":"timmyly7"},"content":"            taskList.remove(tempTask);"},{"lineNumber":151,"author":{"gitId":"timmyly7"},"content":"            result \u003d UI.printDeleteTaskMessage(tempTask);"},{"lineNumber":152,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":153,"author":{"gitId":"timmyly7"},"content":"        } catch (Exception e) {"},{"lineNumber":154,"author":{"gitId":"timmyly7"},"content":"            result \u003d e.getMessage();"},{"lineNumber":155,"author":{"gitId":"timmyly7"},"content":"            e.printStackTrace();"},{"lineNumber":156,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":158,"author":{"gitId":"timmyly7"},"content":"        return result;"},{"lineNumber":159,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":161,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"timmyly7"},"content":"     * This is the function to export the tasklist to a txt file in a format"},{"lineNumber":163,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"timmyly7"},"content":"    public static String writeToFile() {"},{"lineNumber":165,"author":{"gitId":"timmyly7"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":166,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":167,"author":{"gitId":"timmyly7"},"content":"            FileWriter myWriter \u003d new FileWriter(\"DukeFile.txt\");"},{"lineNumber":168,"author":{"gitId":"timmyly7"},"content":"            taskList.forEach(task -\u003e {"},{"lineNumber":169,"author":{"gitId":"timmyly7"},"content":"                try {"},{"lineNumber":170,"author":{"gitId":"timmyly7"},"content":"                    myWriter.write(task.getPrintFileString());"},{"lineNumber":171,"author":{"gitId":"timmyly7"},"content":"                } catch (IOException e) {"},{"lineNumber":172,"author":{"gitId":"timmyly7"},"content":"                    result.append(\"An error occurred.\");"},{"lineNumber":173,"author":{"gitId":"timmyly7"},"content":"                    e.printStackTrace();"},{"lineNumber":174,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":175,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":176,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":177,"author":{"gitId":"timmyly7"},"content":"            myWriter.close();"},{"lineNumber":178,"author":{"gitId":"timmyly7"},"content":"            return (\"Successfully wrote to the file.\");"},{"lineNumber":179,"author":{"gitId":"timmyly7"},"content":"        } catch (IOException e) {"},{"lineNumber":180,"author":{"gitId":"timmyly7"},"content":"            e.printStackTrace();"},{"lineNumber":181,"author":{"gitId":"timmyly7"},"content":"            return (\"An error occurred.\");"},{"lineNumber":182,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":185,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":186,"author":{"gitId":"timmyly7"},"content":"    public static String readTaskFromFile() {"},{"lineNumber":187,"author":{"gitId":"timmyly7"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":188,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"timmyly7"},"content":"            File myObj \u003d new File(\"DukeFile.txt\");"},{"lineNumber":190,"author":{"gitId":"timmyly7"},"content":"            Scanner scanner \u003d new Scanner(myObj);"},{"lineNumber":191,"author":{"gitId":"timmyly7"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":192,"author":{"gitId":"timmyly7"},"content":"                String data \u003d scanner.nextLine();"},{"lineNumber":193,"author":{"gitId":"timmyly7"},"content":"                if (data !\u003d \"\" \u0026\u0026 data !\u003d null) {"},{"lineNumber":194,"author":{"gitId":"timmyly7"},"content":"                    String values[] \u003d data.split(\"\\\\|\");"},{"lineNumber":195,"author":{"gitId":"timmyly7"},"content":"                    Integer doneInd \u003d Integer.parseInt(values[1].trim());"},{"lineNumber":196,"author":{"gitId":"timmyly7"},"content":"                    String secValue \u003d values[2].trim();"},{"lineNumber":197,"author":{"gitId":"timmyly7"},"content":"                    switch (values[0].trim()) {"},{"lineNumber":198,"author":{"gitId":"timmyly7"},"content":"                        case \"T\":"},{"lineNumber":199,"author":{"gitId":"timmyly7"},"content":"                            createTodoTask(secValue, doneInd);"},{"lineNumber":200,"author":{"gitId":"timmyly7"},"content":"                            break;"},{"lineNumber":201,"author":{"gitId":"timmyly7"},"content":"                        case \"E\":"},{"lineNumber":202,"author":{"gitId":"timmyly7"},"content":"                            String details \u003d secValue + \" /at \" + values[3].substring(1);"},{"lineNumber":203,"author":{"gitId":"timmyly7"},"content":"                            createEventTask(details, doneInd);"},{"lineNumber":204,"author":{"gitId":"timmyly7"},"content":"                            break;"},{"lineNumber":205,"author":{"gitId":"timmyly7"},"content":"                        case \"D\":"},{"lineNumber":206,"author":{"gitId":"timmyly7"},"content":"                            String deadlineDetails \u003d secValue + \" /by \" + values[3].trim();"},{"lineNumber":207,"author":{"gitId":"timmyly7"},"content":"                            createDeadlineTask(deadlineDetails, doneInd);"},{"lineNumber":208,"author":{"gitId":"timmyly7"},"content":"                            break;"},{"lineNumber":209,"author":{"gitId":"timmyly7"},"content":"                        default:"},{"lineNumber":210,"author":{"gitId":"timmyly7"},"content":"                            System.out.println(\"There is a problem with the file, kindly check the file.\");"},{"lineNumber":211,"author":{"gitId":"timmyly7"},"content":"                    }"},{"lineNumber":212,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":213,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":214,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":216,"author":{"gitId":"timmyly7"},"content":"            result.append(\"Successfully load record from the file.\\n\");"},{"lineNumber":217,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":218,"author":{"gitId":"timmyly7"},"content":"            result.append(UI.printWelcomeMessage());"},{"lineNumber":219,"author":{"gitId":"timmyly7"},"content":"            scanner.close();"},{"lineNumber":220,"author":{"gitId":"timmyly7"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":221,"author":{"gitId":"timmyly7"},"content":"            result \u003d new StringBuilder();"},{"lineNumber":222,"author":{"gitId":"timmyly7"},"content":"            result.append(\"DukeFile is not found, skip reading task from file.\");"},{"lineNumber":223,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":224,"author":{"gitId":"timmyly7"},"content":"        } catch (ProcessingException e) {"},{"lineNumber":225,"author":{"gitId":"timmyly7"},"content":"            result \u003d new StringBuilder();"},{"lineNumber":226,"author":{"gitId":"timmyly7"},"content":"            result.append(\"An error occurred.\");"},{"lineNumber":227,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":228,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":229,"author":{"gitId":"timmyly7"},"content":"        return result.toString();"},{"lineNumber":230,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":232,"author":{"gitId":"timmyly7"},"content":"    public static String deleteAllTask() {"},{"lineNumber":233,"author":{"gitId":"timmyly7"},"content":"        taskList.removeAll(taskList);"},{"lineNumber":234,"author":{"gitId":"timmyly7"},"content":"        return UI.printDeleteAllTaskMessage();"},{"lineNumber":235,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":237,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"timmyly7"},"content":"     * This is the function to find the description from list of task"},{"lineNumber":239,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":240,"author":{"gitId":"timmyly7"},"content":"    public static String findTask(String keyword) {"},{"lineNumber":241,"author":{"gitId":"timmyly7"},"content":"        List foundTasks \u003d new ArrayList();"},{"lineNumber":242,"author":{"gitId":"timmyly7"},"content":"        taskList.forEach(task -\u003e {"},{"lineNumber":243,"author":{"gitId":"timmyly7"},"content":"            if (task.getTaskName().toLowerCase().contains(keyword)) {"},{"lineNumber":244,"author":{"gitId":"timmyly7"},"content":"                foundTasks.add(task);"},{"lineNumber":245,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":246,"author":{"gitId":"timmyly7"},"content":"        });"},{"lineNumber":247,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":248,"author":{"gitId":"timmyly7"},"content":"        return UI.printFoundTaskList(foundTasks);"},{"lineNumber":249,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":251,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":252,"author":{"gitId":"timmyly7"},"content":"     * This is the function to find the description from list of task"},{"lineNumber":253,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":254,"author":{"gitId":"timmyly7"},"content":"    public static String findTaskByDate(String keyword) {"},{"lineNumber":255,"author":{"gitId":"timmyly7"},"content":"        List foundTasks \u003d new ArrayList();"},{"lineNumber":256,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":257,"author":{"gitId":"timmyly7"},"content":"            String startDate \u003d keyword.substring(keyword.indexOf(\"/s\") + 3);"},{"lineNumber":258,"author":{"gitId":"timmyly7"},"content":"            startDate \u003d startDate.substring(0, startDate.indexOf(\"/e\"));"},{"lineNumber":259,"author":{"gitId":"timmyly7"},"content":"            String endDate \u003d keyword.substring(keyword.indexOf(\"/e\") + 3);"},{"lineNumber":260,"author":{"gitId":"timmyly7"},"content":"            Date start \u003d sdf.parse(startDate.trim());"},{"lineNumber":261,"author":{"gitId":"timmyly7"},"content":"            Date end \u003d sdf.parse(endDate.trim());"},{"lineNumber":262,"author":{"gitId":"timmyly7"},"content":"            taskList.forEach(task -\u003e {"},{"lineNumber":263,"author":{"gitId":"timmyly7"},"content":"                if (task instanceof DeadlineDTO) {"},{"lineNumber":264,"author":{"gitId":"timmyly7"},"content":"                    if ((((DeadlineDTO) task).getDeadline().before(end) || ((DeadlineDTO) task).getDeadline().equals(end) )"},{"lineNumber":265,"author":{"gitId":"timmyly7"},"content":"                    \u0026\u0026 (((DeadlineDTO) task).getDeadline().after(start)) || ((DeadlineDTO) task).getDeadline().equals(start)) {"},{"lineNumber":266,"author":{"gitId":"timmyly7"},"content":"                        foundTasks.add(task);"},{"lineNumber":267,"author":{"gitId":"timmyly7"},"content":"                    }"},{"lineNumber":268,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":269,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":270,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":271,"author":{"gitId":"timmyly7"},"content":"        } catch (ParseException e) {"},{"lineNumber":272,"author":{"gitId":"timmyly7"},"content":"            return \"Date format is wrong, kindly check your date format, it must be in the follow syntax:\\n\" +"},{"lineNumber":273,"author":{"gitId":"timmyly7"},"content":"                    \"e.g: findby /s 2020-01-03 /e 2020-03-24\";"},{"lineNumber":274,"author":{"gitId":"timmyly7"},"content":"        } catch (Exception e) {"},{"lineNumber":275,"author":{"gitId":"timmyly7"},"content":"            return \"Date format is wrong, kindly check your date format, it must be in the follow syntax:\\n\" +"},{"lineNumber":276,"author":{"gitId":"timmyly7"},"content":"                    \"e.g: findby /s 2020-01-03 /e 2020-03-24\";"},{"lineNumber":277,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":279,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":280,"author":{"gitId":"timmyly7"},"content":"        return UI.printFoundTaskList(foundTasks);"},{"lineNumber":281,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":283,"author":{"gitId":"timmyly7"},"content":"    static boolean match(String first, String second) {"},{"lineNumber":284,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":285,"author":{"gitId":"timmyly7"},"content":"        // If we reach at the end of both strings,"},{"lineNumber":286,"author":{"gitId":"timmyly7"},"content":"        // we are done"},{"lineNumber":287,"author":{"gitId":"timmyly7"},"content":"        if (first.length() \u003d\u003d 0 \u0026\u0026 second.length() \u003d\u003d 0)"},{"lineNumber":288,"author":{"gitId":"timmyly7"},"content":"            return true;"},{"lineNumber":289,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":290,"author":{"gitId":"timmyly7"},"content":"        // Make sure that the characters after \u0027*\u0027"},{"lineNumber":291,"author":{"gitId":"timmyly7"},"content":"        // are present in second string."},{"lineNumber":292,"author":{"gitId":"timmyly7"},"content":"        // This function assumes that the first"},{"lineNumber":293,"author":{"gitId":"timmyly7"},"content":"        // string will not contain two consecutive \u0027*\u0027"},{"lineNumber":294,"author":{"gitId":"timmyly7"},"content":"        if (first.length() \u003e 1 \u0026\u0026 first.charAt(0) \u003d\u003d \u0027*\u0027 \u0026\u0026"},{"lineNumber":295,"author":{"gitId":"timmyly7"},"content":"                second.length() \u003d\u003d 0)"},{"lineNumber":296,"author":{"gitId":"timmyly7"},"content":"            return false;"},{"lineNumber":297,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":298,"author":{"gitId":"timmyly7"},"content":"        // If the first string contains \u0027?\u0027,"},{"lineNumber":299,"author":{"gitId":"timmyly7"},"content":"        // or current characters of both strings match"},{"lineNumber":300,"author":{"gitId":"timmyly7"},"content":"        if ((first.length() \u003e 1 \u0026\u0026 first.charAt(0) \u003d\u003d \u0027?\u0027) ||"},{"lineNumber":301,"author":{"gitId":"timmyly7"},"content":"                (first.length() !\u003d 0 \u0026\u0026 second.length() !\u003d 0 \u0026\u0026"},{"lineNumber":302,"author":{"gitId":"timmyly7"},"content":"                        first.charAt(0) \u003d\u003d second.charAt(0)))"},{"lineNumber":303,"author":{"gitId":"timmyly7"},"content":"            return match(first.substring(1),"},{"lineNumber":304,"author":{"gitId":"timmyly7"},"content":"                    second.substring(1));"},{"lineNumber":305,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":306,"author":{"gitId":"timmyly7"},"content":"        // If there is *, then there are two possibilities"},{"lineNumber":307,"author":{"gitId":"timmyly7"},"content":"        // a) We consider current character of second string"},{"lineNumber":308,"author":{"gitId":"timmyly7"},"content":"        // b) We ignore current character of second string."},{"lineNumber":309,"author":{"gitId":"timmyly7"},"content":"        if (first.length() \u003e 0 \u0026\u0026 first.charAt(0) \u003d\u003d \u0027*\u0027)"},{"lineNumber":310,"author":{"gitId":"timmyly7"},"content":"            return match(first.substring(1), second) ||"},{"lineNumber":311,"author":{"gitId":"timmyly7"},"content":"                    match(first, second.substring(1));"},{"lineNumber":312,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":313,"author":{"gitId":"timmyly7"},"content":"        return false;"},{"lineNumber":314,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":315}},{"path":"src/main/java/NUS/Duke/utils/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.utils;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TaskDTO;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"public class UI {"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"    private Scanner in;"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    static String indent \u003d \"    \";"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    public UI() {"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        in \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    public String readCommand() {"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        return in.nextLine();"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    public static String printWelcomeMessage(){"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"Hello from\\n\" + logo);"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"Hello! I\u0027m NUS Duke System\\n\" +"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"                \"What can I do for you?\");"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    public static String printHelpList(){"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"Thank you for using Duke, please see the command below for each task: \\n\");"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"list - this is to list all the task you have created. \\n\");"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"todo (todo task description) - this is to create a todo task, usage example : \" +"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"                \"\u0027todo do homework\u0027\\n\");"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"event (event task description) /at (event timing)- this is create an event\" +"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"                \" task and at certain timing, there is no format for the timing. usage example :\" +"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"                \" event project meeting /at 9:30\\n\");"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"deadline (deadline task description) /by (deadline date)- this is create an \" +"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"                \"deadline task and by certain date, the format for date is yyyy-mm-dd\" +"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"                \" usage example : deadline submit homework /by 2020-09-28 \\n\");"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"delete (task id) - this is to delete the task. usage example : delete 1 \\n\");"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"deleteAll - this is to delete all the tasks.\\n\");"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"find (task description) - this is to find the task with matching description. \" +"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"                \"usage example : find do homework\\n\");"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"findBy (/s date /e date), /s is the start date and /e is the end date. Date format must be \u0027YYYY-MM-DD\u0027.\" +"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"                \" Usage example : findby /s 2020-05-01 /e 2020-05-20\");"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"done (task id) - this is to mark the task is done. usage example : done 1 \\n\");"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"save - this is to save all the tasks you have created to file in the folder named DukeFile.txt. \\n\");"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"bye - this is to list all the task you have created. \\n\");"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"    public static String printList(List\u003cTaskDTO\u003e taskList){"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        StringBuilder finalSb \u003d new StringBuilder();"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"        if (taskList.size()\u003d\u003d0){"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"            finalSb.append(\"You have no task yet, please add task.\");"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"            taskList.forEach(task -\u003e {"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"                sb.append(taskList.indexOf(task)+1 + \". \");"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"                sb.append(task.getTaskFullDescription());"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"                sb.append(\"\\n\");"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"            finalSb.append(sb.toString());"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"        return finalSb.toString();"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"    public static void printDoneMessage(){"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"\");"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":"    public static String printDeleteAllTaskMessage(){"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"All the task has been deleted.\");"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"    public static String printByeMessage(){ return \"Bye. Hope to see you again soon!\";"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"    public static void printErrorMessage(String message) {"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"            throw new ProcessingException(message);"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"        } catch (ProcessingException e) {"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"            e.getMessage();"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"    public static String printAddTaskMessage(TaskDTO task){"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" Got it. I\u0027ve added this task: \\n\"+ task.getTaskFullDescription() +\"\\n\""},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":"                +\" Now you have \"+ParserUtil.taskList.size()+\" tasks in the list\");"},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":"    public static String printDeleteTaskMessage(TaskDTO task){"},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" Noted. I\u0027ve removed this task: \\n\"+ task.getTaskFullDescription() +\"\\n\""},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":"                +\" Now you have \"+ParserUtil.taskList.size()+\" tasks in the list\");"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":"    public static String printFoundTaskList(List\u003cTaskDTO\u003e foundList){"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":"        if (foundList.size()\u003e0){"},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":"            sb.append(\" Here are the matching tasks in your list: \\n\");"},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":"            foundList.forEach(taskDTO -\u003e {"},{"lineNumber":114,"author":{"gitId":"timmyly7"},"content":"                sb.append((ParserUtil.taskList.indexOf(taskDTO)+1)+\":\"+taskDTO.getTaskFullDescription()+\"\\n\");"},{"lineNumber":115,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":116,"author":{"gitId":"timmyly7"},"content":"            return (sb.toString());"},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":"           return (\"Sorry here are no match task in your list.\");"},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":121}},{"path":"src/main/java/TaskTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"import java.util.Map;"},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"public enum TaskTypeEnum {"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    TODO(0, \"T\"),"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"    DEADLINE(1, \"D\"),"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    EVENT(2, \"E\");"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    private Integer typeId;"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    private String typeShortForm;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"    TaskTypeEnum(final Integer typeId, final String typeShortForm) {"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        this.typeId \u003d typeId;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"        this.typeShortForm \u003d typeShortForm;"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    public Integer getTypeId() {"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        return typeId;"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    public void setTypeId(Integer typeId) {"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        this.typeId \u003d typeId;"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"    public String getTypeShortForm() {"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        return typeShortForm;"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public void setTypeShortForm(String typeShortForm) {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        this.typeShortForm \u003d typeShortForm;"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    public static TaskTypeEnum getTypeById(final Integer typeId) {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        for (TaskTypeEnum taskTypeEnum : TaskTypeEnum.values()) {"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"            if (taskTypeEnum.getTypeId().equals(typeId)) {"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"                return taskTypeEnum;"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        return null;"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"    public static TaskTypeEnum getTypeByDescription(final String typeDescription) {"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        for (TaskTypeEnum taskTypeEnum : TaskTypeEnum.values()) {"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"            if (taskTypeEnum.getTypeShortForm().equals(typeDescription)) {"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"                return taskTypeEnum;"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        return null;"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"    public static Map\u003cInteger, String\u003e getMap() {"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        Map\u003cInteger, String\u003e mMap \u003d new HashMap\u003cInteger, String\u003e();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"        for (TaskTypeEnum s : TaskTypeEnum.values()) {"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"            mMap.put(s.typeId, s.typeShortForm);"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"        return mMap;"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":63}},{"path":"src/main/java/back.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class back {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"    public static int taskId \u003d 0;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"        ArrayList\u003cInteger\u003e list \u003d new ArrayList\u003cInteger\u003e();"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"        ArrayList\u003cInteger\u003e resultList \u003d new ArrayList\u003cInteger\u003e();"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"        for (int i\u003d1; i\u003c\u003d49; i++) {"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"            list.add(new Integer(i));"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"        Collections.shuffle(list);"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"        for (int i\u003d0; i\u003c6; i++) {"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"            resultList.add(list.get(i));"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"        Collections.sort(resultList);"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        resultList.forEach(integer -\u003e System.out.println(integer));"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":21}},{"path":"src/test/java/JunitTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.ParserUtil;"},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.UI;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"public class JunitTest {"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    void junitTest() {"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"        ParserUtil parserUtil \u003d new ParserUtil();"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"        UI ui \u003d new UI();"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        parserUtil.createTodoTask(\"Buy food\",0);"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        parserUtil.createDeadlineTask(\"Happy Birthday To dad /by 2020-01-22\",0);"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"        parserUtil.createTodoTask(\"TodoTest\",0);"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        ui.printList(parserUtil.taskList);"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"        assertTrue(parserUtil.taskList.size()\u003d\u003d3);"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\NUS.Duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"java -classpath ..\\bin NUS.Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"timmyly7":2,"-":19}}]
