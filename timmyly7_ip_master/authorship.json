[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"# NUS.Duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"timmyly7":1,"-":25}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"1. Create todo task."},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"2. Create event task."},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"3. Create deadline task."},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"4. Mark task as done."},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"5. List all the tasks."},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"6. Find tasks with matching task description."},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"7. Delete task by task id."},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"8. Delete all tasks."},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"9. Save the tasks to file."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"### Feature Description "},{"lineNumber":15,"author":{"gitId":"-"},"content":"Description of feature."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"1. Create todo task - User can create the task by enter \u0027todo (task description)\u0027, system will create the task as"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"todo task and save in system."},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"2. Create event task - User can create the task by enter \u0027event (task description) /at (timing description)\u0027, system will create the task as"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"event task and save in system."},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"3. Create deadline task - User can create the task by enter \u0027deadline (task description) /by (date: in format of yyyy-mm-dd)\u0027, system will create the task as"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"deadline task and save in system."},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"4. Mark task as done - User can make the task as already done in system."},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"5. List all the tasks - User can see all the task created."},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"6. Find tasks with matching task description - User can find the specific task by description."},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"7. Delete the task by task id - User can delete the task from system by task id number."},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"8. Delete all tasks - User can delete all the tasks from system."},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"9. Save the tasks to file - User can save the task to the file. The file location will be in the same location of jar file."},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"#### `todo` - create todo task action"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"`todo (task description)`"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"e.g. `todo do homework`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"` Got it. I\u0027ve added this task:\u0027 "},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":" [T][✗]do homework"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"  Now you have 1 tasks in the list`"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"  "},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":" #### `event` - create event task action"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":" `event (task description) /at (event timing description)`"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":" e.g. `event project meeting /at tmr afternoon`"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":" `  Got it. I\u0027ve added this task: "},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"   [E][✗]project meeting (at: tmr afternoon )"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"   Now you have 1 tasks in the list`"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":" #### `deadline` - create deadline task action"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":" `deadline (task description) /by (deadline date in format of yyyy-mm-dd)`"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":" e.g. `deadline submit project /by 2020-09-28`"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":" `  Got it. I\u0027ve added this task: "},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"   [D][✗]submit project (by: 2020 Sep 28 )"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"   Now you have 1 tasks in the list`"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":" #### `done` - mark task as done action"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":" `done (id)`"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":" e.g. `done 1`"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":" `  Nice! I\u0027ve marked this task as done: "},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"    [✓]project meeting `"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"    "},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":" #### `list` - list all tasks action"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":" `list`"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":" `  1. [T][✗]do homework"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"    2. [E][✓]project meeting (at: tmr afternoon )"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"    3. [D][✗]submit project (by: 2020 Sep 28 )`"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"    "},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":" #### `find` - find task by description action"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":" `find (task description)`"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"  e.g. `find project`"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":" `  Here are the matching tasks in your list: "},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"   2:[E][✓]project meeting (at: tmr afternoon )"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"   3:[D][✗]submit project (by: 2020 Sep 28 )`"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":" #### `delete` - find task by description action"},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":" `delete (task id)`"},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":"  e.g. `delete 1`"},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":" ` Noted. I\u0027ve removed this task: "},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":"  [T][✗]do homework"},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":"   Now you have 2 tasks in the list`"},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":"   "},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":" #### `deleteall` - delete all tasks action"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":" `deleteall`"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":" Expected outcome:"},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":" ` All the task has been deleted.`"},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":" #### `save` - save task to file action"},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":" `save`"},{"lineNumber":114,"author":{"gitId":"-"},"content":" "},{"lineNumber":115,"author":{"gitId":"-"},"content":" Expected outcome:"},{"lineNumber":116,"author":{"gitId":"-"},"content":" "},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":" ` Successfully wrote to the file.`"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":" "},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":" ## Special Handle"},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":" When user use command promt to run the jar file, they should use the following command."},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":" 1. in command promt, type `chcp` and enter, you will see this `Active code page: 65001`"},{"lineNumber":122,"author":{"gitId":"timmyly7"},"content":" 2. type `java -jar -Dfile.encoding\u003dUTF-8 Duke.jar`"}],"authorContributionMap":{"timmyly7":102,"-":20}},{"path":"src/main/java/NUS/Duke/DTO/DeadlineDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"public class DeadlineDTO extends TaskDTO {"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"    SimpleDateFormat printFormat \u003d new SimpleDateFormat(\"yyyy MMM dd\");"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    private String deadlineDateString;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    private Date deadline;"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    public String getTaskType() {"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        return \"D\";"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    public DeadlineDTO(String taskName , String deadlineDateString) throws ProcessingException {"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"        this.setTaskName(taskName);"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        this.deadlineDateString \u003d deadlineDateString;"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"            this.deadline \u003d simpleDateFormat.parse(deadlineDateString);"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"        } catch (ParseException e) {"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"            throw new ProcessingException(\"Wrong date format. Please use the format as yyyy-mm-dd\");"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public Date getDeadline() {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        return deadline;"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    public void setDeadline(Date deadline) {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"    public String getDeadlineDateString() {"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"        return deadlineDateString;"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"    public void setDeadlineDateString(String deadlineDateString) {"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        this.deadlineDateString \u003d deadlineDateString;"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        return super.toString() +\" (by: \"+deadlineDateString+\" )\";"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    public String getTaskFullDescription() {"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"]\");"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"        int ascii \u003d 0;"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2717;"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2713;"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"        String sign \u003d Character.toString((char)ascii);"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"        sb.append(sign +\"]\");"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"(by: \");"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"        sb.append(printFormat.format(deadline));"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" )\");"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"    public String getPrintFileString() {"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"0\");"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"1\");"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"        sb.append(deadlineDateString);"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"\\n\");"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":95}},{"path":"src/main/java/NUS/Duke/DTO/EventDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class EventDTO extends TaskDTO {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"    private String eventTime;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    public String getTaskType() {"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"        return \"E\";"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    public EventDTO(String taskName,String eventTime) {"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"        this.setTaskName(taskName);"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"    public String getEventTime() {"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"        return eventTime;"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"    public void setEventTime(String eventTime) {"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"        return super.toString() +\" (at: \"+eventTime+\" )\";"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public String getTaskFullDescription() {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"]\");"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"        int ascii \u003d 0;"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2717;"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2713;"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        String sign \u003d Character.toString((char)ascii);"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        sb.append(sign +\"]\");"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"(at: \");"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"        sb.append(eventTime);"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" )\");"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"    public String getPrintFileString() {"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"0\");"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"1\");"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"        sb.append(eventTime);"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"\\n\");"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":72}},{"path":"src/main/java/NUS/Duke/DTO/TaskDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"public abstract class TaskDTO {"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    private String taskName;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"    private Date recordDate \u003d new Date();"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    private boolean isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    public boolean isDone() {"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"        return isDone;"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"    public void setDone(boolean done) {"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        isDone \u003d done;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    public String getTaskName() {"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"        return taskName;"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"    public void setTaskName(String taskName) {"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"    public Date getRecordDate() {"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"        return recordDate;"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"    public void setRecordDate(Date recordDate) {"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"        this.recordDate \u003d recordDate;"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    public TaskDTO() {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"    public void processDoneTask(){"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        this.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"                \"[✓]\"+this.taskName);"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"    public abstract String getTaskType();"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        return taskName;"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    public abstract String getTaskFullDescription();"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"    public abstract String getPrintFileString();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":56}},{"path":"src/main/java/NUS/Duke/DTO/TodoDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.DTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class TodoDTO extends TaskDTO {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"    public TodoDTO(String taskName) {"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"        this.setTaskName(taskName);"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"    public String getTaskType() {"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"        return \"T\";"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        return super.toString();"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    public String getTaskFullDescription() {"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"]\");"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"[\");"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"        int ascii \u003d 0;"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2717;"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"            ascii \u003d 0x2713;"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        String sign \u003d Character.toString((char)ascii);"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"        sb.append(sign +\"]\");"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"    public String getPrintFileString() {"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskType());"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"        if (!isDone()){"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"0\");"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"            sb.append(\"1\");"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        sb.append(\" | \");"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        sb.append(getTaskName());"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"\\n\");"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"        return sb.toString();"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":54}},{"path":"src/main/java/NUS/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TaskDTO;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.ParserUtil;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.UI;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"import java.text.ParseException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        UI ui \u003d new UI();"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"        UI.printWelcomeMessage();"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"        ParserUtil.readTaskFromFile();"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        String command \u003d ui.readCommand();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        while (!ParserUtil.getFunctionCommand(command).equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"            processCommand(command);"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"            command \u003d ui.readCommand();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public static void processCommand(String originalCommand) {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"        String operation \u003d ParserUtil.getFunctionCommand(originalCommand);"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        String details \u003d originalCommand.substring(originalCommand.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"        switch (operation){"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"            case \"todo\":"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"                ParserUtil.createTodoTask(details,0);"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"            case \"deadline\":"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"                ParserUtil.createDeadlineTask(details,0);"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"            case \"event\":"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"                try {"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"                    ParserUtil.createEventTask(details,0);"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"                } catch (ProcessingException e) {"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"                    e.printStackTrace();"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"            case \"list\":"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"                UI.printList(ParserUtil.taskList);"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"            case \"bye\":"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"                UI.printByeMessage();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"                System.exit(0);"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"            case \"done\":"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"                ParserUtil.doneTask(Integer.parseInt(details));"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            case \"delete\":"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"                    ParserUtil.deleteTask(Integer.parseInt(details));"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"            case \"save\":"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"                ParserUtil.writeToFile();"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"            case \"find\":"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"                ParserUtil.findTask(details);"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"            case \"deleteall\":"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"                ParserUtil.deleteAllTask();"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"            case \"help\":"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":"                UI.printHelpList();"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"            default:"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"                UI.printErrorMessage(\"Sorry I dont understand the command, please use \u0027help\u0027 to see the command list\");"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"timmyly7":70,"-":16}},{"path":"src/main/java/NUS/Duke/ProcessingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class ProcessingException extends Exception {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"    public ProcessingException(String message) {"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"        System.out.println(message);"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":9}},{"path":"src/main/java/NUS/Duke/exception/ProcessingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.exception;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"public class ProcessingException extends Exception {"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"    private final String message;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    public ProcessingException(String message) {"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"        this.message \u003d message;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":11}},{"path":"src/main/java/NUS/Duke/utils/ParserUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.utils;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.DeadlineDTO;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.EventDTO;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TaskDTO;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TodoDTO;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.UI;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"import java.io.FileWriter;"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"import java.util.Date;"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"import java.util.List;"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"import java.util.Scanner;"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"public class ParserUtil {"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"    public static List\u003cTaskDTO\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"     * this is the function to spilt the input string originalCommand and get operation"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"     * @param originalCommand"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"     * @return"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    public static String getFunctionCommand(String originalCommand){"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"        String operation \u003d\"\";"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"            if (!originalCommand.isEmpty()) {"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"                operation \u003d originalCommand.split(\" \")[0];"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"            }else {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"        } catch (Exception exception) {"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"Expception occured\");"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"        return operation.toLowerCase();"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"     * This is the function to make task as done input param taskId"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"     * @param taskId"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    public static void doneTask (int taskId){"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":"        TaskDTO task \u003d taskList.get(--taskId);"},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"        task.processDoneTask();"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"     * This is the function to create event task by input param details"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"     * @param details"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"    public static void createEventTask(String details,int doneInd) throws ProcessingException {"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            String taskName \u003d details.substring(0, details.indexOf(\"/at\"));"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"            String eventTime \u003d details.substring(details.indexOf(\"/at\") + 4).trim();"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"            EventDTO task \u003d new EventDTO(taskName, eventTime);"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"            if (doneInd\u003d\u003d0){"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"                task.setDone(false);"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":"            }else {"},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"                task.setDone(true);"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"            taskList.add(task);"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":"            UI.printAddTaskMessage(task);"},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"        }catch (Exception e){"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"            UI.printErrorMessage(\"Please check your input, /at is missing\");"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":"     * This is the function to create deadline task by input param details"},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":"     * @param details"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"    public static void createDeadlineTask(String details,int doneInd) {"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"            String taskName \u003d details.substring(0,details.indexOf(\"/by\"));"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"            String deadlineDate \u003d details.substring(details.indexOf(\"/by\")+4).trim();"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"            DeadlineDTO task \u003d new DeadlineDTO(taskName,deadlineDate);"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"            if (doneInd\u003d\u003d0){"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"                task.setDone(false);"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"            }else {"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":"                task.setDone(true);"},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"            taskList.add(task);"},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"            UI.printAddTaskMessage(task);"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"        }catch (Exception e){"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":"            UI.printErrorMessage(\"Please check your input, /by is missing or date entered is incorrect\");"},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":"     * This is the function to create todo task by input param details"},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"     * @param details"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":"    public static void createTodoTask(String details,int doneInd){"},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":"        TodoDTO task \u003d new TodoDTO(details);"},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":"        if (doneInd\u003d\u003d0){"},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":"            task.setDone(false);"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":"            task.setDone(true);"},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":"        taskList.add(task);"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":"        UI.printAddTaskMessage(task);"},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":112,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":113,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":115,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"timmyly7"},"content":"     * This is a function to delete task from tasklist with input param taskIdNumber"},{"lineNumber":117,"author":{"gitId":"timmyly7"},"content":"     * @param taskIdNumber"},{"lineNumber":118,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"timmyly7"},"content":"    public static void deleteTask (int taskIdNumber){"},{"lineNumber":120,"author":{"gitId":"timmyly7"},"content":"        TaskDTO tempTask \u003d null;"},{"lineNumber":121,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":122,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":123,"author":{"gitId":"timmyly7"},"content":"            tempTask \u003d taskList.get(--taskIdNumber);"},{"lineNumber":124,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":125,"author":{"gitId":"timmyly7"},"content":"            taskList.remove(tempTask);"},{"lineNumber":126,"author":{"gitId":"timmyly7"},"content":"            UI.printDeleteTaskMessage(tempTask);"},{"lineNumber":127,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":128,"author":{"gitId":"timmyly7"},"content":"        }catch (Exception e){"},{"lineNumber":129,"author":{"gitId":"timmyly7"},"content":"            e.printStackTrace();"},{"lineNumber":130,"author":{"gitId":"timmyly7"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":131,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":133,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":135,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"timmyly7"},"content":"     * This is the function to export the tasklist to a txt file in a format"},{"lineNumber":137,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"timmyly7"},"content":"    public static void writeToFile(){"},{"lineNumber":139,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":140,"author":{"gitId":"timmyly7"},"content":"            FileWriter myWriter \u003d new FileWriter(\"DukeFile.txt\");"},{"lineNumber":141,"author":{"gitId":"timmyly7"},"content":"            taskList.forEach(task -\u003e {"},{"lineNumber":142,"author":{"gitId":"timmyly7"},"content":"                try {"},{"lineNumber":143,"author":{"gitId":"timmyly7"},"content":"                    myWriter.write(task.getPrintFileString());"},{"lineNumber":144,"author":{"gitId":"timmyly7"},"content":"                } catch (IOException e) {"},{"lineNumber":145,"author":{"gitId":"timmyly7"},"content":"                    System.out.println(\"An error occurred.\");"},{"lineNumber":146,"author":{"gitId":"timmyly7"},"content":"                    e.printStackTrace();"},{"lineNumber":147,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":148,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":149,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":150,"author":{"gitId":"timmyly7"},"content":"            myWriter.close();"},{"lineNumber":151,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"Successfully wrote to the file.\");"},{"lineNumber":152,"author":{"gitId":"timmyly7"},"content":"        } catch (IOException e) {"},{"lineNumber":153,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":154,"author":{"gitId":"timmyly7"},"content":"            e.printStackTrace();"},{"lineNumber":155,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":158,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":159,"author":{"gitId":"timmyly7"},"content":"    public static void readTaskFromFile(){"},{"lineNumber":160,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":161,"author":{"gitId":"timmyly7"},"content":"            File myObj \u003d new File(\"DukeFile.txt\");"},{"lineNumber":162,"author":{"gitId":"timmyly7"},"content":"            Scanner scanner \u003d new Scanner(myObj);"},{"lineNumber":163,"author":{"gitId":"timmyly7"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":164,"author":{"gitId":"timmyly7"},"content":"                String data \u003d scanner.nextLine();"},{"lineNumber":165,"author":{"gitId":"timmyly7"},"content":"                if(data!\u003d\"\" \u0026\u0026 data!\u003dnull) {"},{"lineNumber":166,"author":{"gitId":"timmyly7"},"content":"                    String values[] \u003d data.split(\"\\\\|\");"},{"lineNumber":167,"author":{"gitId":"timmyly7"},"content":"                    Integer doneInd \u003d Integer.parseInt(values[1].trim());"},{"lineNumber":168,"author":{"gitId":"timmyly7"},"content":"                    String secValue \u003d values[2].trim();"},{"lineNumber":169,"author":{"gitId":"timmyly7"},"content":"                    switch (values[0].trim()){"},{"lineNumber":170,"author":{"gitId":"timmyly7"},"content":"                        case \"T\":"},{"lineNumber":171,"author":{"gitId":"timmyly7"},"content":"                            createTodoTask(secValue,doneInd);"},{"lineNumber":172,"author":{"gitId":"timmyly7"},"content":"                            break;"},{"lineNumber":173,"author":{"gitId":"timmyly7"},"content":"                        case \"E\":"},{"lineNumber":174,"author":{"gitId":"timmyly7"},"content":"                            String details  \u003d secValue +\" /at \" +values[3].substring(1);"},{"lineNumber":175,"author":{"gitId":"timmyly7"},"content":"                            createEventTask(details,doneInd);"},{"lineNumber":176,"author":{"gitId":"timmyly7"},"content":"                            break;"},{"lineNumber":177,"author":{"gitId":"timmyly7"},"content":"                        case \"D\":"},{"lineNumber":178,"author":{"gitId":"timmyly7"},"content":"                            String deadlineDetails  \u003d secValue +\" /by \" +values[3].trim();"},{"lineNumber":179,"author":{"gitId":"timmyly7"},"content":"                            createDeadlineTask(deadlineDetails,doneInd);"},{"lineNumber":180,"author":{"gitId":"timmyly7"},"content":"                            break;"},{"lineNumber":181,"author":{"gitId":"timmyly7"},"content":"                        default:"},{"lineNumber":182,"author":{"gitId":"timmyly7"},"content":"                            System.out.println(\"There is a problem with the file, kindly check the file.\");"},{"lineNumber":183,"author":{"gitId":"timmyly7"},"content":"                    }"},{"lineNumber":184,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":185,"author":{"gitId":"timmyly7"},"content":"                }"},{"lineNumber":186,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"-------------------------------------------------------------\");"},{"lineNumber":188,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"Successfully load record from the file.\");"},{"lineNumber":189,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"-------------------------------------------------------------\");"},{"lineNumber":190,"author":{"gitId":"timmyly7"},"content":"            UI.printWelcomeMessage();"},{"lineNumber":191,"author":{"gitId":"timmyly7"},"content":"            scanner.close();"},{"lineNumber":192,"author":{"gitId":"timmyly7"},"content":"        } catch (FileNotFoundException e){"},{"lineNumber":193,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"DukeFile is not found, skip reading task from file.\");"},{"lineNumber":194,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":195,"author":{"gitId":"timmyly7"},"content":"        } catch (ProcessingException e) {"},{"lineNumber":196,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":197,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":200,"author":{"gitId":"timmyly7"},"content":"    public static void deleteAllTask(){"},{"lineNumber":201,"author":{"gitId":"timmyly7"},"content":"        taskList.removeAll(taskList);"},{"lineNumber":202,"author":{"gitId":"timmyly7"},"content":"        UI.printDeleteAllTaskMessage();"},{"lineNumber":203,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":205,"author":{"gitId":"timmyly7"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"timmyly7"},"content":"     * This is the function to find the description from list of task"},{"lineNumber":207,"author":{"gitId":"timmyly7"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"timmyly7"},"content":"    public static void findTask(String keyword){"},{"lineNumber":209,"author":{"gitId":"timmyly7"},"content":"        List foundTasks \u003d new ArrayList();"},{"lineNumber":210,"author":{"gitId":"timmyly7"},"content":"        taskList.forEach(task -\u003e {"},{"lineNumber":211,"author":{"gitId":"timmyly7"},"content":"            if (task.getTaskName().toLowerCase().contains(keyword)){"},{"lineNumber":212,"author":{"gitId":"timmyly7"},"content":"                foundTasks.add(task);"},{"lineNumber":213,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"timmyly7"},"content":"        });"},{"lineNumber":215,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":216,"author":{"gitId":"timmyly7"},"content":"        UI.printFoundTaskList(foundTasks);"},{"lineNumber":217,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":219,"author":{"gitId":"timmyly7"},"content":"    static boolean match(String first, String second)"},{"lineNumber":220,"author":{"gitId":"timmyly7"},"content":"    {"},{"lineNumber":221,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":222,"author":{"gitId":"timmyly7"},"content":"        // If we reach at the end of both strings,"},{"lineNumber":223,"author":{"gitId":"timmyly7"},"content":"        // we are done"},{"lineNumber":224,"author":{"gitId":"timmyly7"},"content":"        if (first.length() \u003d\u003d 0 \u0026\u0026 second.length() \u003d\u003d 0)"},{"lineNumber":225,"author":{"gitId":"timmyly7"},"content":"            return true;"},{"lineNumber":226,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":227,"author":{"gitId":"timmyly7"},"content":"        // Make sure that the characters after \u0027*\u0027"},{"lineNumber":228,"author":{"gitId":"timmyly7"},"content":"        // are present in second string."},{"lineNumber":229,"author":{"gitId":"timmyly7"},"content":"        // This function assumes that the first"},{"lineNumber":230,"author":{"gitId":"timmyly7"},"content":"        // string will not contain two consecutive \u0027*\u0027"},{"lineNumber":231,"author":{"gitId":"timmyly7"},"content":"        if (first.length() \u003e 1 \u0026\u0026 first.charAt(0) \u003d\u003d \u0027*\u0027 \u0026\u0026"},{"lineNumber":232,"author":{"gitId":"timmyly7"},"content":"                second.length() \u003d\u003d 0)"},{"lineNumber":233,"author":{"gitId":"timmyly7"},"content":"            return false;"},{"lineNumber":234,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":235,"author":{"gitId":"timmyly7"},"content":"        // If the first string contains \u0027?\u0027,"},{"lineNumber":236,"author":{"gitId":"timmyly7"},"content":"        // or current characters of both strings match"},{"lineNumber":237,"author":{"gitId":"timmyly7"},"content":"        if ((first.length() \u003e 1 \u0026\u0026 first.charAt(0) \u003d\u003d \u0027?\u0027) ||"},{"lineNumber":238,"author":{"gitId":"timmyly7"},"content":"                (first.length() !\u003d 0 \u0026\u0026 second.length() !\u003d 0 \u0026\u0026"},{"lineNumber":239,"author":{"gitId":"timmyly7"},"content":"                        first.charAt(0) \u003d\u003d second.charAt(0)))"},{"lineNumber":240,"author":{"gitId":"timmyly7"},"content":"            return match(first.substring(1),"},{"lineNumber":241,"author":{"gitId":"timmyly7"},"content":"                    second.substring(1));"},{"lineNumber":242,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":243,"author":{"gitId":"timmyly7"},"content":"        // If there is *, then there are two possibilities"},{"lineNumber":244,"author":{"gitId":"timmyly7"},"content":"        // a) We consider current character of second string"},{"lineNumber":245,"author":{"gitId":"timmyly7"},"content":"        // b) We ignore current character of second string."},{"lineNumber":246,"author":{"gitId":"timmyly7"},"content":"        if (first.length() \u003e 0 \u0026\u0026 first.charAt(0) \u003d\u003d \u0027*\u0027)"},{"lineNumber":247,"author":{"gitId":"timmyly7"},"content":"            return match(first.substring(1), second) ||"},{"lineNumber":248,"author":{"gitId":"timmyly7"},"content":"                    match(first, second.substring(1));"},{"lineNumber":249,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":250,"author":{"gitId":"timmyly7"},"content":"        return false;"},{"lineNumber":251,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":252}},{"path":"src/main/java/NUS/Duke/utils/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"package NUS.Duke.utils;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TaskDTO;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":"public class UI {"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":"    private Scanner in;"},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    static String indent \u003d \"    \";"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    public UI() {"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        in \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"    public String readCommand() {"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        return in.nextLine();"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"    public static void printWelcomeMessage(){"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"Hello! I\u0027m NUS Duke System\\n\" +"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":"                \"What can I do for you?\");"},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    public static void printHelpList(){"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"Thank you for using Duke, please see the command below for each task: \\n\");"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"list - this is to list all the task you have created. \\n\");"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"todo (todo task description) - this is to create a todo task, usage example : \" +"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"                \"\u0027todo do homework\u0027\\n\");"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"event (event task description) /at (event timing)- this is create an event\" +"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"                \" task and at certain timing, there is no format for the timing. usage example :\" +"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"                \" event project meeting /at 9:30\\n\");"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"deadline (deadline task description) /by (deadline date)- this is create an \" +"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":"                \"deadline task and by certain date, the format for date is yyyy-mm-dd\" +"},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"                \" usage example : deadline submit homework /by 2020-09-28 \\n\");"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"delete (task id) - this is to delete the task. usage example : delete 1 \\n\");"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"deleteAll - this is to delete all the tasks.\\n\");"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"find (task description) - this is to find the task with matching description. \" +"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"                \"usage example : find do homework\\n\");"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"done (task id) - this is to mark the task is done. usage example : done 1 \\n\");"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"save - this is to save all the tasks you have created to file in the folder named DukeFile.txt. \\n\");"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"        sb.append(\"bye - this is to list all the task you have created. \\n\");"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":"        System.out.println(sb.toString());"},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"    public static void printList(List\u003cTaskDTO\u003e taskList){"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        if (taskList.size()\u003d\u003d0){"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"You have no task yet, please add task.\");"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":"            taskList.forEach(task -\u003e {"},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":"                sb.append(taskList.indexOf(task)+1 + \". \");"},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"                sb.append(task.getTaskFullDescription());"},{"lineNumber":64,"author":{"gitId":"timmyly7"},"content":"                sb.append(\"\\n\");"},{"lineNumber":65,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":66,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":67,"author":{"gitId":"timmyly7"},"content":"            System.out.println(sb.toString());"},{"lineNumber":68,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":71,"author":{"gitId":"timmyly7"},"content":"    public static void printDoneMessage(){"},{"lineNumber":72,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"\");"},{"lineNumber":73,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"timmyly7"},"content":"    public static void printDeleteAllTaskMessage(){"},{"lineNumber":75,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"All the task has been deleted.\");"},{"lineNumber":76,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":78,"author":{"gitId":"timmyly7"},"content":"    public static void printByeMessage(){"},{"lineNumber":79,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":80,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"timmyly7"},"content":"    public static void printErrorMessage(String message) {"},{"lineNumber":82,"author":{"gitId":"timmyly7"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"timmyly7"},"content":"            throw new ProcessingException(message);"},{"lineNumber":84,"author":{"gitId":"timmyly7"},"content":"        } catch (ProcessingException e) {"},{"lineNumber":85,"author":{"gitId":"timmyly7"},"content":"            e.getMessage();"},{"lineNumber":86,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":89,"author":{"gitId":"timmyly7"},"content":"    public static void printAddTaskMessage(TaskDTO task){"},{"lineNumber":90,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\" Got it. I\u0027ve added this task: \\n\"+ task.getTaskFullDescription() +\"\\n\""},{"lineNumber":91,"author":{"gitId":"timmyly7"},"content":"                +\" Now you have \"+ParserUtil.taskList.size()+\" tasks in the list\");"},{"lineNumber":92,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":94,"author":{"gitId":"timmyly7"},"content":"    public static void printDeleteTaskMessage(TaskDTO task){"},{"lineNumber":95,"author":{"gitId":"timmyly7"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task: \\n\"+ task.getTaskFullDescription() +\"\\n\""},{"lineNumber":96,"author":{"gitId":"timmyly7"},"content":"                +\" Now you have \"+ParserUtil.taskList.size()+\" tasks in the list\");"},{"lineNumber":97,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":99,"author":{"gitId":"timmyly7"},"content":"    public static void printFoundTaskList(List\u003cTaskDTO\u003e foundList){"},{"lineNumber":100,"author":{"gitId":"timmyly7"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":101,"author":{"gitId":"timmyly7"},"content":"        if (foundList.size()\u003e0){"},{"lineNumber":102,"author":{"gitId":"timmyly7"},"content":"            sb.append(\" Here are the matching tasks in your list: \\n\");"},{"lineNumber":103,"author":{"gitId":"timmyly7"},"content":"            foundList.forEach(taskDTO -\u003e {"},{"lineNumber":104,"author":{"gitId":"timmyly7"},"content":"                sb.append((ParserUtil.taskList.indexOf(taskDTO)+1)+\":\"+taskDTO.getTaskFullDescription()+\"\\n\");"},{"lineNumber":105,"author":{"gitId":"timmyly7"},"content":"            });"},{"lineNumber":106,"author":{"gitId":"timmyly7"},"content":"            System.out.println(sb.toString());"},{"lineNumber":107,"author":{"gitId":"timmyly7"},"content":"        }else {"},{"lineNumber":108,"author":{"gitId":"timmyly7"},"content":"            System.out.println(\"Sorry here are no match task in your list.\");"},{"lineNumber":109,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":111}},{"path":"src/main/java/TaskTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"import java.util.Map;"},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"public enum TaskTypeEnum {"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"    TODO(0, \"T\"),"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"    DEADLINE(1, \"D\"),"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"    EVENT(2, \"E\");"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"    private Integer typeId;"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    private String typeShortForm;"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"    TaskTypeEnum(final Integer typeId, final String typeShortForm) {"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        this.typeId \u003d typeId;"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":"        this.typeShortForm \u003d typeShortForm;"},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"    public Integer getTypeId() {"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        return typeId;"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    public void setTypeId(Integer typeId) {"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"        this.typeId \u003d typeId;"},{"lineNumber":25,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":27,"author":{"gitId":"timmyly7"},"content":"    public String getTypeShortForm() {"},{"lineNumber":28,"author":{"gitId":"timmyly7"},"content":"        return typeShortForm;"},{"lineNumber":29,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":31,"author":{"gitId":"timmyly7"},"content":"    public void setTypeShortForm(String typeShortForm) {"},{"lineNumber":32,"author":{"gitId":"timmyly7"},"content":"        this.typeShortForm \u003d typeShortForm;"},{"lineNumber":33,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":35,"author":{"gitId":"timmyly7"},"content":"    public static TaskTypeEnum getTypeById(final Integer typeId) {"},{"lineNumber":36,"author":{"gitId":"timmyly7"},"content":"        for (TaskTypeEnum taskTypeEnum : TaskTypeEnum.values()) {"},{"lineNumber":37,"author":{"gitId":"timmyly7"},"content":"            if (taskTypeEnum.getTypeId().equals(typeId)) {"},{"lineNumber":38,"author":{"gitId":"timmyly7"},"content":"                return taskTypeEnum;"},{"lineNumber":39,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"timmyly7"},"content":"        return null;"},{"lineNumber":42,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":44,"author":{"gitId":"timmyly7"},"content":"    public static TaskTypeEnum getTypeByDescription(final String typeDescription) {"},{"lineNumber":45,"author":{"gitId":"timmyly7"},"content":"        for (TaskTypeEnum taskTypeEnum : TaskTypeEnum.values()) {"},{"lineNumber":46,"author":{"gitId":"timmyly7"},"content":"            if (taskTypeEnum.getTypeShortForm().equals(typeDescription)) {"},{"lineNumber":47,"author":{"gitId":"timmyly7"},"content":"                return taskTypeEnum;"},{"lineNumber":48,"author":{"gitId":"timmyly7"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"timmyly7"},"content":"        return null;"},{"lineNumber":51,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":53,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":54,"author":{"gitId":"timmyly7"},"content":"    public static Map\u003cInteger, String\u003e getMap() {"},{"lineNumber":55,"author":{"gitId":"timmyly7"},"content":"        Map\u003cInteger, String\u003e mMap \u003d new HashMap\u003cInteger, String\u003e();"},{"lineNumber":56,"author":{"gitId":"timmyly7"},"content":"        for (TaskTypeEnum s : TaskTypeEnum.values()) {"},{"lineNumber":57,"author":{"gitId":"timmyly7"},"content":"            mMap.put(s.typeId, s.typeShortForm);"},{"lineNumber":58,"author":{"gitId":"timmyly7"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"timmyly7"},"content":"        return mMap;"},{"lineNumber":60,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":62,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":63,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":63}},{"path":"src/test/java/JunitTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.DTO.TodoDTO;"},{"lineNumber":2,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.ProcessingException;"},{"lineNumber":3,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.ParserUtil;"},{"lineNumber":4,"author":{"gitId":"timmyly7"},"content":"import NUS.Duke.utils.UI;"},{"lineNumber":5,"author":{"gitId":"timmyly7"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":6,"author":{"gitId":"timmyly7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"timmyly7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"timmyly7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":9,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"public class JunitTest {"},{"lineNumber":11,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":12,"author":{"gitId":"timmyly7"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"timmyly7"},"content":"    void junitTest() {"},{"lineNumber":14,"author":{"gitId":"timmyly7"},"content":"        ParserUtil parserUtil \u003d new ParserUtil();"},{"lineNumber":15,"author":{"gitId":"timmyly7"},"content":"        UI ui \u003d new UI();"},{"lineNumber":16,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":17,"author":{"gitId":"timmyly7"},"content":"        parserUtil.createTodoTask(\"Buy food\",0);"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"        parserUtil.createDeadlineTask(\"Happy Birthday To dad /by 2020-01-22\",0);"},{"lineNumber":19,"author":{"gitId":"timmyly7"},"content":"        parserUtil.createTodoTask(\"TodoTest\",0);"},{"lineNumber":20,"author":{"gitId":"timmyly7"},"content":"        ui.printList(parserUtil.taskList);"},{"lineNumber":21,"author":{"gitId":"timmyly7"},"content":""},{"lineNumber":22,"author":{"gitId":"timmyly7"},"content":"        assertTrue(parserUtil.taskList.size()\u003d\u003d3);"},{"lineNumber":23,"author":{"gitId":"timmyly7"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"timmyly7"},"content":"}"}],"authorContributionMap":{"timmyly7":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"timmyly7"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\NUS.Duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"timmyly7"},"content":"java -classpath ..\\bin NUS.Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"timmyly7":2,"-":19}}]
