[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":"jar {"},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":"    manifest {"},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027"},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"HongJiancheng"},"content":"}"},{"lineNumber":63,"author":{"gitId":"HongJiancheng"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"HongJiancheng"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"HongJiancheng"},"content":"    enableAssertions \u003d true"},{"lineNumber":66,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":66}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"E | 1 | project meeting | 2020-08-06"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":"T | 1 | join sports club"},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"E | 1 | birthday party | 2020-10-20"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"D | 1 | return book | 2020-09-20"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"D | 0 | go shopping | 2020-12-31"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"D | 0 | return book | 2020-09-30"}],"authorContributionMap":{"HongJiancheng":6}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"## Design"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"### Architecture"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"![Image of ArchitectureDiagram](https://github.com/HongJiancheng/ip/blob/master/docs/images/architecture.png?raw\u003dtrue)"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"The Architecture Diagram given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"The rest of the App consists of seven components."},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"UI: The UI of the App."},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"Duke: The main logic handler of the App."},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"Launcher: The handler between UI and Duke."},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"Commons: The control variable of the App."},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"Storage: Reads data from, and writes data to, the hard disk."},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"Commands: The actions of the program to interact with Storage."},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"TaskList: Define the structure of each Task to track."},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"### How the architecture components interact with each other"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"The Sequence Diagram below shows how the components interact with each other for the scenario where the user uses the Event command."},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"![Image of SequenceDiagram](https://github.com/HongJiancheng/ip/blob/master/docs/images/sequenceDiagram.png?raw\u003dtrue)"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"### Storage component"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"![Image of Storage Class Diagram](https://github.com/HongJiancheng/ip/blob/master/docs/images/class%20diagram.png?raw\u003dtrue)"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"The Storage component is the handler of the temporary storage to storage file. It interacts TaskList Class which contains Task Class, and Task Class have many Subclasses for different scenarios."},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"It will auto save the program into a .txt file once a change has been made to the TaskList."},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"## Implementation"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"Duplicate Implementation"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"The ```duplicate``` feature displays non-unique Tasks in the Duke. It is achieved by the DuplicateCommand Class which made use of isEquals method in Task Class."},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"##### Design consideration:"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"Aspect: Duplicate can otherwise be implemented"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"###### Alternative 1 (current choice): Allow user to obtain results in the index ascending order."},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"Pros: Easy to implement. \u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"Cons: If there is a huge amount of return result, it may be difficult for user to view."},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"###### Alternative 2: Allow user to view part of the result."},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"Pros: More readable result to user if there is huge return data.\u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"Cons: more difficult to implement."},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"## Product scope"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"### Target user profile"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":"* Is a lay person who used to interact with chat-bot."},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"* prefer desktop apps over other types."},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"* can type fast."},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"* prefers typing to mouse interactions."},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":"### Value proposition"},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"manage Tasks faster than a typical mouse driven app. Allows the user to better manage the tasks."},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":62,"author":{"gitId":"HongJiancheng"},"content":"## User Stories"},{"lineNumber":63,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":64,"author":{"gitId":"HongJiancheng"},"content":"|Priority| As a … | I want to … | So that I can… |"},{"lineNumber":65,"author":{"gitId":"HongJiancheng"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":66,"author":{"gitId":"HongJiancheng"},"content":"|* * * |New user|add tasks into Task Manager|track my pending Tasks|"},{"lineNumber":67,"author":{"gitId":"HongJiancheng"},"content":"|* * * |New user|list all tasks stored in the Task Manager|find all the recorded tasks|"},{"lineNumber":68,"author":{"gitId":"HongJiancheng"},"content":"|* * * |New user|delete a task|remove Task that is irrelevant|"},{"lineNumber":69,"author":{"gitId":"HongJiancheng"},"content":"|* * * |New user|set a task as done|to track the progression of the Task Manager|"},{"lineNumber":70,"author":{"gitId":"HongJiancheng"},"content":"|* * * |New user|add a task with deadline|remind myself about the remaining time|"},{"lineNumber":71,"author":{"gitId":"HongJiancheng"},"content":"|* * * |New user|add a future task with start date|remind myself to prepare for it|"},{"lineNumber":72,"author":{"gitId":"HongJiancheng"},"content":"|* * * |User|find tasks with key word|find specific task easily|"},{"lineNumber":73,"author":{"gitId":"HongJiancheng"},"content":"|* * * |User|have a help guide|view the usage of the app|"},{"lineNumber":74,"author":{"gitId":"HongJiancheng"},"content":"|* * * |User|check duplicate tasks in the Task Manager|those repeated tasks could be delete|"},{"lineNumber":75,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":76,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":77,"author":{"gitId":"HongJiancheng"},"content":"## Non-Functional Requirements"},{"lineNumber":78,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":79,"author":{"gitId":"HongJiancheng"},"content":"* Should work on any mainstream OS as long as it has Java 11 or above installed."},{"lineNumber":80,"author":{"gitId":"HongJiancheng"},"content":"* Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage."},{"lineNumber":81,"author":{"gitId":"HongJiancheng"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse"},{"lineNumber":82,"author":{"gitId":"HongJiancheng"},"content":"* Should load from and save to from a text files"},{"lineNumber":83,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":84,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":85,"author":{"gitId":"HongJiancheng"},"content":"## Glossary"},{"lineNumber":86,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":87,"author":{"gitId":"HongJiancheng"},"content":"* *Mainstream OS:* Windows, Linux, Unix, OS-X."},{"lineNumber":88,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":89,"author":{"gitId":"HongJiancheng"},"content":"## Instructions for manual testing"},{"lineNumber":90,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":91,"author":{"gitId":"HongJiancheng"},"content":"### Launch and Shutdown"},{"lineNumber":92,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":93,"author":{"gitId":"HongJiancheng"},"content":"1. Initial launch"},{"lineNumber":94,"author":{"gitId":"HongJiancheng"},"content":"    1. Download the jar file and copy into an empty folder."},{"lineNumber":95,"author":{"gitId":"HongJiancheng"},"content":"    2. Double click the jar file to open the program"},{"lineNumber":96,"author":{"gitId":"HongJiancheng"},"content":"    3. Type bye to exit from the program."},{"lineNumber":97,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":98,"author":{"gitId":"HongJiancheng"},"content":"2. Re-launch the app by double clicking the jar file."},{"lineNumber":99,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":100,"author":{"gitId":"HongJiancheng"},"content":"### `todo` - Add todo to Task List"},{"lineNumber":101,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":102,"author":{"gitId":"HongJiancheng"},"content":"todo will create a todo Task with descriptions followed and add to Task List."},{"lineNumber":103,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":104,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":105,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":106,"author":{"gitId":"HongJiancheng"},"content":"`todo read book`"},{"lineNumber":107,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":108,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":109,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":110,"author":{"gitId":"HongJiancheng"},"content":"`[T][✘] read book`"},{"lineNumber":111,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":112,"author":{"gitId":"HongJiancheng"},"content":"### `deadline` - Add deadline to Task List"},{"lineNumber":113,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":114,"author":{"gitId":"HongJiancheng"},"content":"deadline will create a deadline Task with descriptions and deadline followed and add to Task List."},{"lineNumber":115,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":116,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":117,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":118,"author":{"gitId":"HongJiancheng"},"content":"`deadline return book /by 2020-09-30`"},{"lineNumber":119,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":120,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":121,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":122,"author":{"gitId":"HongJiancheng"},"content":"`[D][✘] return book (by: Sep 30 2020)`"},{"lineNumber":123,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":124,"author":{"gitId":"HongJiancheng"},"content":"### `event` - Add event to Task List"},{"lineNumber":125,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":126,"author":{"gitId":"HongJiancheng"},"content":"event will create an event Task with descriptions and start date followed and add to Task List."},{"lineNumber":127,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":128,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":129,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":130,"author":{"gitId":"HongJiancheng"},"content":"`event team meeting /at 2020-10-01`"},{"lineNumber":131,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":132,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":133,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":134,"author":{"gitId":"HongJiancheng"},"content":"`[E][✘] team meeting (at: Oct 1 2020)`"},{"lineNumber":135,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":136,"author":{"gitId":"HongJiancheng"},"content":"### `list` - List all Tasks from Task List"},{"lineNumber":137,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":138,"author":{"gitId":"HongJiancheng"},"content":"list will print out all Tasks stored in Task List."},{"lineNumber":139,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":140,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":141,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":142,"author":{"gitId":"HongJiancheng"},"content":"`list`"},{"lineNumber":143,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":144,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":145,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":146,"author":{"gitId":"HongJiancheng"},"content":"` 1. [T][✘] read book`"},{"lineNumber":147,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":148,"author":{"gitId":"HongJiancheng"},"content":"` 2. [D][✘] return book (by: Sep 30 2020)`"},{"lineNumber":149,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":150,"author":{"gitId":"HongJiancheng"},"content":"` 3. [E][✘] team meeting (at: Oct 1 2020)`"},{"lineNumber":151,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":152,"author":{"gitId":"HongJiancheng"},"content":"### `delete` - Delete a Task from Task List"},{"lineNumber":153,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":154,"author":{"gitId":"HongJiancheng"},"content":"delete will remove the stated Task stored in Task List."},{"lineNumber":155,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":156,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":157,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":158,"author":{"gitId":"HongJiancheng"},"content":"`delete 1`"},{"lineNumber":159,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":160,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":161,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":162,"author":{"gitId":"HongJiancheng"},"content":"` Noted. I\u0027ve removed this task: `"},{"lineNumber":163,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":164,"author":{"gitId":"HongJiancheng"},"content":"`   [T][✘] read book`"},{"lineNumber":165,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":166,"author":{"gitId":"HongJiancheng"},"content":"### `done` - Set a Task\u0027s status to done"},{"lineNumber":167,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":168,"author":{"gitId":"HongJiancheng"},"content":"done will set the stated Task\u0027s status stored in Task List."},{"lineNumber":169,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":170,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":171,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":172,"author":{"gitId":"HongJiancheng"},"content":"`done 1`"},{"lineNumber":173,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":174,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":175,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":176,"author":{"gitId":"HongJiancheng"},"content":"` Nice! I\u0027ve marked this task as done:`"},{"lineNumber":177,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":178,"author":{"gitId":"HongJiancheng"},"content":"`   [E][✓] team meeting (at: Oct 1 2020)`"},{"lineNumber":179,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":180,"author":{"gitId":"HongJiancheng"},"content":"### `duplicate` - Check Tasks which are identical"},{"lineNumber":181,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":182,"author":{"gitId":"HongJiancheng"},"content":"duplicate will list all the Tasks which are not unique in Task List."},{"lineNumber":183,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":184,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":185,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":186,"author":{"gitId":"HongJiancheng"},"content":"`duplicate`"},{"lineNumber":187,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":188,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":189,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":190,"author":{"gitId":"HongJiancheng"},"content":"` Here are duplicated tasks in your list:`"},{"lineNumber":191,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":192,"author":{"gitId":"HongJiancheng"},"content":"` 4. [D][✓] return book (by: Sep 20 2020)`"},{"lineNumber":193,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":194,"author":{"gitId":"HongJiancheng"},"content":"` Duplicates:`"},{"lineNumber":195,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":196,"author":{"gitId":"HongJiancheng"},"content":"` 4. [D][✓] return book (by: Sep 20 2020)`"},{"lineNumber":197,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":198,"author":{"gitId":"HongJiancheng"},"content":"` ----------------------------------`"},{"lineNumber":199,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":200,"author":{"gitId":"HongJiancheng"},"content":"### `find` - Find Tasks contains search term stated"},{"lineNumber":201,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":202,"author":{"gitId":"HongJiancheng"},"content":"find will search through the Task List and list all the tasks contains search term."},{"lineNumber":203,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":204,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":205,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":206,"author":{"gitId":"HongJiancheng"},"content":"`find book`"},{"lineNumber":207,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":208,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":209,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":210,"author":{"gitId":"HongJiancheng"},"content":"` Here are the matching tasks in your list:`"},{"lineNumber":211,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":212,"author":{"gitId":"HongJiancheng"},"content":"    `1. [D][✘] return book (by: Sep 20 2020)`"},{"lineNumber":213,"author":{"gitId":"HongJiancheng"},"content":"    "},{"lineNumber":214,"author":{"gitId":"HongJiancheng"},"content":"    `2. [T][✓] read book`"},{"lineNumber":215,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":216,"author":{"gitId":"HongJiancheng"},"content":"### `help` - Show Help Menu"},{"lineNumber":217,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":218,"author":{"gitId":"HongJiancheng"},"content":"Print out help menu contains all the commands use-cases."},{"lineNumber":219,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":220,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":221,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":222,"author":{"gitId":"HongJiancheng"},"content":"`help`"},{"lineNumber":223,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":224,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":225,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":226,"author":{"gitId":"HongJiancheng"},"content":"`  Introduction:`"},{"lineNumber":227,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":228,"author":{"gitId":"HongJiancheng"},"content":"`This is a Chat Bot to manage a person\u0027s Task.`"},{"lineNumber":229,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":230,"author":{"gitId":"HongJiancheng"},"content":"`Usage:`"},{"lineNumber":231,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":232,"author":{"gitId":"HongJiancheng"},"content":"`  help`"},{"lineNumber":233,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":234,"author":{"gitId":"HongJiancheng"},"content":"`    -- Print out help information`"},{"lineNumber":235,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":236,"author":{"gitId":"HongJiancheng"},"content":"`  bye`"},{"lineNumber":237,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":238,"author":{"gitId":"HongJiancheng"},"content":"`    -- Exit from the program`"},{"lineNumber":239,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":240,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":241,"author":{"gitId":"HongJiancheng"},"content":"### `bye` - Exit Duke"},{"lineNumber":242,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":243,"author":{"gitId":"HongJiancheng"},"content":"bye will stop the program and exit."},{"lineNumber":244,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":245,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":246,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":247,"author":{"gitId":"HongJiancheng"},"content":"`bye`"},{"lineNumber":248,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":249,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":250,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":251,"author":{"gitId":"HongJiancheng"},"content":"` Bye. Hope to see you again soon!`"},{"lineNumber":252,"author":{"gitId":"HongJiancheng"},"content":"    "}],"authorContributionMap":{"HongJiancheng":252}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"# Duke"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"Duke is a GUI program that allows user to perform Task Managing with Chat-Bot like interface."},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"It allows users to manage their tasks efficiently and can be purposed for different users."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"Useful links:"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"* [Ui Image](Ui.PNG)"}],"authorContributionMap":{"HongJiancheng":7,"-":2}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":"Duke is a graphic user interface task manager with command using Chat Bot Interface."},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"It can help you keep track of the list of tasks."},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"## Quick Start"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"2. Download the latest Duke.jar."},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"3. Copy the file to the folder you want to use as the home folder for your Task Manager."},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"4. Double click to open the Duke.jar file."},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"## Features"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"Duke supports three different types of Task: Todo, Deadline, and Event."},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"It could add, delete, set done and list task."},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"It could find the tasks with keyword, and check duplicate tasks."},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"It could auto save and load data into a saved file."},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"### Todo"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"The simplest Task. It has description, and a status as done or not."},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"### Deadline"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"The Task with a deadline. It can store a date as deadline of the given task."},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"### Event"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"The Task with a start date. It can store a date as start date of the given task."},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"### Add"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"Add a Task to the Task List."},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"### Delete"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"Delete a specific Task from the Task List."},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"### Set Done"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"Set a Task\u0027s status as done."},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"### List"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"List all the lists from Task List."},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"### Find"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"Find the Tasks with keywords and list them out."},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"### Duplicate"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"Show the Tasks which are duplicated."},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"### Help"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"Show the helping guide."},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"### Auto Save and Load"},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"Task List changes will be auto stored as a file, and loaded in next run."},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":"## Usage"},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"### `todo` - Add todo to Task List"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"todo will create a todo Task with descriptions followed and add to Task List."},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":"`todo read book`"},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":62,"author":{"gitId":"HongJiancheng"},"content":"`[T][✘] read book`"},{"lineNumber":63,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":64,"author":{"gitId":"HongJiancheng"},"content":"### `deadline` - Add deadline to Task List"},{"lineNumber":65,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":66,"author":{"gitId":"HongJiancheng"},"content":"deadline will create a deadline Task with descriptions and deadline followed and add to Task List."},{"lineNumber":67,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":68,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":69,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":70,"author":{"gitId":"HongJiancheng"},"content":"`deadline return book /by 2020-09-30`"},{"lineNumber":71,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":72,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":73,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":74,"author":{"gitId":"HongJiancheng"},"content":"`[D][✘] return book (by: Sep 30 2020)`"},{"lineNumber":75,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":76,"author":{"gitId":"HongJiancheng"},"content":"### `event` - Add event to Task List"},{"lineNumber":77,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":78,"author":{"gitId":"HongJiancheng"},"content":"event will create an event Task with descriptions and start date followed and add to Task List."},{"lineNumber":79,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":80,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":81,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":82,"author":{"gitId":"HongJiancheng"},"content":"`event team meeting /at 2020-10-01`"},{"lineNumber":83,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":84,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":85,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":86,"author":{"gitId":"HongJiancheng"},"content":"`[E][✘] team meeting (at: Oct 1 2020)`"},{"lineNumber":87,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":88,"author":{"gitId":"HongJiancheng"},"content":"### `list` - List all Tasks from Task List"},{"lineNumber":89,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":90,"author":{"gitId":"HongJiancheng"},"content":"list will print out all Tasks stored in Task List."},{"lineNumber":91,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":92,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":93,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":94,"author":{"gitId":"HongJiancheng"},"content":"`list`"},{"lineNumber":95,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":96,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":97,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":98,"author":{"gitId":"HongJiancheng"},"content":"` 1. [T][✘] read book`"},{"lineNumber":99,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":100,"author":{"gitId":"HongJiancheng"},"content":"` 2. [D][✘] return book (by: Sep 30 2020)`"},{"lineNumber":101,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":102,"author":{"gitId":"HongJiancheng"},"content":"` 3. [E][✘] team meeting (at: Oct 1 2020)`"},{"lineNumber":103,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":104,"author":{"gitId":"HongJiancheng"},"content":"### `delete` - Delete a Task from Task List"},{"lineNumber":105,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":106,"author":{"gitId":"HongJiancheng"},"content":"delete will remove the stated Task stored in Task List."},{"lineNumber":107,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":108,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":109,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":110,"author":{"gitId":"HongJiancheng"},"content":"`delete 1`"},{"lineNumber":111,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":112,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":113,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":114,"author":{"gitId":"HongJiancheng"},"content":"` Noted. I\u0027ve removed this task: `"},{"lineNumber":115,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":116,"author":{"gitId":"HongJiancheng"},"content":"`   [T][✘] read book`"},{"lineNumber":117,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":118,"author":{"gitId":"HongJiancheng"},"content":"### `done` - Set a Task\u0027s status to done"},{"lineNumber":119,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":120,"author":{"gitId":"HongJiancheng"},"content":"done will set the stated Task\u0027s status stored in Task List."},{"lineNumber":121,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":122,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":123,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":124,"author":{"gitId":"HongJiancheng"},"content":"`done 1`"},{"lineNumber":125,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":126,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":127,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":128,"author":{"gitId":"HongJiancheng"},"content":"` Nice! I\u0027ve marked this task as done:`"},{"lineNumber":129,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":130,"author":{"gitId":"HongJiancheng"},"content":"`   [E][✓] team meeting (at: Oct 1 2020)`"},{"lineNumber":131,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":132,"author":{"gitId":"HongJiancheng"},"content":"### `duplicate` - Check Tasks which are identical"},{"lineNumber":133,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":134,"author":{"gitId":"HongJiancheng"},"content":"duplicate will list all the Tasks which are not unique in Task List."},{"lineNumber":135,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":136,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":137,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":138,"author":{"gitId":"HongJiancheng"},"content":"`duplicate`"},{"lineNumber":139,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":140,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":141,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":142,"author":{"gitId":"HongJiancheng"},"content":"` Here are duplicated tasks in your list:`"},{"lineNumber":143,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":144,"author":{"gitId":"HongJiancheng"},"content":"` 4. [D][✓] return book (by: Sep 20 2020)`"},{"lineNumber":145,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":146,"author":{"gitId":"HongJiancheng"},"content":"` Duplicates:`"},{"lineNumber":147,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":148,"author":{"gitId":"HongJiancheng"},"content":"` 4. [D][✓] return book (by: Sep 20 2020)`"},{"lineNumber":149,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":150,"author":{"gitId":"HongJiancheng"},"content":"` ----------------------------------`"},{"lineNumber":151,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":152,"author":{"gitId":"HongJiancheng"},"content":"### `find` - Find Tasks contains search term stated"},{"lineNumber":153,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":154,"author":{"gitId":"HongJiancheng"},"content":"find will search through the Task List and list all the tasks contains search term."},{"lineNumber":155,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":156,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":157,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":158,"author":{"gitId":"HongJiancheng"},"content":"`find book`"},{"lineNumber":159,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":160,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":161,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":162,"author":{"gitId":"HongJiancheng"},"content":"` Here are the matching tasks in your list:`"},{"lineNumber":163,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":164,"author":{"gitId":"HongJiancheng"},"content":"    `1. [D][✘] return book (by: Sep 20 2020)`"},{"lineNumber":165,"author":{"gitId":"HongJiancheng"},"content":"    "},{"lineNumber":166,"author":{"gitId":"HongJiancheng"},"content":"    `2. [T][✓] read book`"},{"lineNumber":167,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":168,"author":{"gitId":"HongJiancheng"},"content":"### `help` - Show Help Menu"},{"lineNumber":169,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":170,"author":{"gitId":"HongJiancheng"},"content":"Print out help menu contains all the commands use-cases."},{"lineNumber":171,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":172,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":173,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":174,"author":{"gitId":"HongJiancheng"},"content":"`help`"},{"lineNumber":175,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":176,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":177,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":178,"author":{"gitId":"HongJiancheng"},"content":"`  Introduction:`"},{"lineNumber":179,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":180,"author":{"gitId":"HongJiancheng"},"content":"`This is a Chat Bot to manage a person\u0027s Task.`"},{"lineNumber":181,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":182,"author":{"gitId":"HongJiancheng"},"content":"`Usage:`"},{"lineNumber":183,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":184,"author":{"gitId":"HongJiancheng"},"content":"`  help`"},{"lineNumber":185,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":186,"author":{"gitId":"HongJiancheng"},"content":"`    -- Print out help information`"},{"lineNumber":187,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":188,"author":{"gitId":"HongJiancheng"},"content":"`  bye`"},{"lineNumber":189,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":190,"author":{"gitId":"HongJiancheng"},"content":"`    -- Exit from the program`"},{"lineNumber":191,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":192,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":193,"author":{"gitId":"HongJiancheng"},"content":"### `bye` - Exit Duke"},{"lineNumber":194,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":195,"author":{"gitId":"HongJiancheng"},"content":"bye will stop the program and exit."},{"lineNumber":196,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":197,"author":{"gitId":"HongJiancheng"},"content":"Example of usage:"},{"lineNumber":198,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":199,"author":{"gitId":"HongJiancheng"},"content":"`bye`"},{"lineNumber":200,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":201,"author":{"gitId":"HongJiancheng"},"content":"Expected outcome:"},{"lineNumber":202,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":203,"author":{"gitId":"HongJiancheng"},"content":"` Bye. Hope to see you again soon!`"},{"lineNumber":204,"author":{"gitId":"HongJiancheng"},"content":"    "}],"authorContributionMap":{"HongJiancheng":204}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"HongJiancheng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"HongJiancheng"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":65,"author":{"gitId":"HongJiancheng"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":67,"author":{"gitId":"HongJiancheng"},"content":":init"},{"lineNumber":68,"author":{"gitId":"HongJiancheng"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":70,"author":{"gitId":"HongJiancheng"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":72,"author":{"gitId":"HongJiancheng"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"HongJiancheng"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"HongJiancheng"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"HongJiancheng"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":77,"author":{"gitId":"HongJiancheng"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"HongJiancheng"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":80,"author":{"gitId":"HongJiancheng"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":82,"author":{"gitId":"HongJiancheng"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"HongJiancheng"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":85,"author":{"gitId":"HongJiancheng"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":87,"author":{"gitId":"HongJiancheng"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"HongJiancheng"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":90,"author":{"gitId":"HongJiancheng"},"content":":end"},{"lineNumber":91,"author":{"gitId":"HongJiancheng"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"HongJiancheng"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":94,"author":{"gitId":"HongJiancheng"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"HongJiancheng"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"HongJiancheng"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"HongJiancheng"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"HongJiancheng"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":100,"author":{"gitId":"HongJiancheng"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"HongJiancheng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":103,"author":{"gitId":"HongJiancheng"},"content":":omega"}],"authorContributionMap":{"HongJiancheng":103}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"public class DialogBox extends HBox {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    private Label dialog;"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    private ImageView displayPicture;"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"            fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"        dialog.setText(text);"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"        displayPicture.setImage(img);"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"    private void flip() {"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"        Collections.reverse(tmp);"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"        return new DialogBox(text, img);"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":"        db.flip();"},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"        return db;"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":56}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"    private TaskList taskList \u003d new TaskList();"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    private Storage store \u003d new Storage(taskList);"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    private Parser parser \u003d new Parser();"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"    String getResponse(String input) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"        while (!store.getIsExit()) {"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"            try {"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"                return parser.getCommand(input, store, ui, taskList);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"            } catch (Exception e) {"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"                return \"OOPS!!! \" + e.getMessage();"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    boolean getExit() {"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"        return store.getIsExit();"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"HongJiancheng":26,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"            stage.getIcons().add(new Image(\"/images/Icon.png\"));"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"import java.util.Timer;"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"import java.util.TimerTask;"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":" */"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"        String greet \u003d \" Hello! I\u0027m Duke\\n What can I do for you?\";"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"                DialogBox.getDukeDialog(greet, dukeImage));"},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"        duke \u003d d;"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"    @FXML"},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":"    private void handleUserInput() {"},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":"        userInput.clear();"},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":"        if (duke.getExit()) {"},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":"            exit();"},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":63,"author":{"gitId":"HongJiancheng"},"content":"    private void exit() {"},{"lineNumber":64,"author":{"gitId":"HongJiancheng"},"content":"        TimerTask timerTask \u003d new TimerTask() {"},{"lineNumber":65,"author":{"gitId":"HongJiancheng"},"content":"            @Override"},{"lineNumber":66,"author":{"gitId":"HongJiancheng"},"content":"            public void run() {"},{"lineNumber":67,"author":{"gitId":"HongJiancheng"},"content":"                Platform.exit();"},{"lineNumber":68,"author":{"gitId":"HongJiancheng"},"content":"                System.exit(0);"},{"lineNumber":69,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"HongJiancheng"},"content":"        };"},{"lineNumber":71,"author":{"gitId":"HongJiancheng"},"content":"        Timer delay \u003d new Timer();"},{"lineNumber":72,"author":{"gitId":"HongJiancheng"},"content":"        delay.schedule(timerTask, 500);"},{"lineNumber":73,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":74}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.DuplicateCommand;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.EventCommand;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.FindCommand;"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.HelpCommand;"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.ListCommand;"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":" * Parser class handles command parser and identify different keywords with switch cases."},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":" */"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    public String getCommand(String input, Storage store, Ui ui, TaskList taskList) throws Exception {"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        int index;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"        String command;"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"        String others;"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"        if (input.contains(\" \")) {"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"            command \u003d input.split(\" \",2)[0];"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"            others \u003d input.split(\" \",2)[1];"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"            command \u003d input;"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"            others \u003d \"\";"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"        switch (command) {"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"        case \"bye\":"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"            return new ByeCommand().execute(others,ui,store,taskList);"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"        case \"list\":"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"            return new ListCommand().execute(others,ui,store,taskList);"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"        case \"done\":"},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"            return new DoneCommand().execute(others,ui,store,taskList);"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"        case \"delete\":"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"            return new DeleteCommand().execute(others,ui,store,taskList);"},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"        case \"todo\":"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"            return new TodoCommand().execute(others,ui,store,taskList);"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"        case \"deadline\":"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"            return new DeadlineCommand().execute(others,ui,store,taskList);"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"        case \"event\":"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"            return new EventCommand().execute(others,ui,store,taskList);"},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"        case \"find\":"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"            return new FindCommand().execute(others,ui,store,taskList);"},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"        case \"duplicate\":"},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"            return new DuplicateCommand().execute(others,ui,store,taskList);"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"        case \"help\":"},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":"            return new HelpCommand().execute(others,ui,store,taskList);"},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"        default:"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":55}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.Todo;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.Deadline;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"import java.io.FileReader;"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"import java.io.BufferedReader;"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"import java.io.FileWriter;"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"import java.io.BufferedWriter;"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":" * Storage class handles List of task as tempStorage."},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":" */"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    private static final String home \u003d \"data\";"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    private static java.nio.file.Path storageFilePath \u003d java.nio.file.Paths.get(home, \"duke.txt\");"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    private static boolean directoryExists \u003d java.nio.file.Files.exists(storageFilePath);"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    private boolean isExit;"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"    public Storage(TaskList taskList) {"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"        isExit \u003d false;"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"            loadFromFile(taskList);"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"            System.out.println(e);"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"        } catch (DukeException a) {"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"            System.out.println(a);"},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"    public void loadFromFile(TaskList tempStorage) throws IOException, DukeException {"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"        File directory \u003d new File(home);"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"        if (!directoryExists) {"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"            directory.mkdir();"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"        File storage \u003d storageFilePath.toFile();"},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"        BufferedReader fileReader \u003d new BufferedReader(new FileReader(storage));"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"        String savedTask;"},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"        while ((savedTask \u003d fileReader.readLine()) !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"            String taskType \u003d savedTask.split(\" \\\\| \",4)[0];"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":"            String isDone \u003d savedTask.split(\" \\\\| \",4)[1];"},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":"            String taskDescription \u003d savedTask.split(\" \\\\| \",4)[2];"},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"            switch (taskType) {"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"            case \"T\":"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":"                tempStorage.addTask(new Todo(taskDescription));"},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"                if (isDone.matches(\"1\")) {"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"                    tempStorage.setDoneAt(tempStorage.getSize() - 1);"},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":"            case \"D\":"},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":"                String taskDeadline \u003d savedTask.split(\" \\\\| \",4)[3];"},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"                tempStorage.addTask(new Deadline(taskDescription,taskDeadline));"},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":"                if (isDone.matches(\"1\")) {"},{"lineNumber":62,"author":{"gitId":"HongJiancheng"},"content":"                    tempStorage.setDoneAt(tempStorage.getSize() - 1);"},{"lineNumber":63,"author":{"gitId":"HongJiancheng"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"HongJiancheng"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"HongJiancheng"},"content":"            case \"E\":"},{"lineNumber":66,"author":{"gitId":"HongJiancheng"},"content":"                String taskEventTime \u003d savedTask.split(\" \\\\| \",4)[3];"},{"lineNumber":67,"author":{"gitId":"HongJiancheng"},"content":"                tempStorage.addTask(new Event(taskDescription,taskEventTime));"},{"lineNumber":68,"author":{"gitId":"HongJiancheng"},"content":"                if (isDone.matches(\"1\")) {"},{"lineNumber":69,"author":{"gitId":"HongJiancheng"},"content":"                    tempStorage.setDoneAt(tempStorage.getSize() - 1);"},{"lineNumber":70,"author":{"gitId":"HongJiancheng"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"HongJiancheng"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"HongJiancheng"},"content":"            default:"},{"lineNumber":73,"author":{"gitId":"HongJiancheng"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"HongJiancheng"},"content":"        fileReader.close();"},{"lineNumber":77,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":79,"author":{"gitId":"HongJiancheng"},"content":"    public void saveToFile(TaskList tempStorage) throws IOException {"},{"lineNumber":80,"author":{"gitId":"HongJiancheng"},"content":"        File storage \u003d storageFilePath.toFile();"},{"lineNumber":81,"author":{"gitId":"HongJiancheng"},"content":"        BufferedWriter toSaveTask \u003d new BufferedWriter(new FileWriter(storage));"},{"lineNumber":82,"author":{"gitId":"HongJiancheng"},"content":"        for (int i \u003d 0;i \u003c tempStorage.getSize();i++) {"},{"lineNumber":83,"author":{"gitId":"HongJiancheng"},"content":"            toSaveTask.write(outputTaskForSave(tempStorage.getTask(i)));"},{"lineNumber":84,"author":{"gitId":"HongJiancheng"},"content":"            if (i !\u003d tempStorage.getSize() - 1) {"},{"lineNumber":85,"author":{"gitId":"HongJiancheng"},"content":"                toSaveTask.newLine();"},{"lineNumber":86,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"HongJiancheng"},"content":"        toSaveTask.close();"},{"lineNumber":89,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":91,"author":{"gitId":"HongJiancheng"},"content":"    public String outputTaskForSave(Task toSave) {"},{"lineNumber":92,"author":{"gitId":"HongJiancheng"},"content":"        int isDone \u003d 0;"},{"lineNumber":93,"author":{"gitId":"HongJiancheng"},"content":"        if (toSave.getIsDone()) {"},{"lineNumber":94,"author":{"gitId":"HongJiancheng"},"content":"            isDone \u003d 1;"},{"lineNumber":95,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"HongJiancheng"},"content":"        if (toSave instanceof Deadline) {"},{"lineNumber":97,"author":{"gitId":"HongJiancheng"},"content":"            return \"D | \" + isDone + \" | \" + toSave.getDescription() + \" | \" + ((Deadline) toSave).getByForFile();"},{"lineNumber":98,"author":{"gitId":"HongJiancheng"},"content":"        } else if (toSave instanceof Event) {"},{"lineNumber":99,"author":{"gitId":"HongJiancheng"},"content":"            return \"E | \" + isDone + \" | \" + toSave.getDescription() + \" | \" + ((Event) toSave).getAtForFile();"},{"lineNumber":100,"author":{"gitId":"HongJiancheng"},"content":"        } else if (toSave instanceof Todo) {"},{"lineNumber":101,"author":{"gitId":"HongJiancheng"},"content":"            return \"T | \" + isDone + \" | \" + toSave.getDescription();"},{"lineNumber":102,"author":{"gitId":"HongJiancheng"},"content":"        } else {"},{"lineNumber":103,"author":{"gitId":"HongJiancheng"},"content":"            return \"\";"},{"lineNumber":104,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":107,"author":{"gitId":"HongJiancheng"},"content":"    public void toExit() {"},{"lineNumber":108,"author":{"gitId":"HongJiancheng"},"content":"        isExit \u003d true;"},{"lineNumber":109,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":111,"author":{"gitId":"HongJiancheng"},"content":"    public boolean getIsExit() {"},{"lineNumber":112,"author":{"gitId":"HongJiancheng"},"content":"        return isExit;"},{"lineNumber":113,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":" * Ui class handles all the print out to users, and read input from users."},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":" */"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    protected Scanner in \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String indentPrint(String toPrint) {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        return \" \" + toPrint + \"\" + \"\\n\";"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    public String byeToUser() {"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        return indentPrint(\"Bye. Hope to see you again soon!\");"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    public String readCommand() {"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        return in.nextLine();"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":22}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"public class ByeCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"        storage.toExit();"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"        return ui.byeToUser();"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":12}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":" * An abstract Command Class to provide structure for"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":" * other commands."},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":" */"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    protected String commandBody;"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"    public Command(String fullCommand) {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        this.commandBody \u003d fullCommand;"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    public Command() {"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"    public abstract String execute(String others, Ui ui, Storage storage,"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"                                   TaskList taskList) throws DukeException, IOException;"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":27}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException, IOException {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        if (others.isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        taskList.addDeadlineToTemp(others);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"  \" + taskList.getTask(taskList.getSize() - 1).toString());"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        storage.saveToFile(taskList);"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":22}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException, IOException {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        if (others.isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"The index of a delete command cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        int index \u003d Integer.parseInt(others);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"  \" + taskList.deleteTaskAt(index - 1).toString());"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        storage.saveToFile(taskList);"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":21}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException, IOException {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        if (others.isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"The index of a done command cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        int index \u003d Integer.parseInt(others);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        taskList.setDoneAt(index - 1);"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"  \" + taskList.getTask(index - 1).toString());"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        storage.saveToFile(taskList);"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":22}},{"path":"src/main/java/duke/commands/DuplicateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class DuplicateCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException, IOException {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        int[][] duplicate \u003d new int[taskList.getSize()][taskList.getSize()];"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"        int index;"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        boolean noDuplicate \u003d true;"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"            index \u003d 1;"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"            for (int j \u003d i + 1; j \u003c taskList.getSize(); j++) {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"                if (duplicate[j][0] \u003d\u003d 0 \u0026\u0026 duplicate[i][0] !\u003d -1) {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"                    if (taskList.getTask(i).isEquals(taskList.getTask(j))) {"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"                        duplicate[i][0]++;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"                        duplicate[i][index] \u003d j;"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"                        duplicate[j][0] \u003d -1;"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"                        index++;"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"                        noDuplicate \u003d false;"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"                    }"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint;"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"        if (noDuplicate) {"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"            toPrint \u003d ui.indentPrint(\"There is no duplicated task in your list.\");"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"            toPrint \u003d ui.indentPrint(\"Here are duplicated tasks in your list:\");"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"                if (duplicate[i][0] \u003e 0) {"},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"                    toPrint +\u003d ui.indentPrint((i + 1) + \". \" + taskList.getTask(i).toString());"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"                    toPrint +\u003d ui.indentPrint(\"Duplicates:\");"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"                    for (int j \u003d 1; j \u003c\u003d duplicate[i][0]; j++) {"},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"                        toPrint +\u003d ui.indentPrint((duplicate[i][j] + 1)"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"                                + \". \" + taskList.getTask(duplicate[i][j]).toString());"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"                    }"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"                    toPrint +\u003d ui.indentPrint(\"----------------------------------\");"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":48}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class EventCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException, IOException {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        if (others.isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        taskList.addEventToTemp(others);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"  \" + taskList.getTask(taskList.getSize() - 1).toString());"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        storage.saveToFile(taskList);"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":22}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    protected TaskList findResult;"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    public FindCommand() {"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        findResult \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        if (others.isEmpty()) {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"The find term cannot be empty.\");"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"        for (int i \u003d 0;i \u003c taskList.getSize();i++) {"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"            if (taskList.getTask(i).getDescription().contains(others)) {"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"                findResult.addTask(taskList.getTask(i));"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Here are the matching tasks in your list:\");"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"        for (int j \u003d 0;j \u003c findResult.getSize();j++) {"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"            toPrint +\u003d ui.indentPrint((j + 1) + \". \" + findResult.getTask(j).toString());"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":32}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    private String helpMenu \u003d \"Introduction:\\n\""},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"            + \"This is a Chat Bot to manage a person\u0027s Task.\\n\\n\""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"            + \"Usage:\\n\""},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"            + \"  help\\n\""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Print out help information\\n\""},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"            + \"  bye\\n\""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Exit from the program\\n\""},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"            + \"  todo \u003cDESCRIPTION\u003e\\n\""},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Add a todo into the task manager\\n\""},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"            + \"  deadline \u003cDESCRIPTION\u003e /by \u003cDEADLINE in yyyy-mm-dd format\u003e\\n\""},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Add a deadline into the task manager\\n\""},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"            + \"  event \u003cDESCRIPTION\u003e /at \u003cSTART DATE in yyyy-mm-dd format\u003e\\n\""},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Add an event into the task manager\\n\""},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"            + \"  find \u003cKEYWORD\u003e\\n\""},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Find the Tasks contains the keyword\\n\""},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"            + \"  list\\n\""},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- List all the tasks stored in the task manager\\n\""},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"            + \"  delete \u003cTASK INDEX in integer\u003e\\n\""},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Delete a task which is indicated\\n\""},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\""},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"            + \"  done \u003cTASK INDEX in integer\u003e\\n\""},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"            + \"    -- Set a task which is indicated as done\\n\""},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"            + \"\\n\";"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"        return ui.indentPrint(helpMenu);"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":42}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Here are the tasks in your list:\");"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        for (int i \u003d 0;i \u003c taskList.getSize();i++) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            toPrint +\u003d ui.indentPrint((i + 1) + \". \" + taskList.getTask(i).toString());"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":17}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"public class TodoCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String execute(String others, Ui ui, Storage storage, TaskList taskList) throws DukeException, IOException {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        if (others.isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        taskList.addTodoToTemp(others);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        String toPrint \u003d ui.indentPrint(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"  \" + taskList.getTask(taskList.getSize() - 1).toString());"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        toPrint +\u003d ui.indentPrint(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        storage.saveToFile(taskList);"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        return toPrint;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":22}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":" * To test Deadline, please run DeadlineTest."},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":" */"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"public class Deadline extends Todo {"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    protected LocalDate by;"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    public Deadline(String description, String by) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"            this.by \u003d LocalDate.parse(by);"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"Date format is wrong, please use yyyy-mm-dd format.\");"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription() + \" (by: \" + getBy() + \")\";"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"    public String getBy() {"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"    public String getByForFile() {"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"    public boolean isEquals(Object toCompare) {"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":"        if (toCompare !\u003d null \u0026\u0026 toCompare.getClass() \u003d\u003d getClass()) {"},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"            if (this.by.equals(((Deadline) toCompare).by)) {"},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"                return super.isEquals(toCompare);"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":44}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"public class Event extends Todo {"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"    protected LocalDate at;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    public Event(String description, String at) {"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription() + \" (at: \" + getAt() + \")\";"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"    public String getAt() {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    public String getAtForFile() {"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    public boolean isEquals(Object toCompare) {"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"        if (toCompare !\u003d null \u0026\u0026 toCompare.getClass() \u003d\u003d getClass()) {"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"            if (this.at.equals(((Event) toCompare).at)) {"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"                return super.isEquals(toCompare);"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":34}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"    public abstract String getStatusIcon();"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"    public abstract void setDone();"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"    public abstract boolean getIsDone();"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"    public boolean isEquals(Object toCompare) {"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        if (toCompare !\u003d null \u0026\u0026 toCompare.getClass() \u003d\u003d getClass()) {"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"            if (this.description.equals(((Task) toCompare).description)) {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"                return true;"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"        return this.description;"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":33}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    private ArrayList\u003cTask\u003e tempStorage;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        tempStorage \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"    public void addTask(Task toAdd) {"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"        tempStorage.add(toAdd);"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"    public Task deleteTaskAt(int index) {"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"        return tempStorage.remove(index);"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":"    public Task getTask(int index) {"},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"        return tempStorage.get(index);"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":"    public int getSize() {"},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"        return tempStorage.size();"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"    public void setDoneAt(int index) {"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"        tempStorage.get(index).setDone();"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"    public void addTodoToTemp(String toAdd) {"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"        tempStorage.add(new Todo(toAdd));"},{"lineNumber":36,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":38,"author":{"gitId":"HongJiancheng"},"content":"    public void addDeadlineToTemp(String toAdd) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"HongJiancheng"},"content":"        if (!toAdd.contains(\" /by \")) {"},{"lineNumber":40,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"No /by found in command.\");"},{"lineNumber":41,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"HongJiancheng"},"content":"        String description \u003d toAdd.split(\" /by \")[0];"},{"lineNumber":43,"author":{"gitId":"HongJiancheng"},"content":"        if (toAdd.split(\" /by \").length \u003c 2) {"},{"lineNumber":44,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"No event time found after keyword /by .\");"},{"lineNumber":45,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"HongJiancheng"},"content":"        String by \u003d toAdd.split(\" /by \")[1];"},{"lineNumber":47,"author":{"gitId":"HongJiancheng"},"content":"        tempStorage.add(new Deadline(description,by));"},{"lineNumber":48,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":50,"author":{"gitId":"HongJiancheng"},"content":"    public void addEventToTemp(String toAdd) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"HongJiancheng"},"content":"        if (!toAdd.contains(\" /at \")) {"},{"lineNumber":52,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"No /at found in command.\");"},{"lineNumber":53,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"HongJiancheng"},"content":"        String description \u003d toAdd.split(\" /at \")[0];"},{"lineNumber":55,"author":{"gitId":"HongJiancheng"},"content":"        if (toAdd.split(\" /at \").length \u003c 2) {"},{"lineNumber":56,"author":{"gitId":"HongJiancheng"},"content":"            throw new DukeException(\"No event time found after keyword /at .\");"},{"lineNumber":57,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"HongJiancheng"},"content":"        String at \u003d toAdd.split(\" /at \")[1];"},{"lineNumber":59,"author":{"gitId":"HongJiancheng"},"content":"        tempStorage.add(new Event(description,at));"},{"lineNumber":60,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":61}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    public boolean getIsDone() {"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        return isDone;"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"    public void setDone() {"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":23,"author":{"gitId":"HongJiancheng"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"HongJiancheng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":25,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":27,"author":{"gitId":"HongJiancheng"},"content":"    public boolean isEquals(Object toCompare) {"},{"lineNumber":28,"author":{"gitId":"HongJiancheng"},"content":"        if (toCompare !\u003d null \u0026\u0026 toCompare.getClass() \u003d\u003d getClass()) {"},{"lineNumber":29,"author":{"gitId":"HongJiancheng"},"content":"            if (this.isDone \u003d\u003d ((Todo) toCompare).isDone) {"},{"lineNumber":30,"author":{"gitId":"HongJiancheng"},"content":"                return super.isEquals(toCompare);"},{"lineNumber":31,"author":{"gitId":"HongJiancheng"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"HongJiancheng"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"HongJiancheng"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"HongJiancheng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"HongJiancheng":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"public class DeadlineTest {"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"    public void deadline() {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        /**"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        Deadline deadline1 \u003d new Deadline(\"borrow book\", \"2020-09-10\");"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"        Deadline deadline2 \u003d new Deadline(\"read book\", \"2020-09-20\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        Deadline deadline3 \u003d new Deadline(\"return book\", \"2020-09-30\");"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(\"[D][✘] borrow book (by: Sep 10 2020)\", deadline1.toString());"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(\"[D][✘] read book (by: Sep 20 2020)\", deadline2.toString());"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(\"[D][✘] return book (by: Sep 30 2020)\", deadline3.toString());"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"         */"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":21}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(2,2);"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":13}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"import duke.tasks.Todo;"},{"lineNumber":4,"author":{"gitId":"HongJiancheng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":6,"author":{"gitId":"HongJiancheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":8,"author":{"gitId":"HongJiancheng"},"content":"public class TodoTest {"},{"lineNumber":9,"author":{"gitId":"HongJiancheng"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"    public void toDo() {"},{"lineNumber":11,"author":{"gitId":"HongJiancheng"},"content":"        /**"},{"lineNumber":12,"author":{"gitId":"HongJiancheng"},"content":"        Todo todo1 \u003d new Todo(\"borrow book\");"},{"lineNumber":13,"author":{"gitId":"HongJiancheng"},"content":"        Todo todo2 \u003d new Todo(\"read book\");"},{"lineNumber":14,"author":{"gitId":"HongJiancheng"},"content":"        Todo todo3 \u003d new Todo(\"return book\");"},{"lineNumber":15,"author":{"gitId":"HongJiancheng"},"content":""},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(\"[T][✘] borrow book\", todo1.toString());"},{"lineNumber":17,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(\"[T][✘] read book\", todo2.toString());"},{"lineNumber":18,"author":{"gitId":"HongJiancheng"},"content":"        assertEquals(\"[T][✘] return book\", todo3.toString());"},{"lineNumber":19,"author":{"gitId":"HongJiancheng"},"content":"         */"},{"lineNumber":20,"author":{"gitId":"HongJiancheng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"HongJiancheng"},"content":"}"}],"authorContributionMap":{"HongJiancheng":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongJiancheng"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"HongJiancheng"},"content":"deadline return book /by today"},{"lineNumber":3,"author":{"gitId":"HongJiancheng"},"content":"list"}],"authorContributionMap":{"HongJiancheng":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"HongJiancheng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"HongJiancheng":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"HongJiancheng"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"HongJiancheng":1,"-":37}}]
