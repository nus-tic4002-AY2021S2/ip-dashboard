[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"tototto":2,"-":24}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"[T] [✘] addfdf"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":"[D] [✘] read book (by: 2/2/20 12pm)"},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"[T] [✘] return book"}],"authorContributionMap":{"tototto":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"## Quick Start"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":""},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":6,"author":{"gitId":"tototto"},"content":""},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"1. Download the latest Duke.jar from the release page."},{"lineNumber":8,"author":{"gitId":"tototto"},"content":""},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"1. Copy the file to the folder you want to use as the home folder for Duke."},{"lineNumber":10,"author":{"gitId":"tototto"},"content":""},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"1. Double-click the file to start the app."},{"lineNumber":12,"author":{"gitId":"tototto"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"Allows user to add task to Duke and manage a list of pending items."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"### Features"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"* Adding task to Duke"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"  * Adding a simple task "},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"  * Adding a task with a deadline (date \u0026 time)"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"  * Adding an event with a deadline (date \u0026 time range)"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"* Allowing user to mark a task as completed "},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"* Viewing a list of task"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":""},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"### `Keyword` - Describe action"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":""},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"Keyword | "},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"------------ | "},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"```todo```  | "},{"lineNumber":29,"author":{"gitId":"tototto"},"content":"```deadline```  | "},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"```event```  | "},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"```list```  | "},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"```done```  | "},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"```delete```  | "},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"```bye```  | "},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"##### ```todo```"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"Adds a task to Duke with task description given in ```\u003ctask desc\u003e```."},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"##### Usage: ```todo \u003ctask desc\u003e``` "},{"lineNumber":41,"author":{"gitId":"tototto"},"content":""},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":"* ```todo Buy an iPhone 12 at launch date```"},{"lineNumber":44,"author":{"gitId":"tototto"},"content":""},{"lineNumber":45,"author":{"gitId":"tototto"},"content":"##### ```deadline```"},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"Adds a task with deadline to Duke with task description given in ```\u003ctask desc\u003e```."},{"lineNumber":47,"author":{"gitId":"tototto"},"content":"State completion deadline of the date \u0026 the time in ```\u003cdate\u003e \u003ctime\u003e```."},{"lineNumber":48,"author":{"gitId":"tototto"},"content":"##### Usage: ```deadline \u003ctask desc\u003e /by \u003cdate\u003e \u003ctime\u003e``` "},{"lineNumber":49,"author":{"gitId":"tototto"},"content":""},{"lineNumber":50,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":51,"author":{"gitId":"tototto"},"content":"* ```todo Buy an iPhone 12 at launch date /by 30/10/2020 12pm```"},{"lineNumber":52,"author":{"gitId":"tototto"},"content":""},{"lineNumber":53,"author":{"gitId":"tototto"},"content":"##### ```event```"},{"lineNumber":54,"author":{"gitId":"tototto"},"content":"Adds an event to Duke with task description given in ```\u003ctask desc\u003e```."},{"lineNumber":55,"author":{"gitId":"tototto"},"content":"State event period listing the date \u0026 the time period in ```\u003cdate\u003e \u003ctime\u003e```."},{"lineNumber":56,"author":{"gitId":"tototto"},"content":"Usage: ```event \u003cevent desc\u003e /at \u003cdate\u003e \u003ctime period\u003e``` "},{"lineNumber":57,"author":{"gitId":"tototto"},"content":""},{"lineNumber":58,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":59,"author":{"gitId":"tototto"},"content":"* ```event Attend Apple\u0027s WWDC /at 12/06/2020 4am```"},{"lineNumber":60,"author":{"gitId":"tototto"},"content":""},{"lineNumber":61,"author":{"gitId":"tototto"},"content":"##### ```list```"},{"lineNumber":62,"author":{"gitId":"tototto"},"content":"List down all task that are logged in Duke."},{"lineNumber":63,"author":{"gitId":"tototto"},"content":"##### Usage: ```list``` "},{"lineNumber":64,"author":{"gitId":"tototto"},"content":""},{"lineNumber":65,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":66,"author":{"gitId":"tototto"},"content":"* ```list```"},{"lineNumber":67,"author":{"gitId":"tototto"},"content":""},{"lineNumber":68,"author":{"gitId":"tototto"},"content":"##### ```done```"},{"lineNumber":69,"author":{"gitId":"tototto"},"content":"Mark tasks in Duke as completed."},{"lineNumber":70,"author":{"gitId":"tototto"},"content":"Usage: ```done \u003ctask id\u003e``` "},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":73,"author":{"gitId":"tototto"},"content":"* ```done 4```"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"tototto"},"content":"##### ```delete```"},{"lineNumber":76,"author":{"gitId":"tototto"},"content":"Mark tasks in Duke as completed."},{"lineNumber":77,"author":{"gitId":"tototto"},"content":"Usage: ```delete \u003cid\u003e``` "},{"lineNumber":78,"author":{"gitId":"tototto"},"content":""},{"lineNumber":79,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":80,"author":{"gitId":"tototto"},"content":"* ```delete 4```"},{"lineNumber":81,"author":{"gitId":"tototto"},"content":""},{"lineNumber":82,"author":{"gitId":"tototto"},"content":"##### ```find```"},{"lineNumber":83,"author":{"gitId":"tototto"},"content":"Loop up all task with a given a word."},{"lineNumber":84,"author":{"gitId":"tototto"},"content":"Usage: ```find \u003cSearch String\u003e``` "},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":87,"author":{"gitId":"tototto"},"content":"* ```find book```"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"tototto"},"content":"##### ```bye```"},{"lineNumber":90,"author":{"gitId":"tototto"},"content":"Exit Duke program."},{"lineNumber":91,"author":{"gitId":"tototto"},"content":"##### Usage: ```bye``` "},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"tototto"},"content":"##### Examples:"},{"lineNumber":94,"author":{"gitId":"tototto"},"content":"* ```bye```"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"tototto"},"content":"## Saving the data"},{"lineNumber":97,"author":{"gitId":"tototto"},"content":"Data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":98,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"tototto":84,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.command.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.fileManager.FileManager;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import duke.input.InputHandler;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import duke.input.InputParser;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"import duke.output.DisplayHandler;"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"import duke.storage.ListHandler;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":""},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":""},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"        // Instantiate program components"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"        DisplayHandler displayHandler \u003d new DisplayHandler();"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"        InputHandler inputHandler \u003d new InputHandler();"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"        InputParser parser \u003d new InputParser();"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"        ListHandler list \u003d new ListHandler();"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"        CommandHandler command \u003d new CommandHandler();"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"        FileManager fileManager \u003d new FileManager(\"data.txt\");"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":""},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"        // Uses a Facade to Manage Individual Modular Components"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"        displayHandler.ProgramOpening();"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"        // Read from a file"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"        fileManager.ReadFile(list);"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":""},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"        while(true) {"},{"lineNumber":29,"author":{"gitId":"tototto"},"content":""},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"            // Get User input"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"            String input \u003d inputHandler.getUserInput();"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"            // Parse User input"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"            String keyWord \u003d parser.extractKeyWord(input);"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"            String body \u003d parser.extractKeyWordBody(input, keyWord);"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":""},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"            // If input is not recognised Keyword"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":"            if (parser.checkIfKeyWord(keyWord) \u003d\u003d false) {"},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"                displayHandler.DisplayInvalidInput();"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"            // If input is a recognised Keyword"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"            else {"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"                command.checkCommandType(keyWord, body, list);"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"            fileManager.SaveFile(list.GetList());"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tototto":43,"-":4}},{"path":"src/main/java/duke/command/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.command;//import jdk.internal.util.xml.impl.Input;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.output.DisplayHandler;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.search.TaskFinder;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import duke.storage.ListHandler;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import duke.exception.IncorrectInputException;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"import duke.input.InputParser;"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":""},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":" * Handles all commands that user will input"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":" * Commands are listed in the switch-case statement"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":" */"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"public class CommandHandler {"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":""},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"    DisplayHandler displayHandler \u003d new DisplayHandler();"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"    InputParser inputParser \u003d new InputParser();"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":""},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"     * Used to handles the different behaviors of the respective commands"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"     * @param KeyWord Command for duke"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"     * @param Body User task input"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"     * @param List contains the list of user Tasks"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"    public void checkCommandType(String KeyWord, String Body, ListHandler List) {"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":""},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"        KEYWORD keyword \u003d KEYWORD.valueOf(KeyWord.toUpperCase());"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":""},{"lineNumber":29,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":30,"author":{"gitId":"tototto"},"content":""},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"            switch(keyword){"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"                case TODO:"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"                    String todoBody \u003d inputParser.extractTodoBody(Body);"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"                    List.addToDo(todoBody);"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":"                    Task todoTaskAdded \u003d (Task) List.GetList().lastElement();"},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"                    displayHandler.ShowTaskAdded(List.GetList().size(), todoTaskAdded);"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"tototto"},"content":""},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"                case DEADLINE:"},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"                    String deadlineBody \u003d inputParser.extractDeadlineBody(Body);"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"                    String deadlineByDate \u003d inputParser.extractDeadlineByDay(Body);"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"                    String deadlineByTime \u003d inputParser.extractDeadlineByTime(Body);"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":"                    List.addDeadline(deadlineBody, deadlineByDate, deadlineByTime);"},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"                    Task deadlineTaskAdded \u003d (Task) List.GetList().lastElement();"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":"                    displayHandler.ShowTaskAdded(List.GetList().size(), deadlineTaskAdded);"},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":47,"author":{"gitId":"tototto"},"content":""},{"lineNumber":48,"author":{"gitId":"tototto"},"content":"                case EVENT:"},{"lineNumber":49,"author":{"gitId":"tototto"},"content":"                    String eventBody \u003d inputParser.extractEventBody(Body);"},{"lineNumber":50,"author":{"gitId":"tototto"},"content":"                    String eventDay \u003d inputParser.extractEventAtDay(Body);;"},{"lineNumber":51,"author":{"gitId":"tototto"},"content":"                    String eventTime \u003d inputParser.extractEventAtTime(Body);"},{"lineNumber":52,"author":{"gitId":"tototto"},"content":"                    List.addEvent(eventBody, eventDay, eventTime);"},{"lineNumber":53,"author":{"gitId":"tototto"},"content":"                    Task EventTaskAdded \u003d (Task) List.GetList().lastElement();"},{"lineNumber":54,"author":{"gitId":"tototto"},"content":"                    displayHandler.ShowTaskAdded(List.GetList().size(), EventTaskAdded);"},{"lineNumber":55,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"tototto"},"content":""},{"lineNumber":57,"author":{"gitId":"tototto"},"content":"                case LIST:"},{"lineNumber":58,"author":{"gitId":"tototto"},"content":"                    displayHandler.DisplayList(List.GetList());"},{"lineNumber":59,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"tototto"},"content":""},{"lineNumber":61,"author":{"gitId":"tototto"},"content":"                case DONE:"},{"lineNumber":62,"author":{"gitId":"tototto"},"content":"                    Task taskDone \u003d List.UpdateListItem(Body);"},{"lineNumber":63,"author":{"gitId":"tototto"},"content":"                    displayHandler.DisplayChanges(taskDone);"},{"lineNumber":64,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"tototto"},"content":""},{"lineNumber":66,"author":{"gitId":"tototto"},"content":"                case DELETE:"},{"lineNumber":67,"author":{"gitId":"tototto"},"content":"                    Task taskDeleted \u003d List.DeleteListItem(Body);"},{"lineNumber":68,"author":{"gitId":"tototto"},"content":"                    displayHandler.DisplayDeleteResult(List.GetList().size(), taskDeleted);"},{"lineNumber":69,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"tototto"},"content":""},{"lineNumber":71,"author":{"gitId":"tototto"},"content":"                case FIND:"},{"lineNumber":72,"author":{"gitId":"tototto"},"content":"                    TaskFinder.FindTask(Body, List.GetList());"},{"lineNumber":73,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"tototto"},"content":""},{"lineNumber":75,"author":{"gitId":"tototto"},"content":"                case BYE:"},{"lineNumber":76,"author":{"gitId":"tototto"},"content":"                    displayHandler.ProgramEnding();"},{"lineNumber":77,"author":{"gitId":"tototto"},"content":"                    System.exit(0);"},{"lineNumber":78,"author":{"gitId":"tototto"},"content":"                    break;"},{"lineNumber":79,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"tototto"},"content":""},{"lineNumber":81,"author":{"gitId":"tototto"},"content":"        } catch (Exception e){"},{"lineNumber":82,"author":{"gitId":"tototto"},"content":"            if(e instanceof IncorrectInputException){"},{"lineNumber":83,"author":{"gitId":"tototto"},"content":"                displayHandler.DisplayCustomException(e);"},{"lineNumber":84,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"tototto"},"content":"            else {"},{"lineNumber":86,"author":{"gitId":"tototto"},"content":"                displayHandler.DisplayInvalidInput();"},{"lineNumber":87,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":90}},{"path":"src/main/java/duke/command/KEYWORD.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":" * Stores all KeyWords"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":" * Used by Duke to perform differing actions"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"public enum KEYWORD {"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"        TODO,"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"        DEADLINE,"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"        EVENT,"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"        LIST,"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"        DONE,"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"        DELETE,"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"        FIND,"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"        BYE"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":""}],"authorContributionMap":{"tototto":17}},{"path":"src/main/java/duke/exception/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":" * Custom error message"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":" * Handles user input issues"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":" * Used when performing String manipulation"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"public class IncorrectInputException extends Exception {"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"    public IncorrectInputException(String message){"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":12}},{"path":"src/main/java/duke/fileManager/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.fileManager;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.output.DisplayHandler;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.storage.ListHandler;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":""},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"import java.io.*;"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"import java.util.Iterator;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"import java.util.Vector;"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":""},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"public class FileManager {"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":""},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"    protected String fileName;"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"    protected File dataFile;"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"    protected String filePath;"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":""},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"    public FileManager(String fileName) {"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":""},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"    public void ReadFile(ListHandler list) {"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"        // Check if file exists"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"        dataFile \u003d new File(fileName);"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"        DisplayHandler.ReadDataMsg(dataFile.getAbsolutePath()); // debug statement"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":""},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"        // Read file format and load it in Duke"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(dataFile));"},{"lineNumber":29,"author":{"gitId":"tototto"},"content":""},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"            String eachLineOfFile;"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"            while ((eachLineOfFile \u003d br.readLine()) !\u003d null){"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"                // Parse File Data \u0026 Insert to Duke"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"                InsertFileContent(list, eachLineOfFile);"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":""},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":"            DisplayHandler.FileNotFound(e.getMessage());"},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"            DisplayHandler.CannotReadFile(e.getMessage());"},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":""},{"lineNumber":43,"author":{"gitId":"tototto"},"content":"    private void InsertFileContent(ListHandler list, String eachLineOfFile) {"},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"        String[] eachLineContent \u003d eachLineOfFile.split(\" \");"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":""},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"        checkTaskType(list, eachLineContent);"},{"lineNumber":47,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tototto"},"content":""},{"lineNumber":49,"author":{"gitId":"tototto"},"content":"    private void checkTaskType(ListHandler list, String[] eachLineContent) {"},{"lineNumber":50,"author":{"gitId":"tototto"},"content":"        String taskType \u003d eachLineContent[0];"},{"lineNumber":51,"author":{"gitId":"tototto"},"content":"        taskType \u003d taskType.trim();"},{"lineNumber":52,"author":{"gitId":"tototto"},"content":""},{"lineNumber":53,"author":{"gitId":"tototto"},"content":"        switch(taskType) {"},{"lineNumber":54,"author":{"gitId":"tototto"},"content":"            case \"[T]\":"},{"lineNumber":55,"author":{"gitId":"tototto"},"content":"                InsertTodo(list, eachLineContent);"},{"lineNumber":56,"author":{"gitId":"tototto"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"tototto"},"content":""},{"lineNumber":58,"author":{"gitId":"tototto"},"content":"            case \"[D]\":"},{"lineNumber":59,"author":{"gitId":"tototto"},"content":"                InsertDeadline(list, eachLineContent);"},{"lineNumber":60,"author":{"gitId":"tototto"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"tototto"},"content":""},{"lineNumber":62,"author":{"gitId":"tototto"},"content":"            case \"[E]\":"},{"lineNumber":63,"author":{"gitId":"tototto"},"content":"                InsertEvent(list, eachLineContent);"},{"lineNumber":64,"author":{"gitId":"tototto"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"tototto"},"content":""},{"lineNumber":66,"author":{"gitId":"tototto"},"content":"            default:"},{"lineNumber":67,"author":{"gitId":"tototto"},"content":"                DisplayHandler.EncounterWrongFormat();"},{"lineNumber":68,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"tototto"},"content":""},{"lineNumber":71,"author":{"gitId":"tototto"},"content":"    private void InsertTodo(ListHandler list, String[] eachLineContent) {"},{"lineNumber":72,"author":{"gitId":"tototto"},"content":"        String doneStatus \u003d eachLineContent[1];"},{"lineNumber":73,"author":{"gitId":"tototto"},"content":"        int begin \u003d 2, end \u003d eachLineContent.length-1;"},{"lineNumber":74,"author":{"gitId":"tototto"},"content":"        String[] todoBody \u003d new String[ (end+1) - begin];"},{"lineNumber":75,"author":{"gitId":"tototto"},"content":"        System.arraycopy(eachLineContent, begin, todoBody, 0, todoBody.length);"},{"lineNumber":76,"author":{"gitId":"tototto"},"content":"        list.addToDo(convertArrayToString(todoBody));"},{"lineNumber":77,"author":{"gitId":"tototto"},"content":""},{"lineNumber":78,"author":{"gitId":"tototto"},"content":"        if(doneStatus.equals(\"[✓]\")){"},{"lineNumber":79,"author":{"gitId":"tototto"},"content":"            Vector List \u003d list.GetList();"},{"lineNumber":80,"author":{"gitId":"tototto"},"content":"            Task justInserted \u003d (Task)List.lastElement();"},{"lineNumber":81,"author":{"gitId":"tototto"},"content":"            justInserted.markAsDone();"},{"lineNumber":82,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"tototto"},"content":""},{"lineNumber":85,"author":{"gitId":"tototto"},"content":"    private void InsertDeadline(ListHandler list, String[] eachLineContent) {"},{"lineNumber":86,"author":{"gitId":"tototto"},"content":"        String doneStatus \u003d eachLineContent[1];"},{"lineNumber":87,"author":{"gitId":"tototto"},"content":"        int begin \u003d 2, end \u003d eachLineContent.length-4;"},{"lineNumber":88,"author":{"gitId":"tototto"},"content":"        String[] deadlineBody \u003d new String[ (end+1) - begin];"},{"lineNumber":89,"author":{"gitId":"tototto"},"content":"        System.arraycopy(eachLineContent, begin, deadlineBody, 0, deadlineBody.length);"},{"lineNumber":90,"author":{"gitId":"tototto"},"content":"        String deadlineDate \u003d getDateContent(eachLineContent);"},{"lineNumber":91,"author":{"gitId":"tototto"},"content":"        String deadlineTime \u003d getTimeContent(eachLineContent);"},{"lineNumber":92,"author":{"gitId":"tototto"},"content":"        list.addDeadline(convertArrayToString(deadlineBody), deadlineDate, deadlineTime);"},{"lineNumber":93,"author":{"gitId":"tototto"},"content":""},{"lineNumber":94,"author":{"gitId":"tototto"},"content":"        if(doneStatus.equals(\"[✓]\")){"},{"lineNumber":95,"author":{"gitId":"tototto"},"content":"            Vector List \u003d list.GetList();"},{"lineNumber":96,"author":{"gitId":"tototto"},"content":"            Task justInserted \u003d (Task)List.lastElement();"},{"lineNumber":97,"author":{"gitId":"tototto"},"content":"            justInserted.markAsDone();"},{"lineNumber":98,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"tototto"},"content":""},{"lineNumber":101,"author":{"gitId":"tototto"},"content":"    private void InsertEvent(ListHandler list, String[] eachLineContent) {"},{"lineNumber":102,"author":{"gitId":"tototto"},"content":"        String doneStatus \u003d eachLineContent[1];"},{"lineNumber":103,"author":{"gitId":"tototto"},"content":"        int begin \u003d 2, end \u003d eachLineContent.length-4;"},{"lineNumber":104,"author":{"gitId":"tototto"},"content":"        String[] eventBody \u003d new String[ (end+1) - begin];"},{"lineNumber":105,"author":{"gitId":"tototto"},"content":"        System.arraycopy(eachLineContent, begin, eventBody, 0, eventBody.length);"},{"lineNumber":106,"author":{"gitId":"tototto"},"content":"        String eventDate \u003d getDateContent(eachLineContent);"},{"lineNumber":107,"author":{"gitId":"tototto"},"content":"        String eventTime \u003d getTimeContent(eachLineContent);"},{"lineNumber":108,"author":{"gitId":"tototto"},"content":"        list.addEvent(convertArrayToString(eventBody), eventDate, eventTime);"},{"lineNumber":109,"author":{"gitId":"tototto"},"content":""},{"lineNumber":110,"author":{"gitId":"tototto"},"content":"        if(doneStatus.equals(\"[✓]\")){"},{"lineNumber":111,"author":{"gitId":"tototto"},"content":"            Vector List \u003d list.GetList();"},{"lineNumber":112,"author":{"gitId":"tototto"},"content":"            Task justInserted \u003d (Task)List.lastElement();"},{"lineNumber":113,"author":{"gitId":"tototto"},"content":"            justInserted.markAsDone();"},{"lineNumber":114,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tototto"},"content":""},{"lineNumber":117,"author":{"gitId":"tototto"},"content":"    private String getDateContent(String[] eachLineContent) {"},{"lineNumber":118,"author":{"gitId":"tototto"},"content":"        String date \u003d eachLineContent[eachLineContent.length - 2];"},{"lineNumber":119,"author":{"gitId":"tototto"},"content":"        return date;"},{"lineNumber":120,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"tototto"},"content":""},{"lineNumber":122,"author":{"gitId":"tototto"},"content":"    private String getTimeContent(String[] eachLineContent) {"},{"lineNumber":123,"author":{"gitId":"tototto"},"content":"        String time \u003d eachLineContent[eachLineContent.length - 1];"},{"lineNumber":124,"author":{"gitId":"tototto"},"content":"        time \u003d charRemoveAt(time, time.length()-1);"},{"lineNumber":125,"author":{"gitId":"tototto"},"content":"        return time;"},{"lineNumber":126,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"tototto"},"content":""},{"lineNumber":128,"author":{"gitId":"tototto"},"content":"    public static String charRemoveAt(String str, int p) {"},{"lineNumber":129,"author":{"gitId":"tototto"},"content":"        return str.substring(0, p) + str.substring(p + 1);"},{"lineNumber":130,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"tototto"},"content":""},{"lineNumber":132,"author":{"gitId":"tototto"},"content":"    private String convertArrayToString(String[] array) {"},{"lineNumber":133,"author":{"gitId":"tototto"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":134,"author":{"gitId":"tototto"},"content":"        for(String value : array){"},{"lineNumber":135,"author":{"gitId":"tototto"},"content":"            builder.append(\" \" + value);"},{"lineNumber":136,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"tototto"},"content":"        builder.append(\" \");"},{"lineNumber":138,"author":{"gitId":"tototto"},"content":"        return builder.toString();"},{"lineNumber":139,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"tototto"},"content":""},{"lineNumber":141,"author":{"gitId":"tototto"},"content":"    public void SaveFile(Vector ListStorage) {"},{"lineNumber":142,"author":{"gitId":"tototto"},"content":""},{"lineNumber":143,"author":{"gitId":"tototto"},"content":"        dataFile \u003d CreateFile();"},{"lineNumber":144,"author":{"gitId":"tototto"},"content":"        Iterator dukeTask \u003d ListStorage.iterator();"},{"lineNumber":145,"author":{"gitId":"tototto"},"content":"        ClearFileContent();"},{"lineNumber":146,"author":{"gitId":"tototto"},"content":""},{"lineNumber":147,"author":{"gitId":"tototto"},"content":"        while(dukeTask.hasNext()){"},{"lineNumber":148,"author":{"gitId":"tototto"},"content":"            try{"},{"lineNumber":149,"author":{"gitId":"tototto"},"content":"                Task toBeStored \u003d (Task) dukeTask.next(); // Read the Tasks from Duke"},{"lineNumber":150,"author":{"gitId":"tototto"},"content":"                WriteToFile(toBeStored.toString()); // Write Tasks to File"},{"lineNumber":151,"author":{"gitId":"tototto"},"content":""},{"lineNumber":152,"author":{"gitId":"tototto"},"content":"            } catch (IOException e) {"},{"lineNumber":153,"author":{"gitId":"tototto"},"content":"                DisplayHandler.WriteFileError(e.getMessage());"},{"lineNumber":154,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"tototto"},"content":""},{"lineNumber":158,"author":{"gitId":"tototto"},"content":"    private File CreateFile() {"},{"lineNumber":159,"author":{"gitId":"tototto"},"content":"        File createdFile \u003d new File(fileName);"},{"lineNumber":160,"author":{"gitId":"tototto"},"content":"        filePath \u003d createdFile.getAbsolutePath();"},{"lineNumber":161,"author":{"gitId":"tototto"},"content":"        DisplayHandler.CreatedFile(createdFile.getAbsolutePath()); // debug statement"},{"lineNumber":162,"author":{"gitId":"tototto"},"content":""},{"lineNumber":163,"author":{"gitId":"tototto"},"content":"        return createdFile;"},{"lineNumber":164,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"tototto"},"content":""},{"lineNumber":166,"author":{"gitId":"tototto"},"content":"    private void WriteToFile(String textToAppend) throws IOException {"},{"lineNumber":167,"author":{"gitId":"tototto"},"content":"        FileWriter fw \u003d new FileWriter(fileName, true);"},{"lineNumber":168,"author":{"gitId":"tototto"},"content":"        fw.write(textToAppend + \"\\n\");"},{"lineNumber":169,"author":{"gitId":"tototto"},"content":"        fw.close();"},{"lineNumber":170,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"tototto"},"content":""},{"lineNumber":172,"author":{"gitId":"tototto"},"content":"    private void ClearFileContent() {"},{"lineNumber":173,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":174,"author":{"gitId":"tototto"},"content":"            PrintWriter writer \u003d new PrintWriter(dataFile);"},{"lineNumber":175,"author":{"gitId":"tototto"},"content":"            writer.print(\"\");"},{"lineNumber":176,"author":{"gitId":"tototto"},"content":"            writer.close();"},{"lineNumber":177,"author":{"gitId":"tototto"},"content":""},{"lineNumber":178,"author":{"gitId":"tototto"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":179,"author":{"gitId":"tototto"},"content":"            DisplayHandler.ClearFileFailure(e.getMessage());"},{"lineNumber":180,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":182}},{"path":"src/main/java/duke/input/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.input;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":""},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":" * Used to obtain user input from Input Stream"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"public class InputHandler {"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":""},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"    static private Scanner fromInputStream \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":""},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"     * Used to get user input"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"     * @return a line of user input e.g. todo Birthday Celebration"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"    public String getUserInput(){"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":""},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"        String command \u003d fromInputStream.nextLine();"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":""},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"        return command;"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":22}},{"path":"src/main/java/duke/input/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.input;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.output.DisplayHandler;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.command.KEYWORD;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import duke.exception.IncorrectInputException;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":""},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":" * Handles and transform user input"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":" * Turns input into format accepted by DUKE"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"public class InputParser {"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":""},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"     * Determine if user entered a Task"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"     * @param input value to be checked"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"     * @return returns true if keyword, false otherwise"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"    public boolean checkIfKeyWord(String input) {"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":""},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"            KEYWORD.valueOf(input.toUpperCase());"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"            return true;"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":""},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"            return false;"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":""},{"lineNumber":29,"author":{"gitId":"tototto"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"     * Get Task keyWord from user input line"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"     * @param input value to be parsed"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"     * @return return keyword from @param input"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"    public String extractKeyWord(String input) {"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":"        String[] Array \u003d input.split(\" \");"},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"        return Array[0];"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tototto"},"content":""},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"     * Get Task body from user\u0027s input"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"     * @param input full line of user input"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"     * @param keyword keyword of user"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":"     * @return return extracted body"},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":"    public String extractKeyWordBody(String input, String keyword) {"},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"tototto"},"content":"            return input.replaceFirst(keyword, \"\");"},{"lineNumber":48,"author":{"gitId":"tototto"},"content":""},{"lineNumber":49,"author":{"gitId":"tototto"},"content":"        } catch(ArrayIndexOutOfBoundsException e){ // May not be used anymore"},{"lineNumber":50,"author":{"gitId":"tototto"},"content":"            return null;"},{"lineNumber":51,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tototto"},"content":""},{"lineNumber":54,"author":{"gitId":"tototto"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"tototto"},"content":"     * Extract body from Todo"},{"lineNumber":56,"author":{"gitId":"tototto"},"content":"     * @param todoInput take input line from a todo"},{"lineNumber":57,"author":{"gitId":"tototto"},"content":"     * @return extracted body"},{"lineNumber":58,"author":{"gitId":"tototto"},"content":"     * @throws IncorrectInputException for wrong input format"},{"lineNumber":59,"author":{"gitId":"tototto"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"tototto"},"content":"    public String extractTodoBody(String todoInput) throws IncorrectInputException {"},{"lineNumber":61,"author":{"gitId":"tototto"},"content":"        if(todoInput.isEmpty())"},{"lineNumber":62,"author":{"gitId":"tototto"},"content":"            throw new IncorrectInputException(DisplayHandler.EMPTY_TODO);"},{"lineNumber":63,"author":{"gitId":"tototto"},"content":""},{"lineNumber":64,"author":{"gitId":"tototto"},"content":"        return todoInput;"},{"lineNumber":65,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"tototto"},"content":""},{"lineNumber":67,"author":{"gitId":"tototto"},"content":"    // For Deadlines"},{"lineNumber":68,"author":{"gitId":"tototto"},"content":"    public String extractDeadlineBody(String deadlineInput) throws IncorrectInputException {"},{"lineNumber":69,"author":{"gitId":"tototto"},"content":"        String result \u003d \"\";"},{"lineNumber":70,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":71,"author":{"gitId":"tototto"},"content":"            int indx \u003d deadlineInput.indexOf(\"/by\");"},{"lineNumber":72,"author":{"gitId":"tototto"},"content":"            result \u003d deadlineInput.substring(0, indx);"},{"lineNumber":73,"author":{"gitId":"tototto"},"content":""},{"lineNumber":74,"author":{"gitId":"tototto"},"content":"        } catch (Exception e){"},{"lineNumber":75,"author":{"gitId":"tototto"},"content":"            if(result.length() \u003c 1){"},{"lineNumber":76,"author":{"gitId":"tototto"},"content":"                throw new IncorrectInputException(DisplayHandler.EMPTY_DEADLINE_DESC);"},{"lineNumber":77,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tototto"},"content":"        return result;"},{"lineNumber":80,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"tototto"},"content":""},{"lineNumber":82,"author":{"gitId":"tototto"},"content":"    public String extractDeadlineByDay(String deadlineInput) throws IncorrectInputException{"},{"lineNumber":83,"author":{"gitId":"tototto"},"content":"        String day \u003d \"\";"},{"lineNumber":84,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":85,"author":{"gitId":"tototto"},"content":"            int indx \u003d deadlineInput.indexOf(\"/by\");"},{"lineNumber":86,"author":{"gitId":"tototto"},"content":"            String by \u003d deadlineInput.substring(indx, deadlineInput.length());"},{"lineNumber":87,"author":{"gitId":"tototto"},"content":"            String[] array \u003d by.split(\" \");"},{"lineNumber":88,"author":{"gitId":"tototto"},"content":"            day \u003d array[1];"},{"lineNumber":89,"author":{"gitId":"tototto"},"content":"            return day;"},{"lineNumber":90,"author":{"gitId":"tototto"},"content":""},{"lineNumber":91,"author":{"gitId":"tototto"},"content":"        }catch (Exception e) {"},{"lineNumber":92,"author":{"gitId":"tototto"},"content":"            if(day.length() \u003c 1){"},{"lineNumber":93,"author":{"gitId":"tototto"},"content":"                throw new IncorrectInputException(DisplayHandler.EMPTY_DEADLINE_DAY);"},{"lineNumber":94,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"tototto"},"content":""},{"lineNumber":97,"author":{"gitId":"tototto"},"content":"        return day;"},{"lineNumber":98,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"tototto"},"content":""},{"lineNumber":100,"author":{"gitId":"tototto"},"content":"    public String extractDeadlineByTime(String deadlineInput) throws IncorrectInputException {"},{"lineNumber":101,"author":{"gitId":"tototto"},"content":"        String time \u003d \"\";"},{"lineNumber":102,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":103,"author":{"gitId":"tototto"},"content":"            int indx \u003d deadlineInput.indexOf(\"/by\");"},{"lineNumber":104,"author":{"gitId":"tototto"},"content":"            String by \u003d deadlineInput.substring(indx);"},{"lineNumber":105,"author":{"gitId":"tototto"},"content":"            String[] array \u003d by.split(\" \");"},{"lineNumber":106,"author":{"gitId":"tototto"},"content":"            time \u003d array[2];"},{"lineNumber":107,"author":{"gitId":"tototto"},"content":""},{"lineNumber":108,"author":{"gitId":"tototto"},"content":"        } catch (Exception e) {"},{"lineNumber":109,"author":{"gitId":"tototto"},"content":"            if(time.length() \u003c 1){"},{"lineNumber":110,"author":{"gitId":"tototto"},"content":"                throw new IncorrectInputException(DisplayHandler.EMPTY_DEADLINE_TIME);"},{"lineNumber":111,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"tototto"},"content":""},{"lineNumber":114,"author":{"gitId":"tototto"},"content":"        return time;"},{"lineNumber":115,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tototto"},"content":""},{"lineNumber":117,"author":{"gitId":"tototto"},"content":"    // For Events"},{"lineNumber":118,"author":{"gitId":"tototto"},"content":"    public String extractEventBody(String eventInput) throws IncorrectInputException {"},{"lineNumber":119,"author":{"gitId":"tototto"},"content":"        String result \u003d \"\";"},{"lineNumber":120,"author":{"gitId":"tototto"},"content":""},{"lineNumber":121,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":122,"author":{"gitId":"tototto"},"content":"            int indx \u003d eventInput.indexOf(\"/at\");"},{"lineNumber":123,"author":{"gitId":"tototto"},"content":"            result \u003d eventInput.substring(0, indx);"},{"lineNumber":124,"author":{"gitId":"tototto"},"content":""},{"lineNumber":125,"author":{"gitId":"tototto"},"content":"        }catch (Exception e){"},{"lineNumber":126,"author":{"gitId":"tototto"},"content":"            if(result.length() \u003c 1){"},{"lineNumber":127,"author":{"gitId":"tototto"},"content":"                throw new IncorrectInputException(DisplayHandler.EMPTY_EVENT_DESC);"},{"lineNumber":128,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"tototto"},"content":""},{"lineNumber":131,"author":{"gitId":"tototto"},"content":"        return result;"},{"lineNumber":132,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"tototto"},"content":""},{"lineNumber":134,"author":{"gitId":"tototto"},"content":"    public String extractEventAtDay(String eventInput) throws IncorrectInputException{"},{"lineNumber":135,"author":{"gitId":"tototto"},"content":"        String day \u003d \"\";"},{"lineNumber":136,"author":{"gitId":"tototto"},"content":""},{"lineNumber":137,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":138,"author":{"gitId":"tototto"},"content":"            int indx \u003d eventInput.indexOf(\"/at\");"},{"lineNumber":139,"author":{"gitId":"tototto"},"content":"            String by \u003d eventInput.substring(indx, eventInput.length());"},{"lineNumber":140,"author":{"gitId":"tototto"},"content":"            String[] array \u003d by.split(\" \");"},{"lineNumber":141,"author":{"gitId":"tototto"},"content":"            day \u003d array[1];"},{"lineNumber":142,"author":{"gitId":"tototto"},"content":""},{"lineNumber":143,"author":{"gitId":"tototto"},"content":"        }catch (Exception e) {"},{"lineNumber":144,"author":{"gitId":"tototto"},"content":"            if(day.length() \u003c 1){"},{"lineNumber":145,"author":{"gitId":"tototto"},"content":"                throw new IncorrectInputException(DisplayHandler.EMPTY_EVENT_DAY);"},{"lineNumber":146,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"tototto"},"content":"        return day;"},{"lineNumber":149,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"tototto"},"content":""},{"lineNumber":151,"author":{"gitId":"tototto"},"content":"    public String extractEventAtTime(String eventInput) throws IncorrectInputException {"},{"lineNumber":152,"author":{"gitId":"tototto"},"content":"        String time \u003d \"\";"},{"lineNumber":153,"author":{"gitId":"tototto"},"content":""},{"lineNumber":154,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":155,"author":{"gitId":"tototto"},"content":"            int indx \u003d eventInput.indexOf(\"/at\");"},{"lineNumber":156,"author":{"gitId":"tototto"},"content":"            String by \u003d eventInput.substring(indx);"},{"lineNumber":157,"author":{"gitId":"tototto"},"content":"            String[] array \u003d by.split(\" \");"},{"lineNumber":158,"author":{"gitId":"tototto"},"content":"            time \u003d array[2];"},{"lineNumber":159,"author":{"gitId":"tototto"},"content":""},{"lineNumber":160,"author":{"gitId":"tototto"},"content":"        } catch (Exception e) {"},{"lineNumber":161,"author":{"gitId":"tototto"},"content":"            if(time.length() \u003c 1){"},{"lineNumber":162,"author":{"gitId":"tototto"},"content":"                throw new IncorrectInputException(DisplayHandler.EMPTY_EVENT_TIME);"},{"lineNumber":163,"author":{"gitId":"tototto"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"tototto"},"content":""},{"lineNumber":166,"author":{"gitId":"tototto"},"content":"        return time;"},{"lineNumber":167,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":168}},{"path":"src/main/java/duke/output/DisplayHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.output;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":""},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import java.util.Vector;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import java.util.*;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":""},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"public class DisplayHandler {"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":""},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"    final private String LOGO_ICON \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":""},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"    final private String GREETING_MSG \u003d \" Hello! I\u0027m duke.Duke\\n What can I do for you?\";"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"    final private String SUCCESS_MSG \u003d \" Got it. I\u0027ve added this task: \";"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"    final private String LIST_MSG \u003d \" Here are the tasks in your list:\";"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"    final private String LIST_NUMBER \u003d \" Now you have %d tasks in the list.\\n\";"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"    final private String DONE_MSG \u003d \" Nice! I\u0027ve marked this task as done: \";"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"    final private String INVALID_INPUT_MSG \u003d \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"    final private String DELETE_TASK \u003d \" Noted. I\u0027ve removed this task:\";"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"    final private String GOODBYE_MSG \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"    final private String LINE_DIVIDER \u003d \"----------------------------------------\";"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_TODO \u003d \" OOPS!!! The description of a todo cannot be empty\";"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_DEADLINE_DESC \u003d \" OOPS!!! The description of a duke Deadline cannot be empty \u0026 must be accompanied by Date and Time\";"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_DEADLINE_DAY \u003d \" OOPS!!! The description of duke\u0027s Deadline Day cannot be empty\";"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_DEADLINE_TIME \u003d \" OOPS!!! The description of duke\u0027s Deadline Time cannot be empty\";"},{"lineNumber":29,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_EVENT_DESC \u003d \" OOPS!!! The description of a duke Event cannot be empty \u0026 must be accompanied by Date and Time Range\";"},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_EVENT_DAY \u003d \" OOPS!!! The description of a duke\u0027s Event Day cannot be empty\";"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"    final static public String EMPTY_EVENT_TIME \u003d \" OOPS!!! The description of a duke\u0027s Event Time cannot be empty\";"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"    final static public String READ_DATA \u003d \"Reading data file: \";"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"    final static public String FILE_NOT_EXISTS \u003d \"File does not exists yet : \";"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"    final static public String FILE_CANNOT_BE_READ \u003d \"File cannot be read : \";"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":"    final static public String UNRECOGNISED_TEXT_FORMAT \u003d \"There is a unrecognised text format in DUKE data file\";"},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"    final static public String WRITE_FILE_ERROR \u003d \"Error writing to file: \";"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":"    final static public String CREATED_FILE_SUCCESS \u003d \"Created/Updated data file at: \";"},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"    final static public String CLEAR_FILE_ERROR \u003d \"Unable to clear file content: \";"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":""},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"    public static void ClearFileFailure(String errorMsg){"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"        System.out.println(CLEAR_FILE_ERROR + errorMsg);"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":""},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"    public static void CreatedFile(String fileAbsolutePath){"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":"        System.out.println(CREATED_FILE_SUCCESS+fileAbsolutePath);"},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tototto"},"content":""},{"lineNumber":48,"author":{"gitId":"tototto"},"content":"    public static void WriteFileError(String errorMsg){"},{"lineNumber":49,"author":{"gitId":"tototto"},"content":"        System.out.println(WRITE_FILE_ERROR+errorMsg);"},{"lineNumber":50,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tototto"},"content":""},{"lineNumber":52,"author":{"gitId":"tototto"},"content":"    public static void EncounterWrongFormat(){"},{"lineNumber":53,"author":{"gitId":"tototto"},"content":"        System.out.println(UNRECOGNISED_TEXT_FORMAT);"},{"lineNumber":54,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tototto"},"content":""},{"lineNumber":56,"author":{"gitId":"tototto"},"content":"    public static void CannotReadFile(String errorMsg){"},{"lineNumber":57,"author":{"gitId":"tototto"},"content":"        System.out.println(FILE_CANNOT_BE_READ+ errorMsg);"},{"lineNumber":58,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"tototto"},"content":""},{"lineNumber":60,"author":{"gitId":"tototto"},"content":"    public static void FileNotFound(String errorMsg) {"},{"lineNumber":61,"author":{"gitId":"tototto"},"content":"        System.out.println(FILE_NOT_EXISTS+errorMsg);"},{"lineNumber":62,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"tototto"},"content":""},{"lineNumber":64,"author":{"gitId":"tototto"},"content":"    public static void ReadDataMsg(String absolutePath){"},{"lineNumber":65,"author":{"gitId":"tototto"},"content":"        System.out.println(READ_DATA + absolutePath);"},{"lineNumber":66,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"tototto"},"content":""},{"lineNumber":68,"author":{"gitId":"tototto"},"content":"    private void Greeter(){"},{"lineNumber":69,"author":{"gitId":"tototto"},"content":"        System.out.println(GREETING_MSG);"},{"lineNumber":70,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"tototto"},"content":""},{"lineNumber":72,"author":{"gitId":"tototto"},"content":"    private void Goodbye(){"},{"lineNumber":73,"author":{"gitId":"tototto"},"content":"        System.out.println(GOODBYE_MSG);"},{"lineNumber":74,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tototto"},"content":""},{"lineNumber":76,"author":{"gitId":"tototto"},"content":"    private void Divider(){"},{"lineNumber":77,"author":{"gitId":"tototto"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":78,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"tototto"},"content":""},{"lineNumber":80,"author":{"gitId":"tototto"},"content":"    private void Logo(){"},{"lineNumber":81,"author":{"gitId":"tototto"},"content":"        System.out.println(LOGO_ICON);"},{"lineNumber":82,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tototto"},"content":""},{"lineNumber":84,"author":{"gitId":"tototto"},"content":"    private void Success(){"},{"lineNumber":85,"author":{"gitId":"tototto"},"content":"        System.out.println(SUCCESS_MSG);"},{"lineNumber":86,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"tototto"},"content":""},{"lineNumber":88,"author":{"gitId":"tototto"},"content":"    private void InvalidInput(){"},{"lineNumber":89,"author":{"gitId":"tototto"},"content":"        System.out.println(INVALID_INPUT_MSG);"},{"lineNumber":90,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"tototto"},"content":""},{"lineNumber":92,"author":{"gitId":"tototto"},"content":"    private void ShowListMsg() { System.out.println(LIST_MSG); }"},{"lineNumber":93,"author":{"gitId":"tototto"},"content":""},{"lineNumber":94,"author":{"gitId":"tototto"},"content":"    public void DisplayNumAddedTask(int listNum) {"},{"lineNumber":95,"author":{"gitId":"tototto"},"content":"        System.out.printf(LIST_NUMBER, listNum);"},{"lineNumber":96,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tototto"},"content":""},{"lineNumber":98,"author":{"gitId":"tototto"},"content":"    public void Done(){"},{"lineNumber":99,"author":{"gitId":"tototto"},"content":"        System.out.println(DONE_MSG);"},{"lineNumber":100,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"tototto"},"content":""},{"lineNumber":102,"author":{"gitId":"tototto"},"content":"    public void PrintDeleteMsg() {"},{"lineNumber":103,"author":{"gitId":"tototto"},"content":"        System.out.println(DELETE_TASK);"},{"lineNumber":104,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"tototto"},"content":""},{"lineNumber":106,"author":{"gitId":"tototto"},"content":"    public void DisplayIndividualTask(Task task){"},{"lineNumber":107,"author":{"gitId":"tototto"},"content":"        System.out.println(\"   \" + task);"},{"lineNumber":108,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"tototto"},"content":""},{"lineNumber":110,"author":{"gitId":"tototto"},"content":"    private void ListResult(Vector result){"},{"lineNumber":111,"author":{"gitId":"tototto"},"content":""},{"lineNumber":112,"author":{"gitId":"tototto"},"content":"        ShowListMsg();"},{"lineNumber":113,"author":{"gitId":"tototto"},"content":"        Iterator iter \u003d result.iterator();"},{"lineNumber":114,"author":{"gitId":"tototto"},"content":""},{"lineNumber":115,"author":{"gitId":"tototto"},"content":"        for(int i \u003d 0; iter.hasNext(); i++){"},{"lineNumber":116,"author":{"gitId":"tototto"},"content":"            int currIndex \u003d i + 1 ;"},{"lineNumber":117,"author":{"gitId":"tototto"},"content":"            Task element \u003d (Task)iter.next();"},{"lineNumber":118,"author":{"gitId":"tototto"},"content":"            System.out.println(\" \" + currIndex + \".\" + element);"},{"lineNumber":119,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"tototto"},"content":""},{"lineNumber":122,"author":{"gitId":"tototto"},"content":"    public void DisplayInvalidInput(){"},{"lineNumber":123,"author":{"gitId":"tototto"},"content":"        InvalidInput();"},{"lineNumber":124,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"tototto"},"content":""},{"lineNumber":126,"author":{"gitId":"tototto"},"content":"    public void DisplayChanges(Task task) {"},{"lineNumber":127,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":128,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":129,"author":{"gitId":"tototto"},"content":"            task.getStatusIcon(); // check if exception will be thrown, this line has no functional usage"},{"lineNumber":130,"author":{"gitId":"tototto"},"content":""},{"lineNumber":131,"author":{"gitId":"tototto"},"content":"            Done();"},{"lineNumber":132,"author":{"gitId":"tototto"},"content":"            System.out.println(task);"},{"lineNumber":133,"author":{"gitId":"tototto"},"content":""},{"lineNumber":134,"author":{"gitId":"tototto"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":135,"author":{"gitId":"tototto"},"content":"            InvalidInput();"},{"lineNumber":136,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":138,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"tototto"},"content":""},{"lineNumber":140,"author":{"gitId":"tototto"},"content":"    public void DisplayDeleteResult(int ListNum, Task task) {"},{"lineNumber":141,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":142,"author":{"gitId":"tototto"},"content":"        PrintDeleteMsg();"},{"lineNumber":143,"author":{"gitId":"tototto"},"content":"        System.out.println(task);"},{"lineNumber":144,"author":{"gitId":"tototto"},"content":"        DisplayNumAddedTask(ListNum);"},{"lineNumber":145,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":146,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"tototto"},"content":""},{"lineNumber":148,"author":{"gitId":"tototto"},"content":"    public void DisplayList(Vector result) {"},{"lineNumber":149,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":150,"author":{"gitId":"tototto"},"content":"        ListResult(result);"},{"lineNumber":151,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":152,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"tototto"},"content":""},{"lineNumber":154,"author":{"gitId":"tototto"},"content":"    public void ShowTaskAdded(int ListNum, Task task){"},{"lineNumber":155,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":156,"author":{"gitId":"tototto"},"content":"        Success();"},{"lineNumber":157,"author":{"gitId":"tototto"},"content":"        DisplayIndividualTask(task);"},{"lineNumber":158,"author":{"gitId":"tototto"},"content":"        DisplayNumAddedTask(ListNum);"},{"lineNumber":159,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":160,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"tototto"},"content":""},{"lineNumber":162,"author":{"gitId":"tototto"},"content":"    public void ProgramOpening(){"},{"lineNumber":163,"author":{"gitId":"tototto"},"content":"        // User Interface Display Section"},{"lineNumber":164,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":165,"author":{"gitId":"tototto"},"content":"        Logo();"},{"lineNumber":166,"author":{"gitId":"tototto"},"content":"        Greeter();"},{"lineNumber":167,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":168,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"tototto"},"content":""},{"lineNumber":170,"author":{"gitId":"tototto"},"content":"    public void ProgramEnding(){"},{"lineNumber":171,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":172,"author":{"gitId":"tototto"},"content":"        Goodbye();"},{"lineNumber":173,"author":{"gitId":"tototto"},"content":"        Divider();"},{"lineNumber":174,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"tototto"},"content":""},{"lineNumber":176,"author":{"gitId":"tototto"},"content":"    public void DisplayCustomException(Exception e) {"},{"lineNumber":177,"author":{"gitId":"tototto"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":178,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":179}},{"path":"src/main/java/duke/search/TaskFinder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.search;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.storage.ListHandler;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":""},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import java.util.Iterator;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"import java.util.Vector;"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":""},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"public class TaskFinder {"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"    public static void FindTask(String searchTerm , Vector taskList){"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"        Iterator taskIter \u003d taskList.iterator();"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":""},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"        System.out.println(\"----------------------------------------\");"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":""},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"        for(int i\u003d 0; taskIter.hasNext(); i++){"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"             Task currTask \u003d (Task)taskIter.next();"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"             String currTaskDesc \u003d currTask.getTaskDescription();"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":""},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"             if(currTaskDesc.contains(searchTerm)){"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"                 System.out.println(i+1 + \".\" + currTask);"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"             }"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":""},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"        System.out.println(\"----------------------------------------\");"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":27}},{"path":"src/main/java/duke/storage/ListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":""},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"import java.util.*;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":""},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"public class ListHandler {"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":""},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    private Vector ListStorage \u003d new Vector();"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":""},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"    public void addToDo(String body){"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"        ListStorage.add(new Todo(body));"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":""},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"    public void addDeadline(String body, String by, String time){"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"        ListStorage.add(new Deadline(body, by, time));"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":""},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"    public void addEvent(String body, String at, String timePeriod){"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"        ListStorage.add(new Event(body, at, timePeriod));"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":""},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"    public Vector GetList(){"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"        return ListStorage;"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tototto"},"content":""},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"    public Task UpdateListItem(String index){"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"            int idx \u003d Integer.parseInt(index.trim());"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"            Task task \u003d (Task) ListStorage.get(idx - 1);"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"            task.markAsDone();"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":""},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"            return task;"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":""},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"        } catch (NumberFormatException e) { }"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"          catch (ArrayIndexOutOfBoundsException e) { }"},{"lineNumber":40,"author":{"gitId":"tototto"},"content":""},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"        return null;"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":""},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"    public Task DeleteListItem(String index){"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"            int idx \u003d Integer.parseInt(index.trim());"},{"lineNumber":47,"author":{"gitId":"tototto"},"content":"            Task task \u003d (Task) ListStorage.remove(idx - 1);"},{"lineNumber":48,"author":{"gitId":"tototto"},"content":"            return task;"},{"lineNumber":49,"author":{"gitId":"tototto"},"content":""},{"lineNumber":50,"author":{"gitId":"tototto"},"content":"        } catch (Exception e) {}"},{"lineNumber":51,"author":{"gitId":"tototto"},"content":""},{"lineNumber":52,"author":{"gitId":"tototto"},"content":"        return null;"},{"lineNumber":53,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":""},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"    public Deadline(String description, String by, String time) {"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"        this.time \u003d time;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":""},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"    protected String by;"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    protected String time;"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":""},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + by + \" \" + time +\")\";"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":""},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"    public Event(String description, String at, String timePeriod) {"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"        this.timePeriod \u003d timePeriod;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":""},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"    protected String at;"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    protected String timePeriod;"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":""},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"        return \"[E] \" + super.toString() + \"(at: \" + at + \" \" + timePeriod +\")\";"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":""},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":""},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":""},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"    public String getTaskDescription() {"},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":""},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"    public void markAsDone(){"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"        isDone \u003d !isDone;"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":""},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"        return  \"[\" + getStatusIcon() + \"]\" + \"\" + getTaskDescription();"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":28}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":""},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tototto"},"content":""},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":13}},{"path":"src/test/java/inputParser/inputParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package inputParser;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.exception.IncorrectInputException;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import duke.input.InputParser;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":"import duke.output.DisplayHandler;"},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":""},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":10,"author":{"gitId":"tototto"},"content":""},{"lineNumber":11,"author":{"gitId":"tototto"},"content":"public class inputParserTest {"},{"lineNumber":12,"author":{"gitId":"tototto"},"content":""},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"    public void Test_KeywordChecker(){"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"        String keywordStub \u003d \"Hello There\";"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":""},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"        InputParser inputParser \u003d new InputParser();"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"        boolean result \u003d inputParser.checkIfKeyWord(keywordStub);"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":""},{"lineNumber":20,"author":{"gitId":"tototto"},"content":"        assertEquals(result, false);"},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":""},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"    public void Test_KeywordExtraction(){"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":"        String inputStub \u003d \"todo Buy groceries from NTUC\";"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":""},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"        InputParser inputParser \u003d new InputParser();"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"        String result \u003d inputParser.extractKeyWord(inputStub);"},{"lineNumber":29,"author":{"gitId":"tototto"},"content":""},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"        assertEquals(result, \"todo\");"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":""},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":"    public void Test_DeadlineBodyExtraction(){"},{"lineNumber":35,"author":{"gitId":"tototto"},"content":"        String inputStub \u003d \"Read book /by 20/12/20 6pm\";"},{"lineNumber":36,"author":{"gitId":"tototto"},"content":""},{"lineNumber":37,"author":{"gitId":"tototto"},"content":"        InputParser inputParser \u003d new InputParser();"},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"        String result \u003d \"\";"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":""},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"        try{"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"            result \u003d inputParser.extractDeadlineBody(inputStub);"},{"lineNumber":42,"author":{"gitId":"tototto"},"content":"        }catch (IncorrectInputException e) {"},{"lineNumber":43,"author":{"gitId":"tototto"},"content":"            fail();"},{"lineNumber":44,"author":{"gitId":"tototto"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"tototto"},"content":""},{"lineNumber":46,"author":{"gitId":"tototto"},"content":"        assertEquals(result, \"Read book \");"},{"lineNumber":47,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":48}},{"path":"src/test/java/listHandler/listHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"package listHandler;"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":""},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"import duke.storage.ListHandler;"},{"lineNumber":4,"author":{"gitId":"tototto"},"content":"import org.junit.Test;"},{"lineNumber":5,"author":{"gitId":"tototto"},"content":""},{"lineNumber":6,"author":{"gitId":"tototto"},"content":"import java.util.Vector;"},{"lineNumber":7,"author":{"gitId":"tototto"},"content":""},{"lineNumber":8,"author":{"gitId":"tototto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"tototto"},"content":""},{"lineNumber":10,"author":{"gitId":"tototto"},"content":"public class listHandlerTest {"},{"lineNumber":11,"author":{"gitId":"tototto"},"content":""},{"lineNumber":12,"author":{"gitId":"tototto"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"tototto"},"content":"    public void Test_AddTodo(){"},{"lineNumber":14,"author":{"gitId":"tototto"},"content":"        ListHandler listHandler \u003d new ListHandler();"},{"lineNumber":15,"author":{"gitId":"tototto"},"content":"        listHandler.addToDo(\"Read Book\");"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":""},{"lineNumber":17,"author":{"gitId":"tototto"},"content":"        Vector result \u003d  listHandler.GetList();"},{"lineNumber":18,"author":{"gitId":"tototto"},"content":"        assertEquals(result.size(), 1);"},{"lineNumber":19,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tototto"},"content":""},{"lineNumber":21,"author":{"gitId":"tototto"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"tototto"},"content":"    public void Test_AddDeadline(){"},{"lineNumber":23,"author":{"gitId":"tototto"},"content":"        ListHandler listHandler \u003d new ListHandler();"},{"lineNumber":24,"author":{"gitId":"tototto"},"content":"        listHandler.addDeadline(\"Read book\", \"21/12/20\", \"1800\");"},{"lineNumber":25,"author":{"gitId":"tototto"},"content":""},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"        Vector result \u003d  listHandler.GetList();"},{"lineNumber":27,"author":{"gitId":"tototto"},"content":"        assertEquals(result.size(), 1);"},{"lineNumber":28,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tototto"},"content":""},{"lineNumber":30,"author":{"gitId":"tototto"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"tototto"},"content":"    public void Test_DeleteTask(){"},{"lineNumber":32,"author":{"gitId":"tototto"},"content":"        ListHandler listHandler \u003d new ListHandler();"},{"lineNumber":33,"author":{"gitId":"tototto"},"content":"        listHandler.addToDo(\"Read Book\");"},{"lineNumber":34,"author":{"gitId":"tototto"},"content":""},{"lineNumber":35,"author":{"gitId":"tototto"},"content":"        String indexToDelete \u003d \"1\";"},{"lineNumber":36,"author":{"gitId":"tototto"},"content":"        listHandler.DeleteListItem(indexToDelete);"},{"lineNumber":37,"author":{"gitId":"tototto"},"content":""},{"lineNumber":38,"author":{"gitId":"tototto"},"content":"        Vector result \u003d  listHandler.GetList();"},{"lineNumber":39,"author":{"gitId":"tototto"},"content":"        assertEquals(result.size(), 0);"},{"lineNumber":40,"author":{"gitId":"tototto"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tototto"},"content":"}"}],"authorContributionMap":{"tototto":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tototto"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"tototto"},"content":"deadline return book /by 12/12/12 6pm"},{"lineNumber":3,"author":{"gitId":"tototto"},"content":"bye"}],"authorContributionMap":{"tototto":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"tototto"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/**/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"tototto"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"tototto":2,"-":32}}]
