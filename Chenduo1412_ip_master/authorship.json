[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"D|0|aaa|2020-11-09"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":"E|0|bb|2020-10-06"},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"T|1|aaa"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"T|0|read book"}],"authorContributionMap":{"Chenduo1412":4}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"# Duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":""}],"authorContributionMap":{"Chenduo1412":3,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"Add task you need to do into the task list."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"### `todo` - Describe action"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"Type todo keywords and follow with the discription of the task to add the todo type tasks into the list."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"`todo read book`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"`Got it. I\u0027ve added this task: "},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":" [T] ✘ read book"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":" Now you have 1 in the list.`"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":" ### Feature 2 "},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":" Add task you have to do within deadline into the task list."},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":" ## Usage"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":" ### `deadline` - Describe action"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":31,"author":{"gitId":"Chenduo1412"},"content":" Type deadline keywords and follow with the discription of the task to add the deadline type tasks into the list."},{"lineNumber":32,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":33,"author":{"gitId":"Chenduo1412"},"content":" Example of usage: "},{"lineNumber":34,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":35,"author":{"gitId":"Chenduo1412"},"content":" `deadline return book /by Monday 10pm`"},{"lineNumber":36,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":37,"author":{"gitId":"Chenduo1412"},"content":" Expected outcome:"},{"lineNumber":38,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":39,"author":{"gitId":"Chenduo1412"},"content":" `Got it. I\u0027ve added this task: "},{"lineNumber":40,"author":{"gitId":"Chenduo1412"},"content":"  [D] ✘ return book | Monday 10pm"},{"lineNumber":41,"author":{"gitId":"Chenduo1412"},"content":"  Now you have 2 in the list.`"},{"lineNumber":42,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":43,"author":{"gitId":"Chenduo1412"},"content":" ### Feature 3 "},{"lineNumber":44,"author":{"gitId":"Chenduo1412"},"content":"  Add event you have to attend within a period into the task list."},{"lineNumber":45,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":46,"author":{"gitId":"Chenduo1412"},"content":"  ## Usage"},{"lineNumber":47,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":48,"author":{"gitId":"Chenduo1412"},"content":"  ### `event` - Describe action"},{"lineNumber":49,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":50,"author":{"gitId":"Chenduo1412"},"content":"  Type event keywords and follow with the discription of the task to add the event type tasks into the list."},{"lineNumber":51,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":52,"author":{"gitId":"Chenduo1412"},"content":"  Example of usage: "},{"lineNumber":53,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":54,"author":{"gitId":"Chenduo1412"},"content":"  `event meeting with friend /at Monday 5pm-6pm`"},{"lineNumber":55,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":56,"author":{"gitId":"Chenduo1412"},"content":"  Expected outcome:"},{"lineNumber":57,"author":{"gitId":"Chenduo1412"},"content":"  "},{"lineNumber":58,"author":{"gitId":"Chenduo1412"},"content":"  `Got it. I\u0027ve added this task: "},{"lineNumber":59,"author":{"gitId":"Chenduo1412"},"content":"   [D] ✘ meeting with friend | Monday 5pm-6pm"},{"lineNumber":60,"author":{"gitId":"Chenduo1412"},"content":"   Now you have 3 in the list.`"},{"lineNumber":61,"author":{"gitId":"Chenduo1412"},"content":"   "},{"lineNumber":62,"author":{"gitId":"Chenduo1412"},"content":"### Feature 4 "},{"lineNumber":63,"author":{"gitId":"Chenduo1412"},"content":" Use list feature to list all the task inside the task list."},{"lineNumber":64,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":65,"author":{"gitId":"Chenduo1412"},"content":" ## Usage"},{"lineNumber":66,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":67,"author":{"gitId":"Chenduo1412"},"content":" ### `list` - Describe action"},{"lineNumber":68,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":69,"author":{"gitId":"Chenduo1412"},"content":" Type list keywords to show all the tasks in the list."},{"lineNumber":70,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":71,"author":{"gitId":"Chenduo1412"},"content":" Example of usage: "},{"lineNumber":72,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":73,"author":{"gitId":"Chenduo1412"},"content":" `list`"},{"lineNumber":74,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":75,"author":{"gitId":"Chenduo1412"},"content":" Expected outcome:"},{"lineNumber":76,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":77,"author":{"gitId":"Chenduo1412"},"content":" `-----------"},{"lineNumber":78,"author":{"gitId":"Chenduo1412"},"content":"  1.[D] ✘ aaa (by: 11月 9 2020)"},{"lineNumber":79,"author":{"gitId":"Chenduo1412"},"content":"  2.[E] ✘ bb (at: 10月 6 2020)"},{"lineNumber":80,"author":{"gitId":"Chenduo1412"},"content":"  3.[T] ✓ aaa"},{"lineNumber":81,"author":{"gitId":"Chenduo1412"},"content":"  4.[T] ✘ read book"},{"lineNumber":82,"author":{"gitId":"Chenduo1412"},"content":"  -----------`"},{"lineNumber":83,"author":{"gitId":"Chenduo1412"},"content":" "},{"lineNumber":84,"author":{"gitId":"Chenduo1412"},"content":"### Feature 5 "},{"lineNumber":85,"author":{"gitId":"Chenduo1412"},"content":"Add task you need to do into the task list."},{"lineNumber":86,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":87,"author":{"gitId":"Chenduo1412"},"content":"## Usage"},{"lineNumber":88,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":89,"author":{"gitId":"Chenduo1412"},"content":"### `done` - Describe action"},{"lineNumber":90,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":91,"author":{"gitId":"Chenduo1412"},"content":"Type done keywords and follow with the number of the task to mark the task as done."},{"lineNumber":92,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":93,"author":{"gitId":"Chenduo1412"},"content":"Example of usage: "},{"lineNumber":94,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":95,"author":{"gitId":"Chenduo1412"},"content":"`done 3`"},{"lineNumber":96,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":97,"author":{"gitId":"Chenduo1412"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":99,"author":{"gitId":"Chenduo1412"},"content":"`-----------------"},{"lineNumber":100,"author":{"gitId":"Chenduo1412"},"content":" Nice! I\u0027ve marked this task as done:"},{"lineNumber":101,"author":{"gitId":"Chenduo1412"},"content":" [✓] aaa`"},{"lineNumber":102,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":103,"author":{"gitId":"Chenduo1412"},"content":"### Feature 5 "},{"lineNumber":104,"author":{"gitId":"Chenduo1412"},"content":"Add task you need to do into the task list."},{"lineNumber":105,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":106,"author":{"gitId":"Chenduo1412"},"content":"## Usage"},{"lineNumber":107,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":108,"author":{"gitId":"Chenduo1412"},"content":"### `bye` - Describe action"},{"lineNumber":109,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":110,"author":{"gitId":"Chenduo1412"},"content":"Type bye keywords to exit the program."},{"lineNumber":111,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":112,"author":{"gitId":"Chenduo1412"},"content":"Example of usage: "},{"lineNumber":113,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":114,"author":{"gitId":"Chenduo1412"},"content":"`bye`"},{"lineNumber":115,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":116,"author":{"gitId":"Chenduo1412"},"content":"Expected outcome:"},{"lineNumber":117,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":118,"author":{"gitId":"Chenduo1412"},"content":"`----------------"},{"lineNumber":119,"author":{"gitId":"Chenduo1412"},"content":" Bye. Hope to see you again soon!"},{"lineNumber":120,"author":{"gitId":"Chenduo1412"},"content":" Process finished with exit code 0`"},{"lineNumber":121,"author":{"gitId":"Chenduo1412"},"content":" "}],"authorContributionMap":{"Chenduo1412":106,"-":15}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    public Deadline(String description, char type,LocalDate by) {"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"        super(description,type);"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"    public Deadline(String description, char type,LocalDate by,boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        super(description,type,isDone);"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"        this.by \u003d by;"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"        return \"[\"+this.type+\"] \" + this.getStatusIcon() + \" \" + this.description + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"    public String printToFIle(){"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"        return this.type+\"|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + by;"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":29}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"    public Parser paser;"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    public Ui ui;"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"    public Duke(String path){"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"        ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"        storage \u003d new Storage(path);"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"            tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"            ui.printError(e);"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"    public void run(){"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"        paser \u003d new Parser(ui,tasks);"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"        ui.printLogo();"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"        ui.greetMessage();"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":31,"author":{"gitId":"Chenduo1412"},"content":"        String str \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":33,"author":{"gitId":"Chenduo1412"},"content":"        while (!str.equals(\"bye\") ) {"},{"lineNumber":34,"author":{"gitId":"Chenduo1412"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"Chenduo1412"},"content":"                str \u003d ui.getInput(in);"},{"lineNumber":36,"author":{"gitId":"Chenduo1412"},"content":"                paser.handleCommands(str);"},{"lineNumber":37,"author":{"gitId":"Chenduo1412"},"content":"                storage.saveToFile(tasks);"},{"lineNumber":38,"author":{"gitId":"Chenduo1412"},"content":"            }catch (DukeException e){"},{"lineNumber":39,"author":{"gitId":"Chenduo1412"},"content":"                ui.printError(e);"},{"lineNumber":40,"author":{"gitId":"Chenduo1412"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Chenduo1412"},"content":"    public static void main(String[] args) {"},{"lineNumber":44,"author":{"gitId":"Chenduo1412"},"content":"         new Duke(\"/Users/chenduo/Desktop/ip/Duke.txt\").run();"},{"lineNumber":45,"author":{"gitId":"Chenduo1412"},"content":"        /*"},{"lineNumber":46,"author":{"gitId":"Chenduo1412"},"content":"        LocalDate d1 \u003d LocalDate.parse(\"2019-12-01\");"},{"lineNumber":47,"author":{"gitId":"Chenduo1412"},"content":"        LocalDate d2 \u003d LocalDate.parse(\"2019-12-02\");"},{"lineNumber":48,"author":{"gitId":"Chenduo1412"},"content":"        LocalDate d3 \u003d LocalDate.parse(\"2019-12-02\");"},{"lineNumber":49,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":50,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":51,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d1.isBefore(d2)); // -\u003e true"},{"lineNumber":52,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d1.isAfter(d2)); // -\u003e false"},{"lineNumber":53,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d2.equals(d3)); // -\u003e true"},{"lineNumber":54,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":55,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":56,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d1.getDayOfWeek()); // -\u003e SUNDAY"},{"lineNumber":57,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d1.getMonth()); // -\u003e DECEMBER"},{"lineNumber":58,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d1.plus(1, ChronoUnit.YEARS));  // -\u003e 2020-12-01"},{"lineNumber":59,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":60,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":61,"author":{"gitId":"Chenduo1412"},"content":"        LocalDate d4 \u003d LocalDate.now();"},{"lineNumber":62,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d4); // -\u003e 2019-10-15"},{"lineNumber":63,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(d4.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))); // -\u003e Oct 15 2019"},{"lineNumber":64,"author":{"gitId":"Chenduo1412"},"content":"      */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Chenduo1412":64,"-":3}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"    public DukeException(String msg){"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":7}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"public class Event extends Task{"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"    protected LocalDate at;"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    public Event(String description, char type,LocalDate at) {"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"        super(description,type);"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"        this.at \u003d at;"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"    public Event(String description, char type,LocalDate at,boolean isDone) {"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"        super(description,type,isDone);"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"        this.at \u003d at;"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"        return \"[\"+this.type+\"] \" + this.getStatusIcon() + \" \" + this.description + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"    public String printToFIle(){"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"        return this.type+\"|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + at;"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":30}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"import java.text.DateFormat;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"import java.util.*;"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"import java.util.regex.Matcher;"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    public Parser(Ui ui,TaskList tasks){"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"        this.ui \u003d ui;"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"    public void handleCommands(String str) throws DukeException{"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"        Task singleTask;"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"        int selectedIn;"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"        String keyword;"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"        if (!str.equals(\"\") \u0026 !str.equals(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"            if (str.equals(\"list\")) {"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"                ui.printList(tasks.getTasks());"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"            } else if (str.contains(\"done\")) {"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":"                selectedIn \u003d Integer.parseInt(str.split(\" \")[1]) - 1;"},{"lineNumber":31,"author":{"gitId":"Chenduo1412"},"content":"                tasks.getTasks().get(selectedIn).markAsDone();"},{"lineNumber":32,"author":{"gitId":"Chenduo1412"},"content":"                ui.printMarkAsDone(tasks.getTasks().get(selectedIn));"},{"lineNumber":33,"author":{"gitId":"Chenduo1412"},"content":"            } else {"},{"lineNumber":34,"author":{"gitId":"Chenduo1412"},"content":"                if (str.split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":35,"author":{"gitId":"Chenduo1412"},"content":"                    singleTask \u003d new Todo(str.substring(5), \u0027T\u0027);"},{"lineNumber":36,"author":{"gitId":"Chenduo1412"},"content":"                    tasks.storeInArray(singleTask);"},{"lineNumber":37,"author":{"gitId":"Chenduo1412"},"content":"                    ui.printTask(singleTask.toString(), tasks.getSize());"},{"lineNumber":38,"author":{"gitId":"Chenduo1412"},"content":"                } else if (str.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"Chenduo1412"},"content":"                    String[] deadline \u003d str.substring(9).split(\" /by \");"},{"lineNumber":40,"author":{"gitId":"Chenduo1412"},"content":"                    if (deadline.length \u003d\u003d 2) {"},{"lineNumber":41,"author":{"gitId":"Chenduo1412"},"content":"                        if(checkDateFormat(deadline[1])) {"},{"lineNumber":42,"author":{"gitId":"Chenduo1412"},"content":"                            singleTask \u003d new Deadline(deadline[0], \u0027D\u0027, LocalDate.parse(deadline[1]));"},{"lineNumber":43,"author":{"gitId":"Chenduo1412"},"content":"                            tasks.storeInArray(singleTask);"},{"lineNumber":44,"author":{"gitId":"Chenduo1412"},"content":"                            ui.printTask(singleTask.toString(), tasks.getSize());"},{"lineNumber":45,"author":{"gitId":"Chenduo1412"},"content":"                        }else {"},{"lineNumber":46,"author":{"gitId":"Chenduo1412"},"content":"                            throw new DukeException(\"OOPS!!! The format of date is not valid\");"},{"lineNumber":47,"author":{"gitId":"Chenduo1412"},"content":"                        }"},{"lineNumber":48,"author":{"gitId":"Chenduo1412"},"content":"                    }"},{"lineNumber":49,"author":{"gitId":"Chenduo1412"},"content":"                } else if (str.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":50,"author":{"gitId":"Chenduo1412"},"content":"                    String[] event \u003d str.substring(6).split(\" /at \");"},{"lineNumber":51,"author":{"gitId":"Chenduo1412"},"content":"                    if (event.length \u003d\u003d 2) {"},{"lineNumber":52,"author":{"gitId":"Chenduo1412"},"content":"                        if(checkDateFormat(event[1])) {"},{"lineNumber":53,"author":{"gitId":"Chenduo1412"},"content":"                            singleTask \u003d new Event(event[0], \u0027E\u0027, LocalDate.parse(event[1]));"},{"lineNumber":54,"author":{"gitId":"Chenduo1412"},"content":"                            tasks.storeInArray(singleTask);"},{"lineNumber":55,"author":{"gitId":"Chenduo1412"},"content":"                            ui.printTask(singleTask.toString(), tasks.getSize());"},{"lineNumber":56,"author":{"gitId":"Chenduo1412"},"content":"                        }else"},{"lineNumber":57,"author":{"gitId":"Chenduo1412"},"content":"                            throw new DukeException(\"OOPS!!! The format of date is not valid\");"},{"lineNumber":58,"author":{"gitId":"Chenduo1412"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"Chenduo1412"},"content":"                } else if (str.contains(\"delete\")) {"},{"lineNumber":60,"author":{"gitId":"Chenduo1412"},"content":"                    selectedIn \u003d Integer.parseInt(str.split(\" \")[1]) - 1;"},{"lineNumber":61,"author":{"gitId":"Chenduo1412"},"content":"                    System.out.println(\"selectedIn:\" + selectedIn);"},{"lineNumber":62,"author":{"gitId":"Chenduo1412"},"content":"                    singleTask \u003d tasks.getTasks().get(selectedIn);"},{"lineNumber":63,"author":{"gitId":"Chenduo1412"},"content":"                    tasks.deleteFromList(selectedIn);"},{"lineNumber":64,"author":{"gitId":"Chenduo1412"},"content":"                    ui.printDeleteMsg(singleTask, tasks.getSize());"},{"lineNumber":65,"author":{"gitId":"Chenduo1412"},"content":"                } else if(str.contains(\"find\")){"},{"lineNumber":66,"author":{"gitId":"Chenduo1412"},"content":"                    ArrayList\u003cTask\u003e temp \u003d new  ArrayList\u003cTask\u003e();"},{"lineNumber":67,"author":{"gitId":"Chenduo1412"},"content":"                    keyword\u003dstr.split(\" \")[1];"},{"lineNumber":68,"author":{"gitId":"Chenduo1412"},"content":"                    for(Task t:tasks.getTasks()){"},{"lineNumber":69,"author":{"gitId":"Chenduo1412"},"content":"                        if(t.getDescription().contains(keyword)){"},{"lineNumber":70,"author":{"gitId":"Chenduo1412"},"content":"                            temp.add(t);"},{"lineNumber":71,"author":{"gitId":"Chenduo1412"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"Chenduo1412"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"Chenduo1412"},"content":"                    ui.printFind(temp);"},{"lineNumber":74,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":75,"author":{"gitId":"Chenduo1412"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"Chenduo1412"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"Chenduo1412"},"content":"        if(str.equals(\"bye\")) {"},{"lineNumber":79,"author":{"gitId":"Chenduo1412"},"content":"            ui.exitMessage();"},{"lineNumber":80,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Chenduo1412"},"content":"    private boolean checkDateFormat(String dateStr){"},{"lineNumber":83,"author":{"gitId":"Chenduo1412"},"content":"        /*"},{"lineNumber":84,"author":{"gitId":"Chenduo1412"},"content":"        Pattern pattern \u003d Pattern.compile(\".*[a-zA-Z]+.*\");"},{"lineNumber":85,"author":{"gitId":"Chenduo1412"},"content":"        Matcher matcher \u003d pattern.matcher(dateStr);"},{"lineNumber":86,"author":{"gitId":"Chenduo1412"},"content":"        if (matcher.matches()) {"},{"lineNumber":87,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println(\"string \u0027\"+dateStr + \"\u0027 contains at least one alphabets/letters\");"},{"lineNumber":88,"author":{"gitId":"Chenduo1412"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println(\"string \u0027\"+dateStr + \"\u0027 doesn\u0027t contains any alphabets/letters value\");"},{"lineNumber":90,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":92,"author":{"gitId":"Chenduo1412"},"content":"         */"},{"lineNumber":93,"author":{"gitId":"Chenduo1412"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(dateStr);"},{"lineNumber":94,"author":{"gitId":"Chenduo1412"},"content":"        sdf.setLenient(false);"},{"lineNumber":95,"author":{"gitId":"Chenduo1412"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"Chenduo1412"},"content":"            sdf.parse(dateStr);"},{"lineNumber":97,"author":{"gitId":"Chenduo1412"},"content":"        } catch (ParseException e) {"},{"lineNumber":98,"author":{"gitId":"Chenduo1412"},"content":"            return false;"},{"lineNumber":99,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"Chenduo1412"},"content":"        return true;"},{"lineNumber":101,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":103,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":103}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"import java.text.DateFormat;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"    private String path;"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    public Storage (String path){"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"        this.path\u003dpath;"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    public Storage(){}"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"    public void saveToFile(TaskList tasks) throws DukeException{"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"            FileWriter fw \u003d null;"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"            fw \u003d new FileWriter(path, false);"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"            PrintWriter pw \u003d new PrintWriter(fw);"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"            for (Task t : tasks.getTasks()) {"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"                pw.println(t.printToFIle());"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"            pw.close();"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"            fw.close();"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"problem encountered while writing data: \" + e.getMessage());"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Chenduo1412"},"content":"    public Task createTask(String line){"},{"lineNumber":33,"author":{"gitId":"Chenduo1412"},"content":"        String[] taskInfo \u003d line.split(\"\\\\|\");"},{"lineNumber":34,"author":{"gitId":"Chenduo1412"},"content":"        Task task;"},{"lineNumber":35,"author":{"gitId":"Chenduo1412"},"content":"        boolean isDone \u003d (Integer.parseInt(taskInfo[1].trim())\u003d\u003d1);"},{"lineNumber":36,"author":{"gitId":"Chenduo1412"},"content":"        if(taskInfo[0].trim().equals(\"D\"))"},{"lineNumber":37,"author":{"gitId":"Chenduo1412"},"content":"            task\u003dnew Deadline(taskInfo[2],\u0027D\u0027, LocalDate.parse(taskInfo[3]),isDone);"},{"lineNumber":38,"author":{"gitId":"Chenduo1412"},"content":"        else if(taskInfo[0].trim().equals(\"E\"))"},{"lineNumber":39,"author":{"gitId":"Chenduo1412"},"content":"            task\u003dnew Event(taskInfo[2],\u0027E\u0027, LocalDate.parse(taskInfo[3]),isDone);"},{"lineNumber":40,"author":{"gitId":"Chenduo1412"},"content":"        else"},{"lineNumber":41,"author":{"gitId":"Chenduo1412"},"content":"            task\u003dnew Todo(taskInfo[2],\u0027T\u0027,isDone);"},{"lineNumber":42,"author":{"gitId":"Chenduo1412"},"content":"        return task;"},{"lineNumber":43,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":45,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":46,"author":{"gitId":"Chenduo1412"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException{"},{"lineNumber":47,"author":{"gitId":"Chenduo1412"},"content":"        int count\u003d0;"},{"lineNumber":48,"author":{"gitId":"Chenduo1412"},"content":"        ArrayList\u003cTask\u003e ts \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":49,"author":{"gitId":"Chenduo1412"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"Chenduo1412"},"content":"            File tasksFile \u003d new File(path);"},{"lineNumber":51,"author":{"gitId":"Chenduo1412"},"content":"            Scanner rf\u003d new Scanner(tasksFile);"},{"lineNumber":52,"author":{"gitId":"Chenduo1412"},"content":"            while(rf.hasNextLine()) {"},{"lineNumber":53,"author":{"gitId":"Chenduo1412"},"content":"                String line\u003d rf.nextLine().trim();"},{"lineNumber":54,"author":{"gitId":"Chenduo1412"},"content":"                if(line.trim().isEmpty())continue;"},{"lineNumber":55,"author":{"gitId":"Chenduo1412"},"content":"                ts.add(createTask(line));"},{"lineNumber":56,"author":{"gitId":"Chenduo1412"},"content":"                count++;"},{"lineNumber":57,"author":{"gitId":"Chenduo1412"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"Chenduo1412"},"content":"            rf.close();"},{"lineNumber":59,"author":{"gitId":"Chenduo1412"},"content":"        }catch (FileNotFoundException e){"},{"lineNumber":60,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":61,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Chenduo1412"},"content":"        return ts;"},{"lineNumber":63,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":65,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":65}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"    protected char type;"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"    public Task(String description,char type) {"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"    public Task(String description,char type,boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        this.type \u003d type;"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"        this.isDone\u003disDone;"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"    public void markAsDone(){"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"        this.isDone \u003dtrue;"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"    public abstract String toString();"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"    public abstract String printToFIle();"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":"    public String getDescription(){"},{"lineNumber":31,"author":{"gitId":"Chenduo1412"},"content":"        return this.description;"},{"lineNumber":32,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":33}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"        this.tasks\u003dtasks;"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"    public TaskList(){}"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"    public ArrayList\u003cTask\u003e getTasks(){"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"        return tasks;"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    public int getSize(){"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"        return tasks.size();"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"    public void storeInArray(Task t) {"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        tasks.add(t);"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"    public void deleteFromList(int index) {"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"        tasks.remove(index);"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":24}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"    public Todo(String description,char type) {"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"        super(description,type);"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"    public Todo(String description,char type,boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"        super(description,type,isDone);"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"        return \"[\"+this.type+\"] \" + this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"    public String printToFIle(){"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        return this.type+\"|\" + (isDone ? \"1\" : \"0\")+ \"|\" + this.description;"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"}"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":""}],"authorContributionMap":{"Chenduo1412":22}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"    private Scanner in \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"    public void printLogo(){"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"    public void greetMessage() {"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"Hello! I\u0027m Duke.Duke\");"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"    public void exitMessage(){"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"----------------\\n\"+\"Bye. Hope to see you again soon!\");"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"    public String getInput(Scanner in) throws DukeException{"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"        String s\u003din.nextLine().trim();"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"       if(s.equals(\"todo\") | s.equals(\"deadline\") | s.equals(\"event\") | s.equals(\"delete\") | s.equals(\"find\") )"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! The description of a \"+s+\" cannot be empty\");"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"        else if(!s.startsWith(\"todo\") \u0026 !s.startsWith(\"deadline\") \u0026 !s.startsWith(\"event\") \u0026 !s.startsWith(\"delete\")"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"              \u0026 !s.startsWith(\"done\") \u0026 !s.equals(\"list\") \u0026 !s.equals(\"bye\") \u0026 !s.startsWith(\"find\"))"},{"lineNumber":30,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":31,"author":{"gitId":"Chenduo1412"},"content":"        else if(s.startsWith(\"event\") \u0026 !s.contains(\"/at\"))"},{"lineNumber":32,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! The date of event cannot be empty\");"},{"lineNumber":33,"author":{"gitId":"Chenduo1412"},"content":"        else if(s.startsWith(\"deadline\") \u0026 !s.contains(\"/by\"))"},{"lineNumber":34,"author":{"gitId":"Chenduo1412"},"content":"           throw new DukeException(\"OOPS!!! The date of deadline cannot be empty\");"},{"lineNumber":35,"author":{"gitId":"Chenduo1412"},"content":"        else if(s.equals(\"done\") | s.equals(\"delete\"))"},{"lineNumber":36,"author":{"gitId":"Chenduo1412"},"content":"           throw new DukeException(\"OOPS!!! The index of task cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"Chenduo1412"},"content":"        return s;"},{"lineNumber":38,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Chenduo1412"},"content":"    public String getInputForTestOnly(String in) throws DukeException{"},{"lineNumber":40,"author":{"gitId":"Chenduo1412"},"content":"        String s\u003din;"},{"lineNumber":41,"author":{"gitId":"Chenduo1412"},"content":""},{"lineNumber":42,"author":{"gitId":"Chenduo1412"},"content":"        if(s.equals(\"todo\") | s.equals(\"deadline\") | s.equals(\"event\") | s.equals(\"delete\") | s.equals(\"find\") )"},{"lineNumber":43,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! The description of a \"+s+\" cannot be empty\");"},{"lineNumber":44,"author":{"gitId":"Chenduo1412"},"content":"        else if(!s.startsWith(\"todo\") \u0026 !s.startsWith(\"deadline\") \u0026 !s.startsWith(\"event\") \u0026 !s.startsWith(\"delete\")"},{"lineNumber":45,"author":{"gitId":"Chenduo1412"},"content":"                \u0026 !s.startsWith(\"done\") \u0026 !s.equals(\"list\") \u0026 !s.equals(\"bye\") \u0026 !s.startsWith(\"find\"))"},{"lineNumber":46,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":47,"author":{"gitId":"Chenduo1412"},"content":"        else if(s.startsWith(\"event\") \u0026 !s.contains(\"/at\"))"},{"lineNumber":48,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! The date of event cannot be empty\");"},{"lineNumber":49,"author":{"gitId":"Chenduo1412"},"content":"        else if(s.startsWith(\"deadline\") \u0026 !s.contains(\"/by\"))"},{"lineNumber":50,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! The date of deadline cannot be empty\");"},{"lineNumber":51,"author":{"gitId":"Chenduo1412"},"content":"        else if(s.equals(\"done\") | s.equals(\"delete\"))"},{"lineNumber":52,"author":{"gitId":"Chenduo1412"},"content":"            throw new DukeException(\"OOPS!!! The index of task cannot be empty\");"},{"lineNumber":53,"author":{"gitId":"Chenduo1412"},"content":"        return s;"},{"lineNumber":54,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Chenduo1412"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":56,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"-----------\");"},{"lineNumber":57,"author":{"gitId":"Chenduo1412"},"content":"        int i\u003d1;"},{"lineNumber":58,"author":{"gitId":"Chenduo1412"},"content":"        for (Task t:tasks){"},{"lineNumber":59,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println((i)+\".\"+t.toString());"},{"lineNumber":60,"author":{"gitId":"Chenduo1412"},"content":"            i++;"},{"lineNumber":61,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"-----------\");"},{"lineNumber":63,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Chenduo1412"},"content":"    public void printTask(String str,int count){"},{"lineNumber":65,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"--------------\\nGot it. I\u0027ve added this task: \" + \"\\n\"+str);"},{"lineNumber":66,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"Now you have \"+count+\" in the list.\\n-------------------\");"},{"lineNumber":67,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Chenduo1412"},"content":"    public void printMarkAsDone(Task t){"},{"lineNumber":69,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println( \"-----------------\\n\"+\"Nice! I\u0027ve marked this task as done:\\n\"+\"[\"+t.getStatusIcon()+\"] \"+"},{"lineNumber":70,"author":{"gitId":"Chenduo1412"},"content":"                t.description);"},{"lineNumber":71,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Chenduo1412"},"content":"    public void printError(Exception e){"},{"lineNumber":73,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"--------------\\n\"+e+\"\\n-------------------\");"},{"lineNumber":74,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Chenduo1412"},"content":"    public void printDeleteMsg(Task t,int count){"},{"lineNumber":76,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println( \"-----------------\\n Noted. I\u0027ve removed this task: \\n\"+\"[\"+t.getStatusIcon()+\"]\"+"},{"lineNumber":77,"author":{"gitId":"Chenduo1412"},"content":"                t.description+\"\\n Now you have \"+count+\" tasks in the list.\\n-----------------\");"},{"lineNumber":78,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Chenduo1412"},"content":"    public void printFind(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":80,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"--------------\\nHere are the matching tasks in your list: \" + \"\\n\");"},{"lineNumber":81,"author":{"gitId":"Chenduo1412"},"content":"        int i\u003d1;"},{"lineNumber":82,"author":{"gitId":"Chenduo1412"},"content":"        for (Task t:tasks){"},{"lineNumber":83,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println((i)+\".\"+t.toString());"},{"lineNumber":84,"author":{"gitId":"Chenduo1412"},"content":"            i++;"},{"lineNumber":85,"author":{"gitId":"Chenduo1412"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Chenduo1412"},"content":"        System.out.println(\"-----------\");"},{"lineNumber":87,"author":{"gitId":"Chenduo1412"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Chenduo1412"},"content":"}"}],"authorContributionMap":{"Chenduo1412":88}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Chenduo1412":2,"-":19}}]
