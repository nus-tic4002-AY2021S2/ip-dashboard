[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    mainClassName \u003d \"com.example.duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"JanuariusJang":1}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"D|1|Finish Assignment|Monday"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"D|0|seminar|Monday 2-4pm"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"T|0|return library books"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"T|0|return library books"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"D|1|finish assignment 2|Monday"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"T|0|read book"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"D|0|return book |June 6th"}],"authorContributionMap":{"JanuariusJang":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"# Duke Chatbot User Guide"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"## Features List"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"### Add todo"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"To all a Todo Task. Todo Tasks only have a description and a status if the task has been carried out"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"### Add deadline"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"To add a Deadline Task. Deadline Tasks are similar to Todo task, but have an additional end date."},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"### Add event"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"To add an Event Task. Event Tasks are similar to Todo task, but have start and end dates."},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"### Delete"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"To delete away a Task"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"### List"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"To list all Tasks in the system, sorted by their index number."},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"### Done"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"To mark Tasks as done. "},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"### Bye"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"To exit the program."},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"### Find"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"To find tasks by the description."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"### `Add Todo` - add Todo task to the program"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to add a todo Task to the chat bot"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"`todo return library books`"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"`a Todo task will be added. To view, enter list`"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"### `Add Deadline` - add Deadline task to the program"},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to add a Deadline Task to the chat bot"},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":"`deadline finish assignment 2 by Monday`"},{"lineNumber":55,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":56,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":57,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":58,"author":{"gitId":"JanuariusJang"},"content":"`a deadline task will be added. To view, enter list`"},{"lineNumber":59,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":60,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":61,"author":{"gitId":"JanuariusJang"},"content":"### `Add Event` - add Event task to the program"},{"lineNumber":62,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":63,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to add an Event Task to the chat bot"},{"lineNumber":64,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":65,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":66,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":67,"author":{"gitId":"JanuariusJang"},"content":"`event Shareholder meeting at Monday 2pm-4pm`"},{"lineNumber":68,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":69,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":70,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":71,"author":{"gitId":"JanuariusJang"},"content":"`a Event task will be added. To view, enter list`"},{"lineNumber":72,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":73,"author":{"gitId":"JanuariusJang"},"content":"### `Delete` - Delete a Task from the program"},{"lineNumber":74,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":75,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to delete a Task from the chat bot. You will also need to include the index number"},{"lineNumber":76,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":77,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":78,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":79,"author":{"gitId":"JanuariusJang"},"content":"delete 3"},{"lineNumber":80,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":81,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":83,"author":{"gitId":"JanuariusJang"},"content":"`Task 3 will be deleted from the system`"},{"lineNumber":84,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":85,"author":{"gitId":"JanuariusJang"},"content":"### `List` - Displays all Tasks in the program"},{"lineNumber":86,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":87,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to see all Tasks from the chat bot."},{"lineNumber":88,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":89,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":91,"author":{"gitId":"JanuariusJang"},"content":"list"},{"lineNumber":92,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":93,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":95,"author":{"gitId":"JanuariusJang"},"content":"`All Tasks will be listed`"},{"lineNumber":96,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":97,"author":{"gitId":"JanuariusJang"},"content":"### `Done` - Marks a particular task as completed."},{"lineNumber":98,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":99,"author":{"gitId":"JanuariusJang"},"content":"This is used if the task has been completed and you needed to mark it as such. You will need to input the index number of the task"},{"lineNumber":100,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":101,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":102,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":103,"author":{"gitId":"JanuariusJang"},"content":"done 3"},{"lineNumber":104,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":105,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":107,"author":{"gitId":"JanuariusJang"},"content":"`Task 3 will be marked as completed. To see full list, enter list. Tick denotes Task has been completed. Cross denotes not completed`"},{"lineNumber":108,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":109,"author":{"gitId":"JanuariusJang"},"content":"### `Bye` - exit the program"},{"lineNumber":110,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":111,"author":{"gitId":"JanuariusJang"},"content":"To be used to exit the program"},{"lineNumber":112,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":113,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":115,"author":{"gitId":"JanuariusJang"},"content":"bye"},{"lineNumber":116,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":117,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":119,"author":{"gitId":"JanuariusJang"},"content":"`Program will end`"},{"lineNumber":120,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":121,"author":{"gitId":"JanuariusJang"},"content":"### `Find` - search for task descriptions that matches the keyword"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"JanuariusJang"},"content":"To be used to find a task that matches your keyword. you will need to enter the keyword."},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"JanuariusJang"},"content":"find book"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"JanuariusJang"},"content":"`Tasks that contain the word book will be displayed. For example: Todo Return book`"}],"authorContributionMap":{"JanuariusJang":119,"-":12}},{"path":"src/main/java/com/example/duke/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String deadline;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public AddDeadlineCommand(String description, String byDate) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        deadline \u003d byDate;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Deadline myDeadline \u003d new Deadline(taskDescription, deadline);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        myTask.add(myDeadline);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Deadline has been added successfully\");"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":17}},{"path":"src/main/java/com/example/duke/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String deadline;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public AddEventCommand(String description, String byDate) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        deadline \u003d byDate;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui myUi, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Event myEvent \u003d new Event(taskDescription, deadline);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        myTask.add(myEvent);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        myUi.showMessageToUser(\"Event has been added successfully\");"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":17}},{"path":"src/main/java/com/example/duke/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"        Todo myTodo \u003d new Todo(taskDescription);"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTask.add(myTodo);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        //System.out.println(\"new todo added, \" + taskDescription);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Todo has been added successfully\");"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":16}},{"path":"src/main/java/com/example/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String taskDescription;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public Command() {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public Command(String description) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        taskDescription \u003d description;"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        return false;"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":23}},{"path":"src/main/java/com/example/duke/CreateTaskFromFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Date;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":" * Creates the Task from text file."},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":" * @return An Arraylist of Tasks created from text files."},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":" */"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"public class CreateTaskFromFile {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    public static ArrayList\u003cTask\u003e getTasksFromFile(String filepath) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"            List\u003cString\u003e lines \u003d getLines(filepath);"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"            for (String line : lines) {"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"                if (line.trim().isEmpty()) { //ignore empty lines"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"                    continue;"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"                }"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"                loadedTasks.add(createTask(line)); //convert the line to a task and add to the list"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"            printError(\"Problem encountered while loading data: \" + e.getMessage());"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"            throw new DukeException(\"File path incorrect\");"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        return loadedTasks;"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    private static List\u003cString\u003e getLines(String data) throws FileNotFoundException {"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        File f \u003d new File(data);"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"        List\u003cString\u003e myStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"        while (s.hasNext()) {"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"            myStrings.add(s.nextLine());"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"        return myStrings;"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"     * Method that creates task."},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"     * @param myTask the Task that is in the text file that gets decoded and created as object."},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"     * @return the Task object."},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"    private static Task createTask(String myTask) {"},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":"        String taskType \u003d myTask.split(\"\\\\|\")[0].trim();"},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":"        String doneOrNot \u003d myTask.split(\"\\\\|\")[1].trim();"},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":"        String taskDescription \u003d myTask.split(\"\\\\|\")[2].trim();"},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":55,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":56,"author":{"gitId":"JanuariusJang"},"content":"        //System.out.println(taskType);"},{"lineNumber":57,"author":{"gitId":"JanuariusJang"},"content":"        if (taskType.contains(\"T\")) {"},{"lineNumber":58,"author":{"gitId":"JanuariusJang"},"content":"            boolean done \u003d false;"},{"lineNumber":59,"author":{"gitId":"JanuariusJang"},"content":"            if (Integer.parseInt(doneOrNot) \u003d\u003d 1) {"},{"lineNumber":60,"author":{"gitId":"JanuariusJang"},"content":"                done \u003d true;"},{"lineNumber":61,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":63,"author":{"gitId":"JanuariusJang"},"content":"            // System.out.println(doneOrNot);"},{"lineNumber":64,"author":{"gitId":"JanuariusJang"},"content":"            return new Todo(taskDescription, done);"},{"lineNumber":65,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":66,"author":{"gitId":"JanuariusJang"},"content":"        } else if (taskType.contains(\"D\")) {"},{"lineNumber":67,"author":{"gitId":"JanuariusJang"},"content":"            String Deadline \u003d myTask.split(\"\\\\|\")[3].trim();"},{"lineNumber":68,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":69,"author":{"gitId":"JanuariusJang"},"content":"            boolean done \u003d false;"},{"lineNumber":70,"author":{"gitId":"JanuariusJang"},"content":"            if (Integer.parseInt(doneOrNot) \u003d\u003d 1) {"},{"lineNumber":71,"author":{"gitId":"JanuariusJang"},"content":"                done \u003d true;"},{"lineNumber":72,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"JanuariusJang"},"content":"            return new Deadline(taskDescription, Deadline, done);"},{"lineNumber":74,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":75,"author":{"gitId":"JanuariusJang"},"content":"        } else if (taskType.contains(\"E\")) {"},{"lineNumber":76,"author":{"gitId":"JanuariusJang"},"content":"            String Duration \u003d myTask.split(\"\\\\|\")[3].trim();"},{"lineNumber":77,"author":{"gitId":"JanuariusJang"},"content":"            boolean done \u003d false;"},{"lineNumber":78,"author":{"gitId":"JanuariusJang"},"content":"            if (Integer.parseInt(doneOrNot) \u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"JanuariusJang"},"content":"                done \u003d true;"},{"lineNumber":80,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"JanuariusJang"},"content":"            return new Deadline(taskDescription, Duration, done);"},{"lineNumber":82,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":83,"author":{"gitId":"JanuariusJang"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"JanuariusJang"},"content":"            return null;"},{"lineNumber":85,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":88,"author":{"gitId":"JanuariusJang"},"content":"    private static void printError(String errorMsg) {"},{"lineNumber":89,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(errorMsg + \" error! please try again\");"},{"lineNumber":90,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":92,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":93,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":93}},{"path":"src/main/java/com/example/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public Deadline(String description, String by, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"     * Return string in format to be displayed on screen."},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"     * @return for onscreen display"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description + \" (by: \" + by + \")\";"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"     * Return string in format to be displayed on screen."},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"     * @return for writing to file"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    public String toWriteFileString() {"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"        return \"D\" + \"|\" + super.getStatusIconForFile() + \"|\" + super.description + \"|\" + by;"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":33}},{"path":"src/main/java/com/example/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String index;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public DeleteCommand(String index) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        this.index \u003d index;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTask.remove(Integer.parseInt(index) - 1);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Task successfully deleted\");"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":15}},{"path":"src/main/java/com/example/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class DoneCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String index;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public DoneCommand(String index) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        this.index \u003d index;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTask.markAsDone(Integer.parseInt(index) - 1);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Marked as done successfully\");"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":15}},{"path":"src/main/java/com/example/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import java.io.InputStreamReader;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    public Duke(String filePath) {"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        } catch (DukeException e) {"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"            ui.showLoadingError();"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    public void run() {"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        ui.printWelcome();"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"        boolean isExit \u003d false;"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"        while (!isExit) {"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"            String fullCommand \u003d ui.readCommand();"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"            Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"            c.execute(tasks, ui, storage);"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"            isExit \u003d c.isExit();"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    public static void main(String[] args) {"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"        new Duke(\"/Users/januariusjang/Downloads/iP/data/tasks.txt\").run();"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JanuariusJang":40,"-":2}},{"path":"src/main/java/com/example/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":7}},{"path":"src/main/java/com/example/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public Event(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"     * Format to be displayed on screen."},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"     * @return for onscreen display"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description + \" (at: \" + by + \")\";"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"     * format to be written to file."},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"     * @return for writing to file"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    public String toWriteFileString() {"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"        return \"E\" + \"|\" + super.getStatusIconForFile() + \"|\" + super.description + \"|\" + by;"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":28}},{"path":"src/main/java/com/example/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class ExitCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public boolean isExit() {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        return true;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":7}},{"path":"src/main/java/com/example/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String searchText;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public FindCommand(String searchText) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        this.searchText \u003d searchText;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Here are the matching tasks in your list:\");"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        for (int i \u003d 0; i \u003c myTask.size(); i++) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"            if (myTask.getDescription(i).contains(searchText)) {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"                ui.showMessageToUser(myTask.get(i).toString());"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":20}},{"path":"src/main/java/com/example/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class ListCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"        if (myTask.size() \u003c 1) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"            System.out.println(\"Sorry, no Tasks to list\");"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        for (int i \u003d 0; i \u003c myTask.size(); i++) {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"            ui.showMessageToUser(i + 1 + myTask.get(i).toString());"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"            //System.out.println(\"list command\");"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":15}},{"path":"src/main/java/com/example/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public static Command parse(String userInput) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"        String[] arrayOfStr \u003d userInput.split(\" \", 2);"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        switch (arrayOfStr[0]) {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"            case \"todo\":"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"                return new AddTodoCommand(arrayOfStr[1]);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"            case \"deadline\":"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"                String[] arrayOfDeadlineDetails \u003d arrayOfStr[1].split(\"by \", 2);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"                return new AddDeadlineCommand(arrayOfDeadlineDetails[0], arrayOfDeadlineDetails[1]);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"            case \"event\":"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"                String[] arrayOfEventDetails \u003d arrayOfStr[1].split(\"at \", 2);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"                return new AddEventCommand(arrayOfEventDetails[0], arrayOfEventDetails[1]);"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"            case \"delete\":"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"                return new DeleteCommand(arrayOfStr[1]);"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"            case \"list\":"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"                //System.out.println(\"list command\");"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"                return new ListCommand();"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"            case \"done\":"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"                return new DoneCommand(arrayOfStr[1]);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"            case \"bye\":"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"                return new ExitCommand();"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"            case \"find\":"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"                return new FindCommand(arrayOfStr[1]);"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"            default:"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"                return new Command();"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":37}},{"path":"src/main/java/com/example/duke/SaveTaskToFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"public class SaveTaskToFile {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    public static void saveFile(TaskList myTasks) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        int currentCount \u003d 0;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        String myFile \u003d \"/Users/januariusjang/Downloads/iP/data/tasks.txt\";"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"            File f \u003d new File(myFile);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"            while (s.hasNext()) {"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"                currentCount++;"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"                s.nextLine();"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"            PrintWriter writer \u003d new PrintWriter(myFile);"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"            writer.print(\"\");"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"            writer.close();"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"            //for (int i \u003d currentCount; i \u003c myTasks.size(); i++) {"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"            for (int i \u003d 0; i \u003c myTasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"                //System.out.println(myTasks.get(i).asSaveString());"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"                writeToFile(myFile, myTasks.get(i).toWriteFileString());"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"        fw.write(textToAdd);"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"        fw.write(System.lineSeparator());"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"        fw.close();"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":45}},{"path":"src/main/java/com/example/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"public class Storage {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    private String filePath;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public Storage(String filePath) {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        return CreateTaskFromFile.getTasksFromFile(filePath);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    public void saveFile(TaskList myTask) {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        SaveTaskToFile.saveFile(myTask);"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":23}},{"path":"src/main/java/com/example/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    public String getStatusIconForFile() {"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        this.isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    /*public String toString()"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"    {"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    public abstract String toString();"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    public abstract String toWriteFileString();"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":40}},{"path":"src/main/java/com/example/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    private ArrayList\u003cTask\u003e myTasks;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksFromFile) {"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        myTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.addAll(tasksFromFile);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    public void add(Task myTask) {"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.add(myTask);"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    public void remove(int index) {"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.remove(index);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    public int size() {"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"        return myTasks.size();"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"    public void markAsDone(int index) {"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.get(index).markAsDone();"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    public String getDescription(int index) {"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        return myTasks.get(index).description;"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"    public Task get(int index) {"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"        return myTasks.get(index);"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":42}},{"path":"src/main/java/com/example/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        super(description, isDone);"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"     * Format for onscreen format."},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"     * @return for onscreen display"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description;"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"     * Format to be written to file."},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"     * @return for writing to file"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    public String toWriteFileString() {"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        return \"T\" + \"|\" + super.getStatusIconForFile() + \"|\" + super.description;"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":29}},{"path":"src/main/java/com/example/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    private Scanner in;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        in \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    public void showToUser(String myMessage) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(myMessage);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    public void printWelcome() {"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"Hello, I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    public void printError(String errorMessage) {"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"There seems to be an error.\" + errorMessage);"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    public String readCommand() {"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"        return in.nextLine();"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    public void showLoadingError() {"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"There seems to be a file loading error. No tasks are preloaded\\nStarting a new list...\");"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    public void showMessageToUser(String message) {"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(message);"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":37}},{"path":"src/test/Java/com.example.duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public void dummyTest()"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Todo myTodo\u003dnew Todo(\"todo cut hair\",true);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"todo cut hair\",myTodo.description);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        assertTrue(myTodo.isDone);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        Deadline myDeadline\u003dnew Deadline(\"Finish Assignment 2\",\"Monday\");"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Finish Assignment 2\",myDeadline.description);"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Monday\",myDeadline.by);"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(false,myDeadline.isDone);"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"        Event myEvent\u003dnew Event(\"Attend seminar\",\"Monday 2-4pm\");"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Attend seminar\",myEvent.description);"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Attend seminar\",myEvent.description);"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(false,myEvent.isDone);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"todo buy bread"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"deadline finish assignment by Sunday"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"event attend seminar at Monday 2-4pm"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"list"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"bye"}],"authorContributionMap":{"JanuariusJang":5}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"Hello! I\u0027m Duke"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"What can I do for you?"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"[T][✘]buy bread"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"Now you have 1 tasks in the list"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"[D][✘]finish assignment  (by: Sunday)"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"Now you have 2 tasks in the list"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"[E][✘]attend seminar  (by: Monday 2-4pm)"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"Now you have 3 tasks in the list"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"1[T][✘]buy bread"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"2[D][✘]finish assignment  (by: Sunday)"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"3[E][✘]attend seminar  (by: Monday 2-4pm)"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":" Bye.Hope to see you again soon!"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":18}}]
