[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"1. After the importing is complete, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"   "},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"![Image of TaskClassDiagram](https://github.com/JanuariusJang/ip/blob/master/docs/images/UI.png?raw\u003dtrue)"}],"authorContributionMap":{"-":17,"JanuariusJang":3}},{"path":"UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"IT Logger is a desktop app for managing program issues, and tracking issue resolution progression via a Command Line Interface (CLI)."},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"2. Download the latest ITlogger.jar."},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"3. Copy the file to the folder you want to use as the home folder for your IT Logger."},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"4. Open the program which should appear in the command prompt with java -jar [Directory of the ITlogger.jar file]."},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"## Features "},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"|Action| Command Summary|"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"|--------|----------|"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"|view | View the issue that is stated with Ticket Number.|"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"|add  | Adding a new issue.|"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"|update |Update an existing issue.|"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"|list |Listing all issues in selected requirement|"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"|search |Search the issue with conditions|"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"|delete |Delete an issue that is stated with Ticket Number|"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"|help |Display the Help Guide|"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"|exit |Exit the ITlogger program|"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"|Nil. Not required. If text file itLogger.txt is found, it will preload. |Load issues from text files when program starts|"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"|exit|Save issues to itLogger.txt when program exits. If none exists, it will create one.|"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"### Command Summary"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":" "},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"|Action|Format, Examples|"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"|--------|----------|"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"|add|add t/TITLE s/STATUS sv/SEVERITY dl/DEADLINE o/OWNER\u003cbr\u003eE.g. add t/cannot submit s/assigned sv/1 dl/20-10-2020 o/Jack |"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"|update|Update procedure and cmd format:\u003cbr\u003eUsing the following cmd to enter updating mode:\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;update u/1\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;update u/0 \u003cbr\u003eUpdate the content with the following format: \u003cbr\u003eupdate t/ExampleTitle\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;update sv/2\u003cbr\u003eupdate s/assigned\u003cbr\u003eupdate o/Peter\u003cbr\u003eOnce finish updating, using:\u003cbr\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;update e/exit \u003cbr\u003eto exit update|"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"|view|view v/TICKET\u003cbr\u003eE.g. view v/13451|"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"|delete|delete d/TICKET\u003cbr\u003eE.g. delete d/32231|"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"|list|list\u003cbr\u003elist sv/a\u003cbr\u003elist sv/d\u003cbr\u003elist dl/a\u003cbr\u003elist dl/d\u003cbr\u003elist dr/a\u003cbr\u003elist dr/d|"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"|help|help|"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"|search|search /title /\u003ctitle\u003e\u003cbr\u003esearch /status /\u003cstatus\u003e\u003cbr\u003esearch /severity /\u003cseverityNum\u003e\u003cbr\u003esearch /owner /\u003cowner\u003e\u003cbr\u003esearch /deadline /\u003cdeadlineDateString(dd-MM-yyyy)\u003e|"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"|exit|exit|"},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":46}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"    //mainClassName \u003d \"com.example.duke.Duke\""},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"JanuariusJang":20}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"D|1|seminar|Monday 2-4pm"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"T|1|return money"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"T|0|return library books"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"D|1|finish assignment 2|Monday"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"T|0|read book"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"D|1|return book|June 6th"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"D|0|finish assignment 1|Monday"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"E|1|Attend Apple conference|Jan 10th to Jan 11th"}],"authorContributionMap":{"JanuariusJang":8}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"## Design"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"###The Task components are the basic building block of the Duke chat bot."},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"The Task component:"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"* Is an abstract class that is inherited by 3 subclasses - Todo, Deadline and Event "},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"* Has properties like description, end dates, boolean value whether the task has completed or not."},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"* Method to return the Task in a specific format."},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"![Image of TaskClassDiagram](https://github.com/JanuariusJang/ip/blob/master/docs/images/TaskClassDiagram.png?raw\u003dtrue)"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"### COMMONS component"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"The commons component are those classes used by multiple components are in the program, such as enum classes and the parser class."},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"The parser class is mainly in charge of parse user\u0027s input and convert them to a workable format to the program. The enum classes are used to strict the keywords. "},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"## Product scope"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"### Target user profile"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"* Is a developer, tester or member of the project team."},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"* prefer desktop apps over other types."},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"* can type fast."},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"* prefers typing to mouse interactions."},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"* is reasonably comfortable using CLI apps."},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"### Value proposition"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"manage defects faster than a typical mouse/GUI driven app. Allows the user to better manage the project issues."},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"## User Stories"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":" "},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"|Priority| As a … | I want to … | So that I can… |"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"|* * * |new user|add to do tasks into Duke|view my tasks|"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"|* * * |New user|add deadline tasks into Duke|view and track deadlines of tasks|"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"|* * * |New user|add event tasks into Duke|view and track event tasks with start and end dates|"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"|"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"## Non-Functional Requirements"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"* Should work on any mainstream OS as long as it has Java 11 or above installed."},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"* Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage."},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse"},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"* Should load from and save to from a text files"},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":"## Glossary"},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":"* *Mainstream OS:* Windows, Linux, Unix, OS-X."},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":55,"author":{"gitId":"JanuariusJang"},"content":"## Instructions for manual testing"},{"lineNumber":56,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":57,"author":{"gitId":"JanuariusJang"},"content":"### Launch and Shutdown"},{"lineNumber":58,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":59,"author":{"gitId":"JanuariusJang"},"content":"1. Initial launch"},{"lineNumber":60,"author":{"gitId":"JanuariusJang"},"content":"    1. Download the jar file and copy into an empty folder"},{"lineNumber":61,"author":{"gitId":"JanuariusJang"},"content":"    2. Use Command Prompt to run jar file with `java -jar` command."},{"lineNumber":62,"author":{"gitId":"JanuariusJang"},"content":"    3. type exit command to exit from the program."},{"lineNumber":63,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":64,"author":{"gitId":"JanuariusJang"},"content":"2. Re-launch the app by running `java -jar` command with Command Prompt."},{"lineNumber":65,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":66,"author":{"gitId":"JanuariusJang"},"content":"### Adding a Task"},{"lineNumber":67,"author":{"gitId":"JanuariusJang"},"content":"1. Add the To Do Task through following command:"},{"lineNumber":68,"author":{"gitId":"JanuariusJang"},"content":"    1. todo Taskname"},{"lineNumber":69,"author":{"gitId":"JanuariusJang"},"content":" "},{"lineNumber":70,"author":{"gitId":"JanuariusJang"},"content":"### Adding a Deadline"},{"lineNumber":71,"author":{"gitId":"JanuariusJang"},"content":"1. Add the Deadline Task through following command:"},{"lineNumber":72,"author":{"gitId":"JanuariusJang"},"content":"    1. deadline Taskname by Enddate"},{"lineNumber":73,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":74,"author":{"gitId":"JanuariusJang"},"content":"### Adding an Event"},{"lineNumber":75,"author":{"gitId":"JanuariusJang"},"content":"1. Add the Event Task through following command:"},{"lineNumber":76,"author":{"gitId":"JanuariusJang"},"content":"    1. event Taskname at Startdate Enddate"},{"lineNumber":77,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":78,"author":{"gitId":"JanuariusJang"},"content":"### Listing all tasks in the Duke chatbot"},{"lineNumber":79,"author":{"gitId":"JanuariusJang"},"content":"1. Enter the command"},{"lineNumber":80,"author":{"gitId":"JanuariusJang"},"content":"    1. list"},{"lineNumber":81,"author":{"gitId":"JanuariusJang"},"content":"2. All tasks in the system will be listed."},{"lineNumber":82,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":83,"author":{"gitId":"JanuariusJang"},"content":"### Delete a particular task in the system"},{"lineNumber":84,"author":{"gitId":"JanuariusJang"},"content":"1. Enter Delete command"},{"lineNumber":85,"author":{"gitId":"JanuariusJang"},"content":"    1. delete Index Number."},{"lineNumber":86,"author":{"gitId":"JanuariusJang"},"content":"2. The Task at the index number will be deleted."},{"lineNumber":87,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":88,"author":{"gitId":"JanuariusJang"},"content":"### Marking a task as done (finished)"},{"lineNumber":89,"author":{"gitId":"JanuariusJang"},"content":"1. Enter Done command"},{"lineNumber":90,"author":{"gitId":"JanuariusJang"},"content":"    1. done Index Number."},{"lineNumber":91,"author":{"gitId":"JanuariusJang"},"content":"2. The Task at the index number will be marked as done."},{"lineNumber":92,"author":{"gitId":"JanuariusJang"},"content":"3. When running the list command, tasks that are marked as done will have a tick. Tasks that are not marked as done will have a cross"},{"lineNumber":93,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":94,"author":{"gitId":"JanuariusJang"},"content":"### Update a task description"},{"lineNumber":95,"author":{"gitId":"JanuariusJang"},"content":"1. Enter the Update command"},{"lineNumber":96,"author":{"gitId":"JanuariusJang"},"content":"    1. update Index Number New Description."},{"lineNumber":97,"author":{"gitId":"JanuariusJang"},"content":"2. The task at the Index Number will be updated with a new description"},{"lineNumber":98,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":99,"author":{"gitId":"JanuariusJang"},"content":"### Find a task"},{"lineNumber":100,"author":{"gitId":"JanuariusJang"},"content":"1. Enter the Find command"},{"lineNumber":101,"author":{"gitId":"JanuariusJang"},"content":"    1. find Description "},{"lineNumber":102,"author":{"gitId":"JanuariusJang"},"content":"2. If a task fits the description, it will be returned. "}],"authorContributionMap":{"JanuariusJang":102}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"Z# Duke Chatbot User Guide"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"## Features List"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"### Add todo"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"To all a Todo Task. Todo Tasks only have a description and a status if the task has been carried out"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"### Add deadline"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"To add a Deadline Task. Deadline Tasks are similar to Todo task, but have an additional end date."},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"### Add event"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"To add an Event Task. Event Tasks are similar to Todo task, but have start and end dates."},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"### Delete"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"To delete away a Task"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"### List"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"To list all Tasks in the system, sorted by their index number."},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"### Done"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"To mark Tasks as done. "},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"### Bye"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"To exit the program."},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"### Find"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"To find tasks by the description."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"### `Add Todo` - add Todo task to the program"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to add a todo Task to the chat bot"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"`todo return library books`"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"`a Todo task will be added. To view, enter list`"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"### `Add Deadline` - add Deadline task to the program"},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to add a Deadline Task to the chat bot"},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":"`deadline finish assignment 2 by Monday`"},{"lineNumber":55,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":56,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":57,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":58,"author":{"gitId":"JanuariusJang"},"content":"`a deadline task will be added. To view, enter list`"},{"lineNumber":59,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":60,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":61,"author":{"gitId":"JanuariusJang"},"content":"### `Add Event` - add Event task to the program"},{"lineNumber":62,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":63,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to add an Event Task to the chat bot"},{"lineNumber":64,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":65,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":66,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":67,"author":{"gitId":"JanuariusJang"},"content":"`event Shareholder meeting at Monday 2pm-4pm`"},{"lineNumber":68,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":69,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":70,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":71,"author":{"gitId":"JanuariusJang"},"content":"`a Event task will be added. To view, enter list`"},{"lineNumber":72,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":73,"author":{"gitId":"JanuariusJang"},"content":"### `Delete` - Delete a Task from the program"},{"lineNumber":74,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":75,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to delete a Task from the chat bot. You will also need to include the index number"},{"lineNumber":76,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":77,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":78,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":79,"author":{"gitId":"JanuariusJang"},"content":"delete 3"},{"lineNumber":80,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":81,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":83,"author":{"gitId":"JanuariusJang"},"content":"`Task 3 will be deleted from the system`"},{"lineNumber":84,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":85,"author":{"gitId":"JanuariusJang"},"content":"### `List` - Displays all Tasks in the program"},{"lineNumber":86,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":87,"author":{"gitId":"JanuariusJang"},"content":"This is used if you wanted to see all Tasks from the chat bot."},{"lineNumber":88,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":89,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":91,"author":{"gitId":"JanuariusJang"},"content":"list"},{"lineNumber":92,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":93,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":95,"author":{"gitId":"JanuariusJang"},"content":"`All Tasks will be listed`"},{"lineNumber":96,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":97,"author":{"gitId":"JanuariusJang"},"content":"### `Done` - Marks a particular task as completed."},{"lineNumber":98,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":99,"author":{"gitId":"JanuariusJang"},"content":"This is used if the task has been completed and you needed to mark it as such. You will need to input the index number of the task"},{"lineNumber":100,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":101,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":102,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":103,"author":{"gitId":"JanuariusJang"},"content":"done 3"},{"lineNumber":104,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":105,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":107,"author":{"gitId":"JanuariusJang"},"content":"`Task 3 will be marked as completed. To see full list, enter list. Tick denotes Task has been completed. Cross denotes not completed`"},{"lineNumber":108,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":109,"author":{"gitId":"JanuariusJang"},"content":"### `Bye` - exit the program"},{"lineNumber":110,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":111,"author":{"gitId":"JanuariusJang"},"content":"To be used to exit the program"},{"lineNumber":112,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":113,"author":{"gitId":"JanuariusJang"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":115,"author":{"gitId":"JanuariusJang"},"content":"bye"},{"lineNumber":116,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":117,"author":{"gitId":"JanuariusJang"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":119,"author":{"gitId":"JanuariusJang"},"content":"`Program will end`"},{"lineNumber":120,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":121,"author":{"gitId":"JanuariusJang"},"content":"### `Find` - search for task descriptions that matches the keyword"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"JanuariusJang"},"content":"To be used to find a task that matches your keyword. you will need to enter the keyword."},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"JanuariusJang"},"content":"find book"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"JanuariusJang"},"content":"`Tasks that contain the word book will be displayed. For example: Todo Return book`"}],"authorContributionMap":{"JanuariusJang":119,"-":12}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"Duke Chatbot is an application to key in your Tasks (To do list, Deadlines, Event reminders). Interaction with the app is via a command-line interface (CLI) ."},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"2. Download the latest Duke.jar."},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke Chat bot."},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"4. Open the program which should appear in the command prompt with java -jar [Directory of the Duke.jar file]."},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"## Features "},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"|Action| Command Summary|"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"|--------|----------|"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"|todo | To create a new ToDo Task. Todo tasks do not have an end date. |"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"|deadline  | To create a new Deadline Task. Deadline tasks have an end date |"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"|event | To create a new Event Task. Event tasks have a start and end date |"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"|delete | To delete a task (To do, deadline, event) |"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"|list |Listing all task in the application|"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"|done |To mark Tasks when they are completed.|"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"|find |To find tasks in the application|"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"|update |To update the task descriptions|"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"|Load  |Load issues from text files when program starts, if task.txt exists|"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"|save|Save issues to task.txt immediately|"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"### Command Summary"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":" "},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"|Action|Format, Examples|"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"|--------|----------|"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"|todo|todo Taskname \u003cbr\u003eE.g. todo complete math exercises |"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"|deadline| deadline Taskname by end date \u003cbr\u003eE.g. deadline complete Assignment by 10 October |"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"|event|event Taskname at Start-date End-date \u003cbr\u003eE.g. event Attend Apple conference at 11 October 12 October |"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"|delete|delete Index Number \u003cbr\u003eE.g. delete 2|"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"|list|list \u003cbr\u003e list|"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"|done|done Index Number\u003cbr\u003e done 3|"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"|find|find Taskname\u003cbr\u003e find Return Library books|"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"|update |update Index Number Taskname\u003cbr\u003e update 2 Return money |"},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":46}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Collections;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"public class DialogBox extends HBox {"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    private Label dialog;"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    private ImageView displayPicture;"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"            fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"        dialog.setText(text);"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        displayPicture.setImage(img);"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"    private void flip() {"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"        Collections.reverse(tmp);"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"        return new DialogBox(text, img);"},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":"        db.flip();"},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":"        return db;"},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":54}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"import com.example.duke.Duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"public class Main extends Application {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    private Duke duke \u003d new Duke(\"/Users/januariusjang/Downloads/iP/data/tasks.txt\");"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    public void start(Stage stage) {"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"            stage.setScene(scene);"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"            stage.show();"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":28}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"import com.example.duke.Duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"    private Duke duke;"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/person.png\"));"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Robot.jpg\"));"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    public void initialize() {"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"        duke \u003d d;"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"    private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"        );"},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"        userInput.clear();"},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":50}},{"path":"src/main/java/com/example/duke/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String deadline;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public AddDeadlineCommand(String description, String byDate) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        deadline \u003d byDate;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Deadline myDeadline \u003d new Deadline(taskDescription, deadline);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        myTask.add(myDeadline);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        //ui.showMessageToUser(\"Deadline has been added successfully\");"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        return \"new deadline task added successfully:\" + taskDescription;"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":18}},{"path":"src/main/java/com/example/duke/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String deadline;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public AddEventCommand(String description, String byDate) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        deadline \u003d byDate;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui myUi, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Event myEvent \u003d new Event(taskDescription, deadline);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        myTask.add(myEvent);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        //myUi.showMessageToUser(\"Event has been added successfully\");"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"Event has been added successfully\");"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        return \"new event task added successfully:\" + taskDescription;"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":19}},{"path":"src/main/java/com/example/duke/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"        Todo myTodo \u003d new Todo(taskDescription);"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTask.add(myTodo);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        //System.out.println(\"new todo added, \" + taskDescription);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Todo has been added successfully\");"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        return \"new todo task added successfully:\" + taskDescription;"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":17}},{"path":"src/main/java/com/example/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String taskDescription;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public Command() {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public Command(String description) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        taskDescription \u003d description;"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        //default case where the command is not understood."},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\"+"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"                \"todo: E.g: todo complete workout \\n\"+"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"                \"deadline: E.g: deadline Finish Assignment 1 by January 25th\\n\"+"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"                \"event: E.g: event Attend Apple Conference at Jan 10th to Jan 11th\\n\"+"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"                \"delete: E.g: delete 2\\n\"+"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"                \"list: E.g: list  \\n\"+"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"                \"done: E.g: done 2 \\n\"+"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"                \"find: E.g: find Return Library books \\n\"+"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"                \"update: E.g: update 2 Return money \\n\";"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":32}},{"path":"src/main/java/com/example/duke/CreateTaskFromFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":" * Creates the Task from text file."},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":" * @return An Arraylist of Tasks created from text files."},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":" */"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"public class CreateTaskFromFile {"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    public static ArrayList\u003cTask\u003e getTasksFromFile(String filepath) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"            List\u003cString\u003e lines \u003d getLines(filepath);"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"            for (String line : lines) {"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"                if (line.trim().isEmpty()) { //ignore empty lines"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"                    continue;"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"                loadedTasks.add(createTask(line)); //convert the line to a task and add to the list"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"            printError(\"Problem encountered while loading data: \" + e.getMessage());"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"            throw new DukeException(\"File path incorrect\");"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"        return loadedTasks;"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    private static List\u003cString\u003e getLines(String data) throws FileNotFoundException {"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"        File f \u003d new File(data);"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"        List\u003cString\u003e myStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        while (s.hasNext()) {"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"            myStrings.add(s.nextLine());"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"        return myStrings;"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"     * Method that creates task."},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"     * @param myTask the Task that is in the text file that gets decoded and created as object."},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"     * @return the Task object."},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"    private static Task createTask(String myTask) {"},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"        String taskType \u003d myTask.split(\"\\\\|\")[0].trim();"},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":"        String doneOrNot \u003d myTask.split(\"\\\\|\")[1].trim();"},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"        String taskDescription \u003d myTask.split(\"\\\\|\")[2].trim();"},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":"        //System.out.println(taskType);"},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":"        if (taskType.contains(\"T\")) {"},{"lineNumber":55,"author":{"gitId":"JanuariusJang"},"content":"            boolean done \u003d false;"},{"lineNumber":56,"author":{"gitId":"JanuariusJang"},"content":"            if (Integer.parseInt(doneOrNot) \u003d\u003d 1) {"},{"lineNumber":57,"author":{"gitId":"JanuariusJang"},"content":"                done \u003d true;"},{"lineNumber":58,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":60,"author":{"gitId":"JanuariusJang"},"content":"            // System.out.println(doneOrNot);"},{"lineNumber":61,"author":{"gitId":"JanuariusJang"},"content":"            return new Todo(taskDescription, done);"},{"lineNumber":62,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":63,"author":{"gitId":"JanuariusJang"},"content":"        } else if (taskType.contains(\"D\")) {"},{"lineNumber":64,"author":{"gitId":"JanuariusJang"},"content":"            String Deadline \u003d myTask.split(\"\\\\|\")[3].trim();"},{"lineNumber":65,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":66,"author":{"gitId":"JanuariusJang"},"content":"            boolean done \u003d false;"},{"lineNumber":67,"author":{"gitId":"JanuariusJang"},"content":"            if (Integer.parseInt(doneOrNot) \u003d\u003d 1) {"},{"lineNumber":68,"author":{"gitId":"JanuariusJang"},"content":"                done \u003d true;"},{"lineNumber":69,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"JanuariusJang"},"content":"            return new Deadline(taskDescription, Deadline, done);"},{"lineNumber":71,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":72,"author":{"gitId":"JanuariusJang"},"content":"        } else if (taskType.contains(\"E\")) {"},{"lineNumber":73,"author":{"gitId":"JanuariusJang"},"content":"            String Duration \u003d myTask.split(\"\\\\|\")[3].trim();"},{"lineNumber":74,"author":{"gitId":"JanuariusJang"},"content":"            boolean done \u003d false;"},{"lineNumber":75,"author":{"gitId":"JanuariusJang"},"content":"            if (Integer.parseInt(doneOrNot) \u003d\u003d 1) {"},{"lineNumber":76,"author":{"gitId":"JanuariusJang"},"content":"                done \u003d true;"},{"lineNumber":77,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"JanuariusJang"},"content":"            return new Event(taskDescription, Duration, done);"},{"lineNumber":79,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":80,"author":{"gitId":"JanuariusJang"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"JanuariusJang"},"content":"            return null;"},{"lineNumber":82,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":85,"author":{"gitId":"JanuariusJang"},"content":"    private static void printError(String errorMsg) {"},{"lineNumber":86,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(errorMsg + \" error! please try again\");"},{"lineNumber":87,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":89,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":90,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":90}},{"path":"src/main/java/com/example/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public Deadline(String description, String by, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"     * Return string in format to be displayed on screen."},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"     * @return for onscreen display"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description + \" (by: \" + by + \")\";"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"     * Return string in format to be displayed on screen."},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"     * @return for writing to file"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    public String toWriteFileString() {"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"        return \"D\" + \"|\" + super.getStatusIconForFile() + \"|\" + super.description + \"|\" + by;"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":33}},{"path":"src/main/java/com/example/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String index;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public DeleteCommand(String index) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        this.index \u003d index;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTask.remove(Integer.parseInt(index) - 1);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        //ui.showMessageToUser(\"Task successfully deleted\");"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"Task successfully deleted\");"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        return \"Task successfully deleted\";"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":17}},{"path":"src/main/java/com/example/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class DoneCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String index;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public DoneCommand(String index) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        this.index \u003d index;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        myTask.markAsDone(Integer.parseInt(index) - 1);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        //ui.showMessageToUser(\"Marked as done successfully\");"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        return \"Marked as done successfully\";"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":16}},{"path":"src/main/java/com/example/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    private Scene scene;"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    public Duke(){"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"    public Duke(String filePath) {"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        } catch (DukeException e) {"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"            ui.showLoadingError();"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"        //getResponse(\"hello, I\u0027m Duke\");"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"    public void run() {"},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"        ui.printWelcome();"},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"        boolean isExit \u003d false;"},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"        while (!isExit) {"},{"lineNumber":48,"author":{"gitId":"JanuariusJang"},"content":"            String fullCommand \u003d ui.readCommand();"},{"lineNumber":49,"author":{"gitId":"JanuariusJang"},"content":"            Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":50,"author":{"gitId":"JanuariusJang"},"content":"            c.execute(tasks, ui, storage);"},{"lineNumber":51,"author":{"gitId":"JanuariusJang"},"content":"            isExit \u003d c.isExit();"},{"lineNumber":52,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":55,"author":{"gitId":"JanuariusJang"},"content":"    public String getResponse(String input) {"},{"lineNumber":56,"author":{"gitId":"JanuariusJang"},"content":"        //if (input.equals(\"Start\"))"},{"lineNumber":57,"author":{"gitId":"JanuariusJang"},"content":"            //return \"hello, Im duke how can I help\";"},{"lineNumber":58,"author":{"gitId":"JanuariusJang"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":59,"author":{"gitId":"JanuariusJang"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":60,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":62,"author":{"gitId":"JanuariusJang"},"content":"    /*public static void main(String[] args) {"},{"lineNumber":63,"author":{"gitId":"JanuariusJang"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":64,"author":{"gitId":"JanuariusJang"},"content":"        //new Duke(\"/Users/januariusjang/Downloads/iP/data/tasks.txt\").run();"},{"lineNumber":65,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":66,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":67,"author":{"gitId":"JanuariusJang"},"content":"    /*@Override"},{"lineNumber":68,"author":{"gitId":"JanuariusJang"},"content":"    public void start (Stage stage){"},{"lineNumber":69,"author":{"gitId":"JanuariusJang"},"content":"        //Step 1. Setting up required components"},{"lineNumber":70,"author":{"gitId":"JanuariusJang"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":71,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":72,"author":{"gitId":"JanuariusJang"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":73,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":74,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":75,"author":{"gitId":"JanuariusJang"},"content":"        userInput \u003d new TextField();"},{"lineNumber":76,"author":{"gitId":"JanuariusJang"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":77,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":78,"author":{"gitId":"JanuariusJang"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":79,"author":{"gitId":"JanuariusJang"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":80,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":81,"author":{"gitId":"JanuariusJang"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":82,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":83,"author":{"gitId":"JanuariusJang"},"content":"        stage.setScene(scene);"},{"lineNumber":84,"author":{"gitId":"JanuariusJang"},"content":"        stage.show();"},{"lineNumber":85,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":86,"author":{"gitId":"JanuariusJang"},"content":"        //Add functionality to handle user input"},{"lineNumber":87,"author":{"gitId":"JanuariusJang"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":88,"author":{"gitId":"JanuariusJang"},"content":"            handleUserInput();"},{"lineNumber":89,"author":{"gitId":"JanuariusJang"},"content":"        });"},{"lineNumber":90,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":91,"author":{"gitId":"JanuariusJang"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":92,"author":{"gitId":"JanuariusJang"},"content":"            handleUserInput();"},{"lineNumber":93,"author":{"gitId":"JanuariusJang"},"content":"        });"},{"lineNumber":94,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":95,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":96,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":97,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":98,"author":{"gitId":"JanuariusJang"},"content":"        //Formatting the window to look as expected"},{"lineNumber":99,"author":{"gitId":"JanuariusJang"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":100,"author":{"gitId":"JanuariusJang"},"content":"        stage.setResizable(false);"},{"lineNumber":101,"author":{"gitId":"JanuariusJang"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":102,"author":{"gitId":"JanuariusJang"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":103,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":104,"author":{"gitId":"JanuariusJang"},"content":"        mainLayout.setPrefSize(400.0,600.0);"},{"lineNumber":105,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":106,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.setPrefSize(385,535);"},{"lineNumber":107,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":108,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":109,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":110,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":111,"author":{"gitId":"JanuariusJang"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":112,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":113,"author":{"gitId":"JanuariusJang"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":114,"author":{"gitId":"JanuariusJang"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":115,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":116,"author":{"gitId":"JanuariusJang"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":117,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":118,"author":{"gitId":"JanuariusJang"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":119,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":120,"author":{"gitId":"JanuariusJang"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":121,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":122,"author":{"gitId":"JanuariusJang"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":123,"author":{"gitId":"JanuariusJang"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":124,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":125,"author":{"gitId":"JanuariusJang"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":126,"author":{"gitId":"JanuariusJang"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":127,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":128,"author":{"gitId":"JanuariusJang"},"content":"        dialogContainer.heightProperty().addListener(((observable) -\u003e scrollPane.setVvalue(1.0) ));"},{"lineNumber":129,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":130,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":131,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":132,"author":{"gitId":"JanuariusJang"},"content":"        // more code to be added here later"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":135,"author":{"gitId":"JanuariusJang"},"content":"    private Node getDialogLabel(String text) {"},{"lineNumber":136,"author":{"gitId":"JanuariusJang"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":137,"author":{"gitId":"JanuariusJang"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":138,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":139,"author":{"gitId":"JanuariusJang"},"content":"        return textToAdd;"},{"lineNumber":140,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":141,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":142,"author":{"gitId":"JanuariusJang"},"content":"    /*private void handleUserInput() {"},{"lineNumber":143,"author":{"gitId":"JanuariusJang"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":144,"author":{"gitId":"JanuariusJang"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":145,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":146,"author":{"gitId":"JanuariusJang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":147,"author":{"gitId":"JanuariusJang"},"content":"                DialogBox.getUserDialog(userText.toString(), user),"},{"lineNumber":148,"author":{"gitId":"JanuariusJang"},"content":"                DialogBox.getDukeDialog(dukeText.toString(), duke)"},{"lineNumber":149,"author":{"gitId":"JanuariusJang"},"content":"        );"},{"lineNumber":150,"author":{"gitId":"JanuariusJang"},"content":"        userInput.clear();"},{"lineNumber":151,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":152,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":153,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":154,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":155,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":156,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":157,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":158,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":159,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":157,"-":2}},{"path":"src/main/java/com/example/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":7}},{"path":"src/main/java/com/example/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public Event(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public Event(String description, String by, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"     * Format to be displayed on screen."},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"     * @return for onscreen display"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description + \" (at: \" + by + \")\";"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"     * format to be written to file."},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"     * @return for writing to file"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    public String toWriteFileString() {"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"        return \"E\" + \"|\" + super.getStatusIconForFile() + \"|\" + super.description + \"|\" + by;"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":33}},{"path":"src/main/java/com/example/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class ExitCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public boolean isExit() {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        return true;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":7}},{"path":"src/main/java/com/example/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String searchText;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    public FindCommand(String searchText) {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"        this.searchText \u003d searchText;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    /*public void execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        ui.showMessageToUser(\"Here are the matching tasks in your list:\");"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        for (int i \u003d 0; i \u003c myTask.size(); i++) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"            if (myTask.getDescription(i).contains(searchText)) {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"                ui.showMessageToUser(myTask.get(i).toString());"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":20}},{"path":"src/main/java/com/example/duke/GUITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"public class GUITest {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    //@Override"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    public void start(Stage stage) {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        stage.setScene(scene); // Setting the stage to show our screen"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        stage.show(); // Render the stage."},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":18}},{"path":"src/main/java/com/example/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class ListCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    String listOfTasks\u003d\"\";"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        if (myTask.size() \u003c 1) {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"                System.out.println(\"Sorry, no Tasks to list\");"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"            return \"Sorry, no Tasks to list\";"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        for (int i \u003d 0; i \u003c myTask.size(); i++) {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"            //ui.showMessageToUser(i + 1 + myTask.get(i).toString());"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"            System.out.println(i + 1 + myTask.get(i).toString());"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"            listOfTasks\u003dlistOfTasks+(i + 1 + myTask.get(i).toString()+\"\\n\");"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        return listOfTasks;"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":21}},{"path":"src/main/java/com/example/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public static Command parse(String userInput) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"        String[] arrayOfStr \u003d userInput.split(\" \", 2);"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        switch (arrayOfStr[0]) {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"            case \"todo\":"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"                return new AddTodoCommand(arrayOfStr[1]);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"            case \"deadline\":"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"                String[] arrayOfDeadlineDetails \u003d arrayOfStr[1].split(\"by \", 2);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"                return new AddDeadlineCommand(arrayOfDeadlineDetails[0], arrayOfDeadlineDetails[1]);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"            case \"event\":"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"                String[] arrayOfEventDetails \u003d arrayOfStr[1].split(\"at \", 2);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"                return new AddEventCommand(arrayOfEventDetails[0], arrayOfEventDetails[1]);"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"            case \"delete\":"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"                return new DeleteCommand(arrayOfStr[1]);"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"            case \"list\":"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"                //System.out.println(\"list command\");"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"                return new ListCommand();"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"            case \"done\":"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"                return new DoneCommand(arrayOfStr[1]);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"            case \"bye\":"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"                return new ExitCommand();"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"            case \"find\":"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"                return new FindCommand(arrayOfStr[1]);"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"            case \"update\":"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"                String[] arrayOfUpdateDetails \u003d arrayOfStr[1].split(\" \", 2);"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"                return new UpdateCommand(arrayOfUpdateDetails[0],arrayOfUpdateDetails[1]);"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"            default:"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"                return new Command();"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":43}},{"path":"src/main/java/com/example/duke/SaveTaskToFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"public class SaveTaskToFile {"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    public static void saveFile(TaskList myTasks) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        int currentCount \u003d 0;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        String myFile \u003d \"/Users/januariusjang/Downloads/iP/data/tasks.txt\";"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"            File f \u003d new File(myFile);"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"            while (s.hasNext()) {"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"                currentCount++;"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"                s.nextLine();"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"            PrintWriter writer \u003d new PrintWriter(myFile);"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"            writer.print(\"\");"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"            writer.close();"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"            //for (int i \u003d currentCount; i \u003c myTasks.size(); i++) {"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"            for (int i \u003d 0; i \u003c myTasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"                //System.out.println(myTasks.get(i).asSaveString());"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"                writeToFile(myFile, myTasks.get(i).toWriteFileString());"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"        fw.write(textToAdd);"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"        fw.write(System.lineSeparator());"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"        fw.close();"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":45}},{"path":"src/main/java/com/example/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"public class Storage {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    private String filePath;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public Storage(String filePath) {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        return CreateTaskFromFile.getTasksFromFile(filePath);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    public void saveFile(TaskList myTask) {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        SaveTaskToFile.saveFile(myTask);"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":23}},{"path":"src/main/java/com/example/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    public String getStatusIconForFile() {"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        this.isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    /*public String toString()"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"    {"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    public abstract String toString();"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    public abstract String toWriteFileString();"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":40}},{"path":"src/main/java/com/example/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    private ArrayList\u003cTask\u003e myTasks;"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"        myTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksFromFile) {"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        myTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.addAll(tasksFromFile);"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    public void add(Task myTask) {"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.add(myTask);"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"    public void remove(int index) {"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.remove(index);"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    public int size() {"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        return myTasks.size();"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":"    public void markAsDone(int index) {"},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.get(index).markAsDone();"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":"    public String getDescription(int index) {"},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"        return myTasks.get(index).description;"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":"    public Task get(int index) {"},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"        return myTasks.get(index);"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":"    public void editItem (int index, String newDescription) {"},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"        Task tempTask \u003d myTasks.get(index);"},{"lineNumber":44,"author":{"gitId":"JanuariusJang"},"content":"        tempTask.description \u003d newDescription;"},{"lineNumber":45,"author":{"gitId":"JanuariusJang"},"content":"        myTasks.set(index, tempTask);"},{"lineNumber":46,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":47}},{"path":"src/main/java/com/example/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        super(description, isDone);"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"     * Format for onscreen format."},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"     * @return for onscreen display"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description;"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"     * Format to be written to file."},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"     * @return for writing to file"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":"    public String toWriteFileString() {"},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"        return \"T\" + \"|\" + super.getStatusIconForFile() + \"|\" + super.description;"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":29}},{"path":"src/main/java/com/example/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"    private Scanner in;"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"        in \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"    public void showToUser(String myMessage) {"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(myMessage);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    public String printWelcome() {"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        //System.out.println(\"Hello, I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        return (\"Hello, I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"    public void printError(String errorMessage) {"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"There seems to be an error.\" + errorMessage);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"    public String readCommand() {"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":"        return in.nextLine();"},{"lineNumber":29,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":31,"author":{"gitId":"JanuariusJang"},"content":"    public void showLoadingError() {"},{"lineNumber":32,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"There seems to be a file loading error. No tasks are preloaded\\nStarting a new list...\");"},{"lineNumber":33,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":35,"author":{"gitId":"JanuariusJang"},"content":"    /*public void showMessageToUser(String message) {"},{"lineNumber":36,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(message);"},{"lineNumber":37,"author":{"gitId":"JanuariusJang"},"content":"    }*/"},{"lineNumber":38,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":39,"author":{"gitId":"JanuariusJang"},"content":"    public String showMessageToUser(String message) {"},{"lineNumber":40,"author":{"gitId":"JanuariusJang"},"content":"        return message;"},{"lineNumber":41,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":43,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":43}},{"path":"src/main/java/com/example/duke/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"public class UpdateCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"    String index;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"    //String newDescription;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"    public UpdateCommand (String index, String newDescription){"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"        this.index\u003dindex; this.taskDescription\u003dnewDescription;"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    public String execute(TaskList myTask, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        //myTask.remove(Integer.parseInt(index) - 1);"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        myTask.editItem(Integer.parseInt(index) - 1,taskDescription);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        //ui.showMessageToUser(\"Task successfully deleted\");"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        System.out.println(\"Task successfully edited\");"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        storage.saveFile(myTask);"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        return \"Task description edited\";"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"}"}],"authorContributionMap":{"JanuariusJang":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"WORD_ELLIPSIS\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"            \u003cFont size\u003d\"10.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"JanuariusJang":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"JanuariusJang":19}},{"path":"src/test/Java/com.example.duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"package com.example.duke;"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"    public void dummyTest()"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"    {"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"        Todo myTodo\u003dnew Todo(\"todo cut hair\",true);"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"todo cut hair\",myTodo.description);"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"        assertTrue(myTodo.isDone);"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"        Deadline myDeadline\u003dnew Deadline(\"Finish Assignment 2\",\"Monday\");"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Finish Assignment 2\",myDeadline.description);"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Monday\",myDeadline.by);"},{"lineNumber":19,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(false,myDeadline.isDone);"},{"lineNumber":20,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":21,"author":{"gitId":"JanuariusJang"},"content":"        Event myEvent\u003dnew Event(\"Attend seminar\",\"Monday 2-4pm\");"},{"lineNumber":22,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Attend seminar\",myEvent.description);"},{"lineNumber":23,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(\"Attend seminar\",myEvent.description);"},{"lineNumber":24,"author":{"gitId":"JanuariusJang"},"content":"        assertEquals(false,myEvent.isDone);"},{"lineNumber":25,"author":{"gitId":"JanuariusJang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":27,"author":{"gitId":"JanuariusJang"},"content":"}"},{"lineNumber":28,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"todo buy bread"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":"deadline finish assignment by Sunday"},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"event attend seminar at Monday 2-4pm"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":"list"},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"bye"}],"authorContributionMap":{"JanuariusJang":5}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JanuariusJang"},"content":"Hello! I\u0027m Duke"},{"lineNumber":2,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":3,"author":{"gitId":"JanuariusJang"},"content":"What can I do for you?"},{"lineNumber":4,"author":{"gitId":"JanuariusJang"},"content":""},{"lineNumber":5,"author":{"gitId":"JanuariusJang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":6,"author":{"gitId":"JanuariusJang"},"content":"[T][✘]buy bread"},{"lineNumber":7,"author":{"gitId":"JanuariusJang"},"content":"Now you have 1 tasks in the list"},{"lineNumber":8,"author":{"gitId":"JanuariusJang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":9,"author":{"gitId":"JanuariusJang"},"content":"[D][✘]finish assignment  (by: Sunday)"},{"lineNumber":10,"author":{"gitId":"JanuariusJang"},"content":"Now you have 2 tasks in the list"},{"lineNumber":11,"author":{"gitId":"JanuariusJang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":12,"author":{"gitId":"JanuariusJang"},"content":"[E][✘]attend seminar  (by: Monday 2-4pm)"},{"lineNumber":13,"author":{"gitId":"JanuariusJang"},"content":"Now you have 3 tasks in the list"},{"lineNumber":14,"author":{"gitId":"JanuariusJang"},"content":"1[T][✘]buy bread"},{"lineNumber":15,"author":{"gitId":"JanuariusJang"},"content":"2[D][✘]finish assignment  (by: Sunday)"},{"lineNumber":16,"author":{"gitId":"JanuariusJang"},"content":"3[E][✘]attend seminar  (by: Monday 2-4pm)"},{"lineNumber":17,"author":{"gitId":"JanuariusJang"},"content":" Bye.Hope to see you again soon!"},{"lineNumber":18,"author":{"gitId":"JanuariusJang"},"content":""}],"authorContributionMap":{"JanuariusJang":18}}]
