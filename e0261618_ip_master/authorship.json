[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":" *"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":" * This is a general purpose Gradle build."},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":" * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":" */"}],"authorContributionMap":{"e0261618":6}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"T | 0 | read"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":"D | 0 | return book | May 13 2019"},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"T | 0 | return book"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"D | 0 | return book | Sep 16 2019"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"T | 0 | watch movie"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"E | 0 | project meetinf | Aug 23 2020"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"T | 0 | watch movie"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"D | 0 | do homework | Sep 28 2020"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"T | 0 | read"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"T | 0 | hahahaha"}],"authorContributionMap":{"e0261618":10}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":45,"author":{"gitId":"e0261618"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"e0261618"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"e0261618"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"e0261618"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"e0261618"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":51,"author":{"gitId":"e0261618"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":53,"author":{"gitId":"e0261618"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"e0261618"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"e0261618"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":57,"author":{"gitId":"e0261618"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":59,"author":{"gitId":"e0261618"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"e0261618"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"e0261618"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"e0261618"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"e0261618"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":65,"author":{"gitId":"e0261618"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":67,"author":{"gitId":"e0261618"},"content":":init"},{"lineNumber":68,"author":{"gitId":"e0261618"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":70,"author":{"gitId":"e0261618"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":72,"author":{"gitId":"e0261618"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"e0261618"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"e0261618"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"e0261618"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":77,"author":{"gitId":"e0261618"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"e0261618"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":80,"author":{"gitId":"e0261618"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":82,"author":{"gitId":"e0261618"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"e0261618"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":85,"author":{"gitId":"e0261618"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":87,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":88,"author":{"gitId":"e0261618"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"e0261618"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":91,"author":{"gitId":"e0261618"},"content":":end"},{"lineNumber":92,"author":{"gitId":"e0261618"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"e0261618"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":95,"author":{"gitId":"e0261618"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"e0261618"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"e0261618"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"e0261618"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"e0261618"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":101,"author":{"gitId":"e0261618"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"e0261618"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":104,"author":{"gitId":"e0261618"},"content":":omega"}],"authorContributionMap":{"e0261618":104}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":" *"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":" *"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":" * in the user manual at https://docs.gradle.org/6.5/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":" */"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"rootProject.name \u003d \u0027TIC4001 Project\u0027"}],"authorContributionMap":{"e0261618":10}},{"path":"src/main/java/Duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class ByeCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        ui.setIsExit();"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"        ui.printClosing();"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":9}},{"path":"src/main/java/Duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"abstract class Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    protected String content;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"    //constructor"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"    public Command() {}"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    public Command(String content) {"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"        this.content \u003d content;"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    //abstract methods"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    public abstract void executeCommand(String details, Ui ui, Storage storage, TaskList taskList);"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":12}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    //constructor"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    public Deadline(String description, LocalDate by){"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    public void markAsDone(){"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"    public boolean getIsDone(){"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"        return this.isDone;"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"    public String getBy(){"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"    public String toString(){"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":33}},{"path":"src/main/java/Duke/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"class DeadlineCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"            if(details.isEmpty()){"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"            else {"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"                if(!details.contains(\" /by\")){"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"                    throw new DukeException(\"No /by found in command.\");"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"                else{"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"                    String dDescription \u003d details.split(\" /by \")[0];"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"                    if(details.split(\" /by \").length\u003c2){"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"                        throw new DukeException(\"No deadline time found after keyword /by.\");"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"                    }"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"                    else{"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"                        String by \u003d details.split(\" /by \")[1];"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"                        try{"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"                            //add deadline to arraylist"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"                            Task newDeadline \u003d new Deadline(dDescription, LocalDate.parse(by));"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"                            taskList.addTask(newDeadline);"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"                            //print reply"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"                            ui.printAddMsg();"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"                            ui.indentPrintString(taskList.getTask(taskList.getSize()-1).toString());"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"                            ui.printTotalListSize(taskList.getSize());"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"                            storage.saveToFile(taskList);"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"                        catch(Exception ex){"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"                            ui.showError(\"\\tPlease enter date according to this format (yyyy-mm-dd)\");"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"        catch(DukeException ex) {"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":44,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":44}},{"path":"src/main/java/Duke/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class DefaultCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList){"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"        catch(DukeException ex) {"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":13}},{"path":"src/main/java/Duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class DeleteCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"            if(details.isEmpty()){"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"                throw new DukeException(\"The task number of delete command cannot be empty.\");"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            else{"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"                int j \u003d Integer.parseInt(details);"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"                ui.printDeleteMsg();"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"                ui.indentPrintString(taskList.deleteTask(j-1).toString());"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"                ui.printTotalListSize(taskList.getSize());"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"                storage.saveToFile(taskList);"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        } catch(DukeException ex) {"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":21}},{"path":"src/main/java/Duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class DoneCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"            if(details.isEmpty()){"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"                throw new DukeException(\"The task number of done command cannot be empty.\");"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            else{"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"                int i \u003d Integer.parseInt(details);"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"                taskList.getTask(i-1).markAsDone();"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"                ui.printDoneMsg();"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"                ui.indentPrintString(taskList.getTask(i-1).toString());"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"                storage.saveToFile(taskList);"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        } catch(DukeException ex) {"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":22}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.util.*;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"import java.io.*;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"    private Parser parser;"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"    private TaskList taskList;"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"    public Duke(String filePath) {"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"        parser \u003d new Parser();"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"        taskList \u003d storage.load();"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"    public void run() {"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"        ui.printGreetings();"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"        while(!ui.getIsExit()) {"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"            String fullCommand \u003d ui.readCommand();"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"            ui.printLine(); // show the divider line (\"_______\")"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"            parser.execute(fullCommand, ui, storage, taskList);"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"            ui.printLine();"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"    public static void main(String[] args) {"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"        String dir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":"        checkFolder(dir);"},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"        checkTextFile(dir);"},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":"        new Duke(dir+\"/data/duke.txt\").run();"},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"    public static void checkFolder(String dir){"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":"        //check if folder exists"},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":"        java.nio.file.Path checkFolderPath \u003d java.nio.file.Paths.get(dir+\"/data\");"},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"        boolean folderExists \u003d java.nio.file.Files.exists(checkFolderPath);"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"        //folder not exists, create one"},{"lineNumber":44,"author":{"gitId":"e0261618"},"content":"        if(!folderExists) {"},{"lineNumber":45,"author":{"gitId":"e0261618"},"content":"            new File(dir+\"/data\").mkdirs();"},{"lineNumber":46,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":49,"author":{"gitId":"e0261618"},"content":"    public static void checkTextFile(String dir){"},{"lineNumber":50,"author":{"gitId":"e0261618"},"content":"        //check if text file exists"},{"lineNumber":51,"author":{"gitId":"e0261618"},"content":"        java.nio.file.Path checkFilePath \u003d java.nio.file.Paths.get(dir+\"/data/duke.txt\");"},{"lineNumber":52,"author":{"gitId":"e0261618"},"content":"        boolean fileExists \u003d java.nio.file.Files.exists(checkFilePath);"},{"lineNumber":53,"author":{"gitId":"e0261618"},"content":"        //text file not exists, create one"},{"lineNumber":54,"author":{"gitId":"e0261618"},"content":"        if(!fileExists) {"},{"lineNumber":55,"author":{"gitId":"e0261618"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"e0261618"},"content":"                File dukeFile \u003d new File(dir+\"/data/duke.txt\");"},{"lineNumber":57,"author":{"gitId":"e0261618"},"content":"                dukeFile.createNewFile();"},{"lineNumber":58,"author":{"gitId":"e0261618"},"content":"            } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"e0261618"},"content":"                System.out.println(\"An error occurred while creating file.\");"},{"lineNumber":60,"author":{"gitId":"e0261618"},"content":"                e.printStackTrace();"},{"lineNumber":61,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"-":1,"e0261618":63}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        //branch out"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"        super(\"☹ OOPS!!! \" + message);"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":8}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"    protected LocalDate at;"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    public Event(String description, LocalDate at){"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"    public void markAsDone(){"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"    public boolean getIsDone(){"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"        return this.isDone;"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"    public String getAt(){"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"    public String toString(){"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getAt() + \")\";"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":32}},{"path":"src/main/java/Duke/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"class EventCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"            if(details.isEmpty()){"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"                throw new DukeException(\"The description of event cannot be empty.\");"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"            else{"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"                if(!details.contains(\" /at\")){"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"                    throw new DukeException(\"No /at found in command.\");"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"                else{"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"                    String eDescription \u003d details.split(\" /at \")[0];"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"                    if(details.split(\" /at \").length\u003c2){"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"                        throw new DukeException(\"No event time found after keyword /at.\");"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"                    }"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"                    else{"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"                        String at \u003d details.split(\" /at \")[1];"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"                        try{"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"                            //add event to arraylist"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"                            Task newEvent \u003d new Event(eDescription, LocalDate.parse(at));"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"                            taskList.addTask(newEvent);"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"                            //print reply"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"                            ui.printAddMsg();"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"                            ui.indentPrintString(taskList.getTask(taskList.getSize()-1).toString());"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"                            ui.printTotalListSize(taskList.getSize());"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"                            storage.saveToFile(taskList);"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"                        catch(Exception ex){"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"                            ui.showError(\"\\tPlease enter date according to this format (yyyy-mm-dd)\");"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"        catch(DukeException ex) {"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":43}},{"path":"src/main/java/Duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList){"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"            if(details.isEmpty()){"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"                throw new DukeException(\"The keyword of a find command cannot be empty.\");"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            else{"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"                TaskList resultList \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"                //load list of tasks which matched the keyword"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"                for(int i\u003d0; i\u003ctaskList.getSize(); i++){"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"                    if(taskList.getTask(i).getDescription().contains(details)){"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"                        resultList.addTask(taskList.getTask(i));"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"                    }"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"                //print the list of tasks"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"                if(resultList.getSize() \u003d\u003d 0){"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"                    ui.printNoMatchesMsg();"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"                else{"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"                    ui.printMatchesMsg();"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"                    for(int i\u003d0; i\u003cresultList.getSize(); i++){"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"                        ui.indentPrintString((i+1) + \". \" + resultList.getTask(i).toString());"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"                    }"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"        } catch(DukeException ex) {"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":32}},{"path":"src/main/java/Duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class ListCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        if(taskList.getSize() \u003d\u003d 0){"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"            ui.printNoRecords();"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"        else{"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            ui.printList();"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"            for(int i\u003d0; i\u003ctaskList.getSize(); i++){"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"                ui.indentPrintString((i+1) + \". \" + taskList.getTask(i).toString());"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":17}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"//deals with making sense of the user command"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"class Parser {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"    public void execute(String fullCommand, Ui ui, Storage storage, TaskList taskList){"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"        String command, details;"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"        if(fullCommand.contains(\" \")){"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            command \u003d fullCommand.split(\" \",2)[0];"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"            details \u003d fullCommand.split(\" \",2)[1];"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"        else{"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"            command \u003d fullCommand;"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"            details \u003d \"\";"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        switch(command){"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"            //command: [bye]"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"            case \"bye\":"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"                new ByeCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"            //command: [list]"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"            case \"list\":"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"                new ListCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"            //command: [done] [task number]"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"            case \"done\":"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"                new DoneCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"            //command: [delete] [task number]"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"            case \"delete\":"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":"                new DeleteCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":"            //command: [todo] [description]"},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":"            case \"todo\":"},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"                new TodoCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"            //command: [deadline] [description] [/by] [time]"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"            case \"deadline\":"},{"lineNumber":44,"author":{"gitId":"e0261618"},"content":"                new DeadlineCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":45,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":47,"author":{"gitId":"e0261618"},"content":"            //command: [event] [description] [/at] [time]"},{"lineNumber":48,"author":{"gitId":"e0261618"},"content":"            case \"event\":"},{"lineNumber":49,"author":{"gitId":"e0261618"},"content":"                new EventCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":50,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":52,"author":{"gitId":"e0261618"},"content":"            //command: [find] [keyword]"},{"lineNumber":53,"author":{"gitId":"e0261618"},"content":"            case \"find\":"},{"lineNumber":54,"author":{"gitId":"e0261618"},"content":"                new FindCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":55,"author":{"gitId":"e0261618"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":57,"author":{"gitId":"e0261618"},"content":"            //all other inputs"},{"lineNumber":58,"author":{"gitId":"e0261618"},"content":"            default:"},{"lineNumber":59,"author":{"gitId":"e0261618"},"content":"                new DefaultCommand().executeCommand(details, ui, storage, taskList);"},{"lineNumber":60,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":62}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"//deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"class Storage {"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    private String filePath;"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"    private TaskList taskList;"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"    public Storage(String filePath) {"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    public TaskList load(){"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"        File dukeFile \u003d new File(this.filePath);"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"            Scanner myReader \u003d new Scanner(dukeFile);"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"                String instructions \u003d myReader.nextLine();"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"                String type \u003d instructions.split(\" \\\\| \",4)[0];"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"                String done \u003d instructions.split(\" \\\\| \",4)[1];"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"                String description \u003d instructions.split(\" \\\\| \",4)[2];"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"                switch(type){"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"                    case \"T\":"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"                        Task newTodo \u003d new Todo(description);"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"                        if(done.equals(\"1\")){"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"                            newTodo.markAsDone();"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"                        this.taskList.getTasks().add(newTodo);"},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":"                        break;"},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":"                    case \"D\":"},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"                        String dTime \u003d instructions.split(\" \\\\| \",4)[3];"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":"                        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().appendPattern(\"MMM d yyyy\").toFormatter();"},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":"                        Task newDeadline \u003d new Deadline(description, LocalDate.parse(dTime,df));"},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"                        if(done.equals(\"1\")){"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"                            newDeadline.markAsDone();"},{"lineNumber":44,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":45,"author":{"gitId":"e0261618"},"content":"                        this.taskList.getTasks().add(newDeadline);"},{"lineNumber":46,"author":{"gitId":"e0261618"},"content":"                        break;"},{"lineNumber":47,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":48,"author":{"gitId":"e0261618"},"content":"                    case \"E\":"},{"lineNumber":49,"author":{"gitId":"e0261618"},"content":"                        String eTime \u003d instructions.split(\" \\\\| \",4)[3];"},{"lineNumber":50,"author":{"gitId":"e0261618"},"content":"                        DateTimeFormatter ef \u003d new DateTimeFormatterBuilder().appendPattern(\"MMM d yyyy\").toFormatter();"},{"lineNumber":51,"author":{"gitId":"e0261618"},"content":"                        Task newEvent \u003d new Event(description, LocalDate.parse(eTime,ef));"},{"lineNumber":52,"author":{"gitId":"e0261618"},"content":"                        if(done.equals(\"1\")){"},{"lineNumber":53,"author":{"gitId":"e0261618"},"content":"                            newEvent.markAsDone();"},{"lineNumber":54,"author":{"gitId":"e0261618"},"content":"                        }"},{"lineNumber":55,"author":{"gitId":"e0261618"},"content":"                        this.taskList.getTasks().add(newEvent);"},{"lineNumber":56,"author":{"gitId":"e0261618"},"content":"                        break;"},{"lineNumber":57,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"e0261618"},"content":"            myReader.close();"},{"lineNumber":60,"author":{"gitId":"e0261618"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":61,"author":{"gitId":"e0261618"},"content":"            System.out.println(\"An error occurred while loading text file.\");"},{"lineNumber":62,"author":{"gitId":"e0261618"},"content":"            e.printStackTrace();"},{"lineNumber":63,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":65,"author":{"gitId":"e0261618"},"content":"        return this.taskList;"},{"lineNumber":66,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":68,"author":{"gitId":"e0261618"},"content":"    public void saveToFile(TaskList taskList){"},{"lineNumber":69,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"e0261618"},"content":"            BufferedWriter myWriter \u003d new BufferedWriter(new FileWriter(this.filePath));"},{"lineNumber":71,"author":{"gitId":"e0261618"},"content":"            for(int i\u003d0; i\u003ctaskList.getSize(); i++){"},{"lineNumber":72,"author":{"gitId":"e0261618"},"content":"                myWriter.write(writeToFile(taskList.getTask(i)));"},{"lineNumber":73,"author":{"gitId":"e0261618"},"content":"                if(i !\u003d taskList.getSize()-1){"},{"lineNumber":74,"author":{"gitId":"e0261618"},"content":"                    myWriter.newLine();"},{"lineNumber":75,"author":{"gitId":"e0261618"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"e0261618"},"content":"            myWriter.close();"},{"lineNumber":78,"author":{"gitId":"e0261618"},"content":"        } catch (IOException e) {"},{"lineNumber":79,"author":{"gitId":"e0261618"},"content":"            System.out.println(\"An error occurred in saving file.\");"},{"lineNumber":80,"author":{"gitId":"e0261618"},"content":"            e.printStackTrace();"},{"lineNumber":81,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":84,"author":{"gitId":"e0261618"},"content":"    public String writeToFile(Task t){"},{"lineNumber":85,"author":{"gitId":"e0261618"},"content":"        int done \u003d 0; //default false"},{"lineNumber":86,"author":{"gitId":"e0261618"},"content":"        if(t.getIsDone()){"},{"lineNumber":87,"author":{"gitId":"e0261618"},"content":"            done \u003d 1;"},{"lineNumber":88,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":90,"author":{"gitId":"e0261618"},"content":"        //[command] [done] [description] [time]"},{"lineNumber":91,"author":{"gitId":"e0261618"},"content":"        if(t instanceof Todo){"},{"lineNumber":92,"author":{"gitId":"e0261618"},"content":"            return \"T | \" + done + \" | \" + t.getDescription();"},{"lineNumber":93,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"e0261618"},"content":"        else if(t instanceof Deadline){"},{"lineNumber":95,"author":{"gitId":"e0261618"},"content":"            return \"D | \" + done + \" | \" + t.getDescription() + \" | \" + ((Deadline)t).getBy();"},{"lineNumber":96,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"e0261618"},"content":"        else if(t instanceof Event){"},{"lineNumber":98,"author":{"gitId":"e0261618"},"content":"            return \"E | \" + done + \" | \" + t.getDescription() + \" | \" + ((Event)t).getAt();"},{"lineNumber":99,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"e0261618"},"content":"        else{"},{"lineNumber":101,"author":{"gitId":"e0261618"},"content":"            return \"\";"},{"lineNumber":102,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":105,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":105}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"abstract class Task {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"    //constructor"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    //abstract methods"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"    public abstract String getStatusIcon();"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"    public abstract void markAsDone();"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"    public abstract boolean getIsDone();"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"    public String getDescription(){"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"        return this.description;"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    public String toString(){"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"        return \"[\"+getStatusIcon()+\"]\" + \" \" + getDescription();"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":23}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"//contains the task list e.g., it has operations to add/delete tasks in the list"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"class TaskList {"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"    public TaskList(){"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"    public ArrayList\u003cTask\u003e getTasks(){"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"        return this.tasks;"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"    public Task getTask(int i){"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"        return this.tasks.get(i);"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    public void addTask(Task task){"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"        this.tasks.add(task);"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"    public Task deleteTask(int i){"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"        return this.tasks.remove(i);"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"    public int getSize(){"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"        return this.tasks.size();"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":29}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"    //constructor"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    public Todo(String description){"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"    public void markAsDone(){"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"    public boolean getIsDone(){"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"        return this.isDone;"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"    public String toString(){"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":26}},{"path":"src/main/java/Duke/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"class TodoCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"    public void executeCommand(String details, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"        try {"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"            if(details.isEmpty()){"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"            else{"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"                //add todo to arraylist"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"                Task newTodo \u003d new Todo(details);"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"                taskList.addTask(newTodo);"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"                //print reply"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"                ui.printAddMsg();"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"                ui.indentPrintString(taskList.getTask(taskList.getSize()-1).toString());"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"                ui.printTotalListSize(taskList.getSize());"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"                storage.saveToFile(taskList);"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"            }"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"        } catch(DukeException ex) {"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"            ui.showError(ex.getMessage());"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":24}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"//deals with interactions with the user"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":"class Ui {"},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"    private Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"    private boolean isExit;"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    public Ui(){"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"        this.isExit \u003d false;"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"    public void indent(){"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"        System.out.print(\"\\t\");"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"    public void printLine(){"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"        indent();"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":19,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"e0261618"},"content":"    public void printLogo(){"},{"lineNumber":21,"author":{"gitId":"e0261618"},"content":"        String logo \u003d \"\\t ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"e0261618"},"content":"                + \"\\t|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"e0261618"},"content":"                + \"\\t| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"e0261618"},"content":"                + \"\\t| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"e0261618"},"content":"                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"e0261618"},"content":"        System.out.println(logo);"},{"lineNumber":27,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"e0261618"},"content":"    public void printGreetings(){"},{"lineNumber":29,"author":{"gitId":"e0261618"},"content":"        printLine();"},{"lineNumber":30,"author":{"gitId":"e0261618"},"content":"        printLogo();"},{"lineNumber":31,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":32,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"What can I do for you?\");"},{"lineNumber":33,"author":{"gitId":"e0261618"},"content":"        printLine();"},{"lineNumber":34,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"e0261618"},"content":"    public void printClosing(){"},{"lineNumber":36,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":37,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"e0261618"},"content":"    public void printNoRecords(){"},{"lineNumber":39,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"No record added\");"},{"lineNumber":40,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"e0261618"},"content":"    public void printList(){"},{"lineNumber":42,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":43,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"e0261618"},"content":"    public void indentPrintString(String toPrint){"},{"lineNumber":45,"author":{"gitId":"e0261618"},"content":"        indent(); indent(); System.out.println(toPrint);"},{"lineNumber":46,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"e0261618"},"content":"    public void printDoneMsg(){"},{"lineNumber":48,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":49,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"e0261618"},"content":"    public void printDeleteMsg(){"},{"lineNumber":51,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":52,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"e0261618"},"content":"    public void printTotalListSize(int size){"},{"lineNumber":54,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Now you have \" + size + \" tasks in the list.\");"},{"lineNumber":55,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"e0261618"},"content":"    public void printAddMsg(){"},{"lineNumber":57,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":58,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"e0261618"},"content":"    public void printNoMatchesMsg(){"},{"lineNumber":60,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"No matching task found\");"},{"lineNumber":61,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"e0261618"},"content":"    public void printMatchesMsg(){"},{"lineNumber":63,"author":{"gitId":"e0261618"},"content":"        indent(); System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":64,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"e0261618"},"content":"    public String readCommand(){"},{"lineNumber":66,"author":{"gitId":"e0261618"},"content":"        return sc.nextLine();"},{"lineNumber":67,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"e0261618"},"content":"    public boolean getIsExit(){"},{"lineNumber":69,"author":{"gitId":"e0261618"},"content":"        return this.isExit;"},{"lineNumber":70,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"e0261618"},"content":"    public void setIsExit(){"},{"lineNumber":72,"author":{"gitId":"e0261618"},"content":"        this.isExit \u003d true;"},{"lineNumber":73,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"e0261618"},"content":"    public void showError(String error){"},{"lineNumber":75,"author":{"gitId":"e0261618"},"content":"        System.out.println(error);"},{"lineNumber":76,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"e0261618"},"content":"}"},{"lineNumber":78,"author":{"gitId":"e0261618"},"content":""}],"authorContributionMap":{"e0261618":78}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import duke.Deadline;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"public class DeadlineTest {"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"    public void Deadline() {"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"        Deadline deadline1 \u003d new Deadline(\"read book\", \"2020-09-26\");"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":"        Deadline deadline2 \u003d new Deadline(\"return book\", \"2020-10-05\");"},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"        assertEquals(\"[D][✘] read book (by: Sep 26 2020)\", deadline1.toString());"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"        assertEquals(\"[D][✘] return book (by: Oct 05 2020)\", deadline2.toString());"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":18}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"    public void dummyTest(){"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":12}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0261618"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"e0261618"},"content":"import duke.Todo;"},{"lineNumber":3,"author":{"gitId":"e0261618"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":5,"author":{"gitId":"e0261618"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":7,"author":{"gitId":"e0261618"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"e0261618"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"e0261618"},"content":"    public void ToDo() {"},{"lineNumber":10,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":11,"author":{"gitId":"e0261618"},"content":"        Todo todo1 \u003d new Todo(\"read book\");"},{"lineNumber":12,"author":{"gitId":"e0261618"},"content":"        Todo todo2 \u003d new Todo(\"return book\");"},{"lineNumber":13,"author":{"gitId":"e0261618"},"content":""},{"lineNumber":14,"author":{"gitId":"e0261618"},"content":"        assertEquals(\"[T][✘] read book\", todo1.toString());"},{"lineNumber":15,"author":{"gitId":"e0261618"},"content":"        assertEquals(\"[T][✘] return book\", todo2.toString());"},{"lineNumber":16,"author":{"gitId":"e0261618"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"e0261618"},"content":"}"}],"authorContributionMap":{"e0261618":17}}]
