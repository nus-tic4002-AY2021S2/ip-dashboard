[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"# User Guide - Duke"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"A Personal Assistant Chatbot that helps a person to keep track of various things. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"1. Open Intellij (if you are not in the welcome screen, click: `File` \u003e: `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"   1. Click: `Configure` \u003e: `Structure for New Projects` and then: `Project Settings` \u003e: `Project` \u003e: `Project SDK`"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click: `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"   1. Click: `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"   1. Click: `Open or Import`."},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"   1. Select the project directory, and click: `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"1. After the importing is complete, locate the: `src/main/java/duke/Duke.java` file, right-click it, and choose: `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":" ____        _        "},{"lineNumber":21,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____ "},{"lineNumber":22,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":23,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":24,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"Hello! I\u0027m Duke."},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"I can help you manage a list of tasks!"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"What you can tell me to do is listed below:"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"  ⬡  Create a Todo task     | todo \u003cyour task\u003e"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"  ⬢  Create a Deadline task | deadline \u003cyour task\u003e /by \u003cdd/MM/yyyy HHmm\u003e"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"  ⬡  Create an Event task   | event \u003cyour task\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"  ⬢  Complete a task        | done \u003ctask index number\u003e"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"  ⬡  Delete a task          | delete \u003ctask index number\u003e"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"  ⬢  List down all tasks    | list"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"  ⬡  Find tasks with word   | find \u003cword\u003e"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"  ⬢  Exit my program        | bye or hit Enter"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"It looks like it\u0027s your first time as I could not find any existing task file."},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"Get started by creating a task!"},{"lineNumber":43,"author":{"gitId":"-"},"content":"```"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"## Features    "},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"  - Create a Todo task    : `todo`"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"  - Create a Deadline task: `deadline`"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"  - Create an Event task  : `event`"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"  - Complete a task       : `done`"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"  - Delete a task         : `delete`"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"  - List down all tasks   : `list`"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"  - Find tasks with word  : `find`"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"  - Exit my program       : `exit`"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"  "},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":" #### Create a Todo task    : `todo`"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":" Creates a Todo task and adds it to the task list."},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":" Format: `todo \u003cyour task\u003e`"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":" - `todo feed a dodo`"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":" #### Create a Deadline task: `deadline`"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":" Creates a Deadline task and adds it to the task list."},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":" Format: `deadline \u003cyour task\u003e /by \u003cdd/MM/yyyy HHmm\u003e`"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":" - `HHmm` ranges from 0000 to 2359."},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":" - `deadline dead /by 28/09/2020 2359`"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":" #### Create an Event task  : `event`"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":" Creates an Event task and adds it to the task list."},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":" Format: `event \u003cyour task\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e`"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"  - The first `HHmm` is referred as the starting time of the event."},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"  - The second `HHmm` is referred as the ending time of the event."},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"  "},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":" - `event internal meeting /at 28/09/2020 0900 /to 1100`"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":" #### Complete a task       : `done`"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":" Completes a task and sets its status to ✓."},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":" Format: `done \u003ctask index number\u003e`"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":" - The first task starts from index number 1 and so on."},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"   "},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":" - `done 2`"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":" #### Delete a task         : `delete`"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":" Removes a task from the task list and shifts the remaining tasks accordingly."},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":" Format: `delete \u003ctask index number\u003e`"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":" - `delete 3`"},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":" #### List down all tasks   : `list`"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":" Lists down all tasks in the task list."},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":102,"author":{"gitId":"Impala36"},"content":" Format: `list`"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":104,"author":{"gitId":"Impala36"},"content":" #### Find tasks with word  : `find`"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":" Finds all tasks that matches with the search word(s)."},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":" Format: `find \u003cword\u003e`"},{"lineNumber":108,"author":{"gitId":"Impala36"},"content":" - `find` works like a filter too. You can find tasks according to their type."},{"lineNumber":109,"author":{"gitId":"Impala36"},"content":" - You can also find tasks by date, month, time and status."},{"lineNumber":110,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":111,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":112,"author":{"gitId":"Impala36"},"content":" - `find deadline`"},{"lineNumber":113,"author":{"gitId":"Impala36"},"content":" - `find meeting`"},{"lineNumber":114,"author":{"gitId":"Impala36"},"content":" - `find 28 Sep`"},{"lineNumber":115,"author":{"gitId":"Impala36"},"content":" - `find ✓`"},{"lineNumber":116,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":117,"author":{"gitId":"Impala36"},"content":" #### Exit the program       : `exit`"},{"lineNumber":118,"author":{"gitId":"Impala36"},"content":" Exits the program."},{"lineNumber":119,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":120,"author":{"gitId":"Impala36"},"content":" Format: `bye`, `exit`, `\u003chit Enter\u003e`"},{"lineNumber":121,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":122,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":123,"author":{"gitId":"Impala36"},"content":" ## Command Summary"},{"lineNumber":124,"author":{"gitId":"Impala36"},"content":" Action | Format, Examples"},{"lineNumber":125,"author":{"gitId":"Impala36"},"content":" ------ | ----------------"},{"lineNumber":126,"author":{"gitId":"Impala36"},"content":" **todo** | `todo \u003cyour task\u003e` \u003cbr\u003e e.g. `todo feed a dodo`"},{"lineNumber":127,"author":{"gitId":"Impala36"},"content":" **deadline**   | `deadline \u003cyour task\u003e /by \u003cdd/MM/yyyy HHmm\u003e` \u003cbr\u003e e.g. `deadline dead /by 28/09/2020 2359`"},{"lineNumber":128,"author":{"gitId":"Impala36"},"content":" **event**   | `event \u003cyour task\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e` \u003cbr\u003e e.g. `event internal meeting /at 28/09/2020 0900 /to 1100`"},{"lineNumber":129,"author":{"gitId":"Impala36"},"content":" **done**   | `done \u003ctask index number\u003e` \u003cbr\u003e e.g. `done 2`"},{"lineNumber":130,"author":{"gitId":"Impala36"},"content":" **delete**   | `delete \u003ctask index number\u003e` \u003cbr\u003e e.g. `delete 3`"},{"lineNumber":131,"author":{"gitId":"Impala36"},"content":" **list**   | `list`"},{"lineNumber":132,"author":{"gitId":"Impala36"},"content":" **find**   | `find \u003cword\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `find deadline` \u003cbr\u003e `find meeting` \u003cbr\u003e `find 28 Sep` \u003cbr\u003e `find ✓`"},{"lineNumber":133,"author":{"gitId":"Impala36"},"content":" **exit**   | `exit`"}],"authorContributionMap":{"Impala36":117,"-":16}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"repositories {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    mavenCentral()"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    jcenter()"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"compileJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"compileTestJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"dependencies {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    testCompile \u0027junit:junit:4.12\u0027"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    compile \u0027junit:junit:4.12\u0027"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    compile group: \u0027com.sun.mail\u0027, name: \u0027javax.mail\u0027, version: \u00271.6.2\u0027"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    testLogging {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"jar{"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"    manifest {"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        attributes("},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"                \u0027Main-Class\u0027: \u0027Launcher\u0027"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        )"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"run {"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"    enableAssertions \u003d true"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"application {"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"shadowJar {"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"    //archiveBaseName \u003d \"duke\""},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"    //archiveClassifier \u003d null"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"checkstyle {"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"run{"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"    standardInput \u003d System.in"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":77}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":":end"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":":omega"}],"authorContributionMap":{"Impala36":89}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"public class Launcher {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":11}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.Duke;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.MainWindow;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startDuke(duke);"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":32}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.Command;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" *"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * @author Wang Zhenquan"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" * @version Level-10"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":" * @since 20/08/2020"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    private final Parser parser \u003d new Parser();"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    private final TaskList tasks \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    private final Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    String getGreetingsAndTasks() {"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        System.setProperty(\"file.encoding\", \"utf-8\");"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        return ui.printDukeLogo()"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            + ui.printGreeting()"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            + database.readDatabase(tasks, ui, database);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    String getResponse(String input) {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        Command command \u003d parser.parseInput(input, ui, tasks, database);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        return command.execute();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Impala36":35,"-":2}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    public void startDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        initializeDuke();"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"            DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    public void initializeDuke() {"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        String greetings \u003d duke.getGreetingsAndTasks();"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            DialogBox.getDukeDialog(greetings, dukeImage)"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":62}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * An abstract class that is inherited by every command."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public String line;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public Ui ui;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public Database database;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    protected Command(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        this.database \u003d database;"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    protected Command(String line, TaskList tasks, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        this.line \u003d line;"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    protected Command(TaskList tasks, Ui ui) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    protected Command(Ui ui) {"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    public abstract String execute();"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":39}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * A command to create a Deadline task that has a deadline."},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"deadline\";"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    public DeadlineCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"     * Changes the format of the whole line into proper task format."},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public String reformatLine(String type, String keyword, String line) {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        return type + line;"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    public String reformatDateTime(String dateTime) throws DateTimeParseException {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(dateTime, formatter);"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"));"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    public String execute() {"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty() || !line.contains(\"/by\")) {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"It seems that you\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\n\""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                    + \"Please type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format.\");"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            String description \u003d line.split(\"/by \")[0];"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            String dateTime \u003d line.split(\"/by \")[1];"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            if (description.isEmpty() || dateTime.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"It seems that you\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\n\""},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"                    + \"Please type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format.\");"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"            line \u003d description + \"/by \" + reformatDateTime(dateTime);"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            line \u003d reformatLine(\"[Deadline] \", \"by\", line);"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"            tasks.add(new Deadline(line));"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(e.getMessage());"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It seems that you\u0027ve missed out the deadline time!\\n\""},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"                + \"Please type in something for \u003cdd/MM/yyyy HHmm\u003e after \u0027deadline \u003csomething\u003e /by\u0027.\");"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It seems that you didn\u0027t enter the time in the right format!\\n\""},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"                + \"Please type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format.\");"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":68}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" * A command to set a particular task as completed."},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public DeleteCommand(String taskDescription, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        super(taskDescription, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"It appears that you have no tasks yet, so you can\u0027t delete any!\\n\""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"                    + \"Perhaps you should start creating one?\");"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"You almost typed a proper delete command, but you missed out the number!\\n\""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"                    + \"Please type in the \u0027delete \u003ctask index number\u003e\u0027 format.\");"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            int index \u003d Integer.parseInt(line);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            String message \u003d ui.printTaskRemoved(tasks, index);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            tasks.remove(index);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"            return message;"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(e.getMessage());"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            return ui.printRed("},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"                \"I\u0027m sorry, but the list goes numerically.\\nPerhaps you could type a number for the index?\");"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It appears that you only have \" + tasks.size() + \" task(s) in your list,\\n\""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                + \"perhaps you might want to try typing an index number from 1 to \" + tasks.size() + \" instead?\");"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":46}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" * A command to set a particular task as completed."},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public DoneCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"It appears that you have no tasks yet, so you can\u0027t complete any!\\n\""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"                    + \"Perhaps you should start creating one?\");"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"You almost typed a proper done command, but you missed out the number!\\n\""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"                    + \"Please type in the \u0027done \u003ctask index number\u003e\u0027 format.\");"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            int index \u003d Integer.parseInt(line);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            tasks.get(index - 1).setDone();"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskCompleted(index, tasks);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(e.getMessage());"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"            return ui.printRed("},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"                \"I\u0027m sorry, but the list goes numerically.\\nPerhaps you could type a number for the index?\");"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It appears that you only have \" + tasks.size() + \" task(s) in your list,\\n\""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"                + \"perhaps you might want to try typing an index number from 1 to \" + tasks.size() + \" instead?\");"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":45}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * A command that is similar to a Deadline task but with a different time keyword \u0027/at\u0027 and has a time duration."},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"public class EventCommand extends DeadlineCommand {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"event\";"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    public EventCommand(String taskDescription, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        super(taskDescription, tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"     * Changes the format of the whole line into proper task format."},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public String reformatLine(String type, String keyword, String keyword2, String line) {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        line \u003d line.replace(\"/\" + keyword2, \"-\");"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        return type + line;"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    public String reformatTime(String time) throws DateTimeParseException {"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        LocalTime date \u003d LocalTime.parse(time, formatter);"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"h:ma\"));"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    public String execute() {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty() || !line.contains(\"/at\") || !line.contains(\"/to\")) {"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"It seems that you\u0027ve missed out the required keyword(s)!\\n\""},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"                    + \"Please type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\u0027 format.\");"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            String description \u003d line.split(\"/at \")[0];"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"            String startDateTime \u003d line.split(\"/at \")[1].split(\" /to \")[0];"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            String endTime \u003d line.split(\"/at \")[1].split(\" /to \")[1];"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"            if (description.isEmpty() || startDateTime.isEmpty() || endTime.isEmpty()) {"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"                return ui"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"                    .printRed(\"It seems that you\u0027ve missed out the task description or the start and end duration!\\n\""},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"                        + \"Please type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\u0027 format.\");"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"            startDateTime \u003d reformatDateTime(startDateTime);"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"            endTime \u003d reformatTime(endTime);"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"            line \u003d description + \"/at \" + startDateTime + \" /to \" + endTime;"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"            line \u003d reformatLine(\"[Event]    \", \"at\", \"to\", line);"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            tasks.add(new Event(line));"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It seems that you\u0027ve missed out the event duration!\\n\""},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"                + \"Please type in something for \u003cdd/MM/yyyy HHmm\u003e after \u0027event \u003csomething\u003e /at\u0027.\");"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It seems that you didn\u0027t enter the time in the right format!\\n\""},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"                + \"Please type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e\u0027 format.\");"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":73}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * A command to exit the program."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    public ExitCommand(Ui ui) {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"        super(ui);"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        return ui.printFarewell();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":17}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * A command to print out all tasks that matches the search word."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"find\";"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public FindCommand(String line, TaskList tasks, Ui ui) {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui);"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        String searchWord \u003d line.trim();"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"            return \"It appears that you have no tasks! Perhaps you should start creating one?\";"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        if (searchWord.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"Please type in the \u0027find \u003cword\u003e\u0027 format!\");"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        String matches \u003d \"Here are the tasks that matches \u0027\" + searchWord + \"\u0027!\\n\";"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        boolean hasMatch \u003d false;"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            if (tasks.get(i).getDescription().toLowerCase().contains(searchWord)) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"                matches \u003d matches.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + \"\\n\";"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"                hasMatch \u003d true;"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        if (!hasMatch) {"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"            matches \u003d \"It appears that are no matches for \u0027\" + searchWord + \"\u0027!\\n\""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"                + \"Perhaps you could try searching another word?\";"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        return matches;"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":40}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * A command that handles invalid commands."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    public InvalidCommand(Ui ui) {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"        super(ui);"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        return ui.printInvalidCommand();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":17}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * A command to print out all tasks in the list."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"list\";"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public ListCommand(TaskList tasks, Ui ui) {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        super(tasks, ui);"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"It appears that you have no tasks! Perhaps you should start creating one?\");"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        String total \u003d \"Here are the tasks that you currently have!\\n\";"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            total \u003d total.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + System.lineSeparator();"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        return total;"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":27}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" * A command to create a simple Todo task."},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"public class TodoCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"todo\";"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public TodoCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"                return ui.printRed(\"It seems that you missed out the task description!\\n\""},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"                    + \"Please type in the \u0027todo \u003csomething\u003e\u0027 format.\");"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            line \u003d \"[Todo]     \" + line;"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            tasks.add(new Todo(line));"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":37}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.database;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.commands.ListCommand;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import duke.task.Todo;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":" * Responsible for all interactions between the in-memory tasks and the tasks file."},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"public class Database {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    String fileName;"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    public Database(String fileName, TaskList tasks, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public void updateDatabase(TaskList tasks) throws IOException {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        FileWriter fw \u003d new FileWriter(\"./\" + fileName, false);"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            String line \u003d (i + 1) + \". \" + tasks.get(i).getDescription() + System.lineSeparator();"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            fw.write(line);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        fw.close();"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    public String readDatabase(TaskList tasks, Ui ui, Database database) {"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"            ArrayList\u003cString\u003e lines \u003d getLines(fileName);"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            tasks \u003d extractTasks(lines, tasks, ui, database);"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"            return ui.printFileExists() + new ListCommand(tasks, ui).execute();"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            return ui.printNoFileFound();"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            return ui.printRed(\"IOException encountered: \" + e.getMessage());"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"    private ArrayList\u003cString\u003e getLines(String fileName) throws FileNotFoundException {"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"        Scanner s \u003d new Scanner(new File(fileName));"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            list.add(s.nextLine());"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"        s.close();"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"        return list;"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"    public TaskList extractTasks(ArrayList\u003cString\u003e lines, TaskList tasks, Ui ui, Database database) throws IOException {"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        for (String line : lines) {"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"            FileWriter fw \u003d new FileWriter(fileName, true);"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"            String taskStatus \u003d line.split(\"]\")[0].substring(line.indexOf(\"[\") + 1);"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"            String taskType \u003d line.split(\"]\")[1].substring(line.indexOf(\"[\") - 1);"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"            String taskDescription \u003d line.split(\"]\")[2].trim();"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"            switch (taskType) {"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"            case \"Todo\":"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"                tasks.add(new Todo(\"[Todo]     \" + taskDescription));"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"            case \"Deadline\":"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"                tasks.add(new Deadline(\"[Deadline] \" + taskDescription));"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"            case \"Event\":"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"                tasks.add(new Event(\"[Event]    \" + taskDescription));"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"            default:"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"                ui.printInvalidTask();"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"            if (taskStatus.equals(\"D\")) {"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"                tasks.get(tasks.size() - 1).setDone();"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"        return tasks;"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":86}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":" * Inherits the Exception class."},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Overrides the constructor that takes a String parameter with custom error information"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * when you create a TaskManagerException object."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" * Throw a new TaskManagerException object when you detect some necessary information"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * is missing in the command."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" * Catch that exception somewhere else and print the message inside the exception object."},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"public class DukeException extends Exception {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public DukeException(String input) {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.commands.EventCommand;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.commands.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.commands.FindCommand;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.commands.InvalidCommand;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import duke.commands.ListCommand;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"public class Parser {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"     * Parses the user input into meaningful details and returns the appropriate command."},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    public Command parseInput(String line, Ui ui, TaskList tasks, Database database) {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        String commandWord \u003d line.trim().split(\" \")[0];"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        String lineWithoutCommand \u003d line.substring(line.indexOf(\" \") + 1).trim();"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        switch (commandWord) {"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        case ListCommand.word:"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            return new ListCommand(tasks, ui);"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        case FindCommand.word:"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            return new FindCommand(lineWithoutCommand, tasks, ui);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        case DoneCommand.word:"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            return new DoneCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        case DeleteCommand.word:"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"            return new DeleteCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        case TodoCommand.word:"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            return new TodoCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        case DeadlineCommand.word:"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"            return new DeadlineCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"        case EventCommand.word:"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"            return new EventCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        case \"bye\":"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        case \"exit\":"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            return new ExitCommand(ui);"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        default:"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            return new InvalidCommand(ui);"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Inherits the duke.task.Todo class to represent duke.task.Deadline tasks."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public class Deadline extends Todo {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    public Deadline(String input) {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"        String[] split \u003d input.split(\"/by\");"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":11}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Inherits the duke.task.Todo class to represent duke.task.Event tasks."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public class Event extends Todo {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    public Event(String input) {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"        String[] split \u003d input.split(\"/at\");"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":11}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":" * An abstract class that is inherited by the duke.task.Todo, duke.task.Deadline and duke.task.Event classes."},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    String task;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    Task(String input) {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"        task \u003d input;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public void setDone() {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    String getTaskStatus(Boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        return \"[\" + (isDone ? \"D\" : \"X\") + \"] \";"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        return getTaskStatus(isDone) + task;"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":25}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * Responsible for methods regarding the task list."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" * This class will use an ArrayList inside it."},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public int size() {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        return tasks.size();"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    public void add(Task task) {"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        tasks.add(task);"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    public void remove(int index) {"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        tasks.remove(index - 1);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    public Task get(int index) {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        return tasks.get(index);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":35}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Inherits the Task class to represent duke.task.Todo tasks."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    public Todo(String input) {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":10}},{"path":"src/main/java/duke/ui/Style.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":" * Defines the style of graphical content for the whole program."},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public enum Style {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    BORDERLINE(\"\\n⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢\\n\"),"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    LOGO(\" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    private final String string;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    Style(String string) {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        this.string \u003d string;"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    public String getString() {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        return string;"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.MainWindow;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * Responsible for displaying all messages and its format to the user except for error-related messages."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    private final MainWindow mw \u003d new MainWindow();"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"     * Colors an input string in red."},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public String colorRed(String input) {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        return input; //\"\\033[31m\" + input + \"\\033[0m\";"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"     * Colors an input string in green."},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    public String colorGreen(String input) {"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        return input; //\"\\033[33m\" + input + \"\\033[0m\";"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"     * Prints the input string in red."},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    public String printRed(String input) {"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        return colorRed(input);"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"    public String printDukeLogo() {"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        return Style.LOGO.getString();"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"    public String printGreeting() {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        return \"Hello! I\u0027m Duke.\\n\""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            + \"I can help you manage a list of tasks!\\n\""},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"            + \"What you can tell me to do is listed below:\\n\""},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Create a Todo task     | \" + colorGreen(\"todo \u003cyour task\u003e\\n\")"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  Create a Deadline task | \" + colorGreen(\"deadline \u003cyour task\u003e /by \u003cdd/MM/yyyy HHmm\u003e\\n\")"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Create an Event task   | \" + colorGreen(\"event \u003cyour task\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\\n\")"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  Complete a task        | \" + colorGreen(\"done \u003ctask index number\u003e\\n\")"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Delete a task          | \" + colorGreen(\"delete \u003ctask index number\u003e\\n\")"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  List down all tasks    | \" + colorGreen(\"list\\n\")"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Find tasks with word   | \" + colorGreen(\"find \u003cword\u003e\\n\")"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  Exit my program        | \" + colorGreen(\"bye or hit Enter\");"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    public String printFarewell() {"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"    public String printTaskAdded(TaskList tasks) {"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        return \"Great! You have entered a proper task as shown below:\\n\""},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"            + colorGreen(tasks.get(tasks.size() - 1).getDescription()"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"            + \"\\nWe now have \" + tasks.size() + \" task(s) in your list!\");"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"    public String printTaskRemoved(TaskList tasks, int index) {"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"        return \"Okay! We have removed the task as shown below:\\n\""},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"            + colorRed(tasks.get(index - 1).getDescription()"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"            + colorGreen(\"\\nWe now have \" + (tasks.size() - 1) + \" task(s) in your list!\"));"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"    public String printTaskCompleted(int index, TaskList tasks) {"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"        return \"Good work there! Now we have:\\n\""},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"            + colorGreen(index + \". \")"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"            + tasks.get(index - 1).getDescription() + colorGreen(\" set as completed!\");"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"    public String printInvalidCommand() {"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"        return printRed(\"It seems that you have typed something out of my unfortunately\\n\""},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"            + \"limited vocabulary. Can you try again?\");"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"    public String printInvalidTask() {"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"        return printRed(\"Task found is not a Todo, Deadline or Event task. Please verify the task.\");"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"    public String printNoFileFound() {"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"        return \"\\nIt looks like it\u0027s your first time as I could not find any existing task file.\\n\""},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"            + \"Get started by creating a task!\";"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":"    public String printFileExists() {"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":"        return \"\\nAn existing task file is found!\\n\";"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":94}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Impala36":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"724.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"788.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Impala36":19}},{"path":"src/test/java/DatabaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"public class DatabaseTest {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public void testExtractTasks() throws IOException {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        lines.add(\"1. [✘] [Todo]     something\");"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        database.extractTasks(lines, tasks, ui, database);"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        assertEquals(tasks.get(0).getDescription(), \"[X] [Todo]     something\");"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":23}},{"path":"src/test/java/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import duke.commands.EventCommand;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class EventCommandTest {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public void eventCommandTest() {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        String lineWithoutCommand \u003d \"submit /at 27/09/2020 2323 /to 2359\";"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        new EventCommand(lineWithoutCommand, tasks, ui, database).execute();"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        assertEquals(tasks.get(0).getDescription(),\"[X] [Event]    submit (at: 27 Sep 2020 11:23PM - 11:59PM)\");"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":20}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public void testParseInput() {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(null, tasks, ui);"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        Command first \u003d parser.parseInput(\"todo something\", ui, tasks, database);"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        TodoCommand second \u003d new TodoCommand(\"something\", tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        assertEquals("},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            TodoCommand.class.isAssignableFrom(first.getClass()),"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            TodoCommand.class.isAssignableFrom(second.getClass()));"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"//del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Impala36":2,"-":19}}]
