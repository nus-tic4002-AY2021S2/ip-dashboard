[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"repositories {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    mavenCentral()"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    jcenter()"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"compileJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"compileTestJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"dependencies {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    testCompile \u0027junit:junit:4.12\u0027"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    compile \u0027junit:junit:4.12\u0027"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    compile group: \u0027com.sun.mail\u0027, name: \u0027javax.mail\u0027, version: \u00271.6.2\u0027"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    testLogging {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"jar{"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"    manifest {"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        attributes("},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"                \u0027Main-Class\u0027: \u0027Launcher\u0027"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        )"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"run {"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"    enableAssertions \u003d true"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"application {"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"shadowJar {"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"    //archiveBaseName \u003d \"duke\""},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"    //archiveClassifier \u003d null"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"checkstyle {"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"}"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"run{"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"    standardInput \u003d System.in"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":77}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"A Personal Assistant Chatbot that helps a person to keep track of various things. It\u0027s named after the Java mascot _Duke_."},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"## **Design**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"### Note Sequence Diagram"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"Given below is a Sequence Diagram that shows how a note is added to a task, through the different components that processes the user input `\"note 1 Note.\"` from the `GUI`."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"![NoteSequenceDiagram](NoteSequenceDiagram.png)"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"## Product scope"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"### Target user profile"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"The target user is a student who would like to keep track of various kinds of tasks, such as a simple to do, tasks with deadlines and events with a start and end date and time."},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"### Value proposition"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"Project Duke will help the user remember his/her tasks, deadlines and events that occur according to schedule. He/she can set a task to completed when said task is done."},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"## User Stories"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"|v0.1|student|exit the program|close the application.|"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"|v0.1|student|create a task|keep track of my schedule.|"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"|v0.1|student|add an end date to my task| know the deadline.|"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"|v0.1|student|add a start and end date to my task| know the timeframe.|"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"|v0.1|student|list down all tasks| see all the tasks that I have.|"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"|v0.1|student|see the commands list | know the features that the program has.|"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"|v0.1|student|set a task as completed| know that said task is done.|"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"|v0.1|student|delete a task| remove unwanted clutter.|"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"|v0.1|student|save my tasks|keep a record for use later.|"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"|v0.2|student|find tasks by word(s)| easily see the tasks that are related to my search.|"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"|v0.3|student|add a note to a task| record small snippets of textual information.|"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"## Non-Functional Requirements"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"* Operation Environment: Project Duke works on Windows OS with Java **11**."},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"* Usability: A command line interface application that accepts textual user input."},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"* Capacity: Project Duke is able to record as many tasks as a text file can hold."},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"* Availability: As long as the jar file is available, the application can be opened."},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"* Maintainability: A updated JAR file will be released to user if there is any update to the current version of the project tracker."},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"## Glossary"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"* Mainstream OS * - Windows, Mac and Linux"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"## Instructions for manual testing"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"Run the application"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"*    1. Download the Jar file and copy into an empty folder"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"*    2. Use terminal/CMD to run jar file with `java -jar` command."},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"*    3. Click the close button to close the program. "},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"        "},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"Saving data"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"*    1. Data is saved automatically every time the database is accessed when adding, removing or completing a task."},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"*    2. Tasks that have their task type (Todo, Deadline or Event) externally edited will be detected by the program and the corrupted task will not be added into the memory. It is advisable to check the text file for the error."}],"authorContributionMap":{"Impala36":56}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"# The Duke Who Manages Tasks"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"A Personal Assistant Chatbot that helps a person to keep track of various things. It\u0027s named after the Java mascot _Duke_, with a medieval theme added to it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"Useful links:"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"* [User Guide](https://github.com/Impala36/ip/blob/master/docs/UserGuide.md)"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"* [User Guide (Website version)](https://impala36.github.io/ip/)"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"* [Developer Guide](https://github.com/Impala36/ip/blob/master/docs/DeveloperGuide.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"![GUI](Ui.png)"}],"authorContributionMap":{"Impala36":7,"-":3}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"# User Guide - The Duke Who Manages Tasks"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"A Personal Assistant Chatbot that helps a person to keep track of various things. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"1. Open Intellij (if you are not in the welcome screen, click: `File` \u003e: `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"   1. Click: `Configure` \u003e: `Structure for New Projects` and then: `Project Settings` \u003e: `Project` \u003e: `Project SDK`"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click: `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"   1. Click: `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"   1. Click: `Open or Import`."},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"   1. Select the project directory, and click: `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"1. After the importing is complete, locate the: `src/main/java/Launcher.java` file, right-click it, and choose: `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"   "},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"   ![GUI](Ui.png)"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"## Features    "},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"  - Create a Todo task    : `todo`"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"  - Create a Deadline task: `deadline`"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"  - Create an Event task  : `event`"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"  - Complete a task       : `done`"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"  - Delete a task         : `delete`"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"  - List down all tasks   : `list`"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"  - Find tasks with word  : `find`"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"  - Add a note to a task  : `note`"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"  - Exit my program       : `exit`"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"  "},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":" #### Create a Todo task    : `todo`"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":" Creates a Todo task and adds it to the task list."},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":" Format: `todo \u003ctask\u003e`"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":" - `todo feed a dodo`"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":" #### Create a Deadline task: `deadline`"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":" Creates a Deadline task and adds it to the task list."},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":" Format: `deadline \u003ctask\u003e /by \u003cdd/MM/yyyy HHmm\u003e`"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":" - `HHmm` ranges from 0000 to 2359."},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":" - `deadline dead /by 28/09/2020 2359`"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":" #### Create an Event task  : `event`"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":" Creates an Event task and adds it to the task list."},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":" Format: `event \u003ctask\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e`"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"  - The first `HHmm` is referred as the starting time of the event."},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"  - The second `HHmm` is referred as the ending time of the event."},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"  "},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":" - `event internal meeting /at 28/09/2020 0900 /to 1100`"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":" #### Complete a task       : `done`"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":" Completes a task and sets its status to D for Done."},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":" Format: `done \u003cindex\u003e`"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":" - The first task starts from index number 1 and so on."},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"   "},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":" - `done 2`"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":" #### Delete a task         : `delete`"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":" Removes a task and its note from the task list and shifts the remaining tasks accordingly."},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":" Format: `delete \u003cindex\u003e`"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":" - `delete 3`"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":" #### List down all tasks   : `list`"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":" Lists down all tasks in the task list."},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":" Format: `list`"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":" #### Find tasks with word  : `find`"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":" Finds all tasks that matches with the search word(s)."},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":" Format: `find \u003cword\u003e`"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":" - `find` works like a filter too. You can find tasks according to their type."},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":" - You can also find tasks by date, month, time and status."},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":" - `find deadline`"},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":" - `find meeting`"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":" - `find 28 Sep`"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":" - `find D`"},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":" #### Add a note to a task  : `note`"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":" Adds a note to an existing task, recording the textual information that the user inputs."},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":" Format: `note \u003cindex\u003e \u003ctext\u003e`"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":" - Adding a note to a task will replace any existing note."},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":" - Deleting a task will also delete any attached note."},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":102,"author":{"gitId":"Impala36"},"content":" Examples:"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":" - `note 1 This is a note.`"},{"lineNumber":104,"author":{"gitId":"Impala36"},"content":" - `note 2 This note exists because it can.`"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":" #### Exit the program       : `exit`"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":" Exits the program."},{"lineNumber":108,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":109,"author":{"gitId":"Impala36"},"content":" Format: `bye`, `exit`, `\u003chit Enter\u003e`"},{"lineNumber":110,"author":{"gitId":"Impala36"},"content":" "},{"lineNumber":111,"author":{"gitId":"Impala36"},"content":" ## Command Summary"},{"lineNumber":112,"author":{"gitId":"Impala36"},"content":" Action | Format, Examples"},{"lineNumber":113,"author":{"gitId":"Impala36"},"content":" ------------ | -------------"},{"lineNumber":114,"author":{"gitId":"Impala36"},"content":" **todo**|`todo \u003ctask\u003e` \u003cbr\u003e e.g. `todo feed a dodo`"},{"lineNumber":115,"author":{"gitId":"Impala36"},"content":" **deadline**|`deadline \u003ctask\u003e /by \u003cdd/MM/yyyy HHmm\u003e` \u003cbr\u003e e.g. `deadline dead /by 28/09/2020 2359`"},{"lineNumber":116,"author":{"gitId":"Impala36"},"content":" **event**|`event \u003ctask\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e` \u003cbr\u003e e.g. `event internal meeting /at 28/09/2020 0900 /to 1100`"},{"lineNumber":117,"author":{"gitId":"Impala36"},"content":" **done**|`done \u003cindex\u003e` \u003cbr\u003e e.g. `done 2`"},{"lineNumber":118,"author":{"gitId":"Impala36"},"content":" **delete**|`delete \u003cindex\u003e` \u003cbr\u003e e.g. `delete 3`"},{"lineNumber":119,"author":{"gitId":"Impala36"},"content":" **list**|`list`"},{"lineNumber":120,"author":{"gitId":"Impala36"},"content":" **find**|`find \u003cword\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `find deadline` \u003cbr\u003e `find meeting` \u003cbr\u003e `find 28 Sep` \u003cbr\u003e `find D`"},{"lineNumber":121,"author":{"gitId":"Impala36"},"content":" **note**|`note \u003cindex\u003e \u003ctext\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `note 1 This is a note.` \u003cbr\u003e `note 2 This note exists because it can.`"},{"lineNumber":122,"author":{"gitId":"Impala36"},"content":" **exit**|`exit`"}],"authorContributionMap":{"Impala36":113,"-":9}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"1. [X] [Todo]     Create a note for this task"},{"lineNumber":2,"content":"       [Note]     This note should work fine"},{"lineNumber":3,"content":""}],"authorContributionMap":{"null":2,"Impala36":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":":end"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":":omega"}],"authorContributionMap":{"Impala36":89}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"public class Launcher {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":11}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.Duke;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.MainWindow;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startDuke(duke);"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            stage.setTitle(\"The Duke Who Manages Tasks\");"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":33}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.Command;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" *"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * @author Wang Zhenquan"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" * @version Level-10"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":" * @since 20/08/2020"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    private final Parser parser \u003d new Parser();"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    private final TaskList tasks \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    private final Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    String getGreetingsAndTasks() {"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        System.setProperty(\"file.encoding\", \"utf-8\");"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        return ui.printDukeLogo()"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            + ui.printGreeting()"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            + database.readDatabase(tasks, ui, database);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    String getResponse(String input) {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        Command command \u003d parser.parseInput(input, ui, tasks, database);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        return command.execute();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Impala36":35,"-":2}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaPeasant.png\"));"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    public void startDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        initializeDuke();"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"            DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    public void initializeDuke() {"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        String greetings \u003d duke.getGreetingsAndTasks();"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            DialogBox.getDukeDialog(greetings, dukeImage)"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":62}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * An abstract class that is inherited by every command."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public String line;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public Ui ui;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public Database database;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    protected Command(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        this.database \u003d database;"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    protected Command(String line, TaskList tasks, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        this.line \u003d line;"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    protected Command(TaskList tasks, Ui ui) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    protected Command(Ui ui) {"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        this.ui \u003d ui;"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    public abstract String execute();"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":39}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * A command to create a Deadline task that has a deadline."},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"deadline\";"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    public DeadlineCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"     * Changes the format of the whole line into proper task format."},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public String reformatLine(String type, String keyword, String line) {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        return type + line;"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    public String reformatDateTime(String dateTime) throws DateTimeParseException {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(dateTime, formatter);"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"));"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    public String execute() {"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty() || !line.contains(\"/by\")) {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"                return \"You\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\r\""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            String description \u003d line.split(\"/by \")[0];"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            String dateTime \u003d line.split(\"/by \")[1];"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            if (description.isEmpty() || dateTime.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"                return \"You\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\r\""},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"            line \u003d description + \"/by \" + reformatDateTime(dateTime);"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            line \u003d reformatLine(\"[Deadline] \", \"by\", line);"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"            tasks.add(new Deadline(line));"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            return e.getMessage();"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"            return \"You\u0027ve missed out the deadline time!\\r\""},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"                + \"Please type in something for \u003cdd/MM/yyyy HHmm\u003e after \u0027deadline \u003csomething\u003e /by\u0027.\";"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"            return \"You didn\u0027t enter the time in the right format!\\r\""},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"                + \"Type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":68}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" * A command to set a particular task as completed."},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public DeleteCommand(String taskDescription, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        super(taskDescription, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"                return \"You don\u0027t have any tasks you dolt, so you can\u0027t delete any!\\r\""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"                    + \"Go create one first!\";"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"                return \"You almost typed a proper delete command, but you missed out the number!\\r\""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027delete \u003ctask index number\u003e\u0027 format, you dolt!\";"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            int index \u003d Integer.parseInt(line);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            String message \u003d ui.printTaskRemoved(tasks, index);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            tasks.remove(index);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"            return message;"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            return e.getMessage();"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            return"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"                \"Type a number for the index, you fool!\";"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"            return \"You only have \" + tasks.size() + \" task(s) in your list,\\r\""},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                + \"why can\u0027t you type an index number from 1 to \" + tasks.size() + \"?\";"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":46}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" * A command to set a particular task as completed."},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public DoneCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"                return \"You don\u0027t have any tasks you dolt, so you can\u0027t complete any!\\r\""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"                    + \"Go create one first!\";"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"                return \"You almost typed a proper done command, but you missed out the number!\\r\""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027done \u003ctask index number\u003e\u0027 format, you dolt!\";"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            int index \u003d Integer.parseInt(line);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            tasks.get(index - 1).setDone();"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskCompleted(index, tasks);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            return e.getMessage();"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"            return"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"                \"Type a number for the index, you fool!\";"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            return \"You only have \" + tasks.size() + \" task(s) in your list,\\r\""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"                + \"why can\u0027t you type an index number from 1 to \" + tasks.size() + \"?\";"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":45}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * A command that is similar to a Deadline task but with a different time keyword \u0027/at\u0027 and has a time duration."},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"public class EventCommand extends DeadlineCommand {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"event\";"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    public EventCommand(String taskDescription, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        super(taskDescription, tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"     * Changes the format of the whole line into proper task format."},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public String reformatLine(String type, String keyword, String keyword2, String line) {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        line \u003d line.replace(\"/\" + keyword2, \"-\");"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        return type + line;"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    public String reformatTime(String time) throws DateTimeParseException {"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        LocalTime date \u003d LocalTime.parse(time, formatter);"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"h:ma\"));"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    public String execute() {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty() || !line.contains(\"/at\") || !line.contains(\"/to\")) {"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                return \"You\u0027ve missed out the required keyword(s)!\\r\""},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            String description \u003d line.split(\"/at \")[0];"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"            String startDateTime \u003d line.split(\"/at \")[1].split(\" /to \")[0];"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            String endTime \u003d line.split(\"/at \")[1].split(\" /to \")[1];"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"            if (description.isEmpty() || startDateTime.isEmpty() || endTime.isEmpty()) {"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"                return \"You\u0027ve missed out the task description or the start and end duration!\\r\""},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"            startDateTime \u003d reformatDateTime(startDateTime);"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"            endTime \u003d reformatTime(endTime);"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"            line \u003d description + \"/at \" + startDateTime + \" /to \" + endTime;"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"            line \u003d reformatLine(\"[Event]    \", \"at\", \"to\", line);"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"            tasks.add(new Event(line));"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"            return e.getMessage();"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"            return \"You\u0027ve missed out the event duration!\\r\""},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"                + \"Please type in something for \u003cdd/MM/yyyy HHmm\u003e after \u0027event \u003csomething\u003e /at\u0027.\";"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"            return \"You didn\u0027t enter the time in the right format!\\r\""},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"                + \"Type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":72}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * A command to exit the program."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    public ExitCommand(Ui ui) {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"        super(ui);"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        return ui.printFarewell();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":17}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * A command to print out all tasks that matches the search word."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"find\";"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public FindCommand(String line, TaskList tasks, Ui ui) {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui);"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        String searchWord \u003d line.trim();"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"            return \"You don\u0027t have any tasks you dolt, so you can\u0027t find any!\\r\""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"                + \"Go create one first!\";"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        if (searchWord.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            return \"Type in the \u0027find \u003cword\u003e\u0027 format, you dolt!\";"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        String matches \u003d \"Here\u0027s the tasks that contains \u0027\" + searchWord + \"\u0027. Satisfied?\\r\";"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        boolean hasMatch \u003d false;"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            if (tasks.get(i).getDescription().toLowerCase().contains(searchWord)) {"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"                matches \u003d matches.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + System.lineSeparator();"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"                hasMatch \u003d true;"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        if (!hasMatch) {"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            matches \u003d \"There\u0027s no matches for \u0027\" + searchWord + \"\u0027!\\r\""},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"                + \"Go find something else!\";"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"        return matches;"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":41}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * A command that handles invalid commands."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    public InvalidCommand(Ui ui) {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"        super(ui);"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        return ui.printInvalidCommand();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":17}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * A command to print out all tasks in the list."},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"list\";"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public ListCommand(TaskList tasks, Ui ui) {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        super(tasks, ui);"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"            return \"You don\u0027t have any tasks you dolt, so there\u0027s no list!\\r\""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"                + \"Go create a task first!\";"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        String total \u003d \"Here\u0027s the list of your tasks, you peasant.\\r\\r\";"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            total \u003d total.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + \"\\r\\r\";"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"        return total;"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":28}},{"path":"src/main/java/duke/commands/NoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" * A command to add a note to an existing task."},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"public class NoteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"note\";"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public NoteCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"                return \"You don\u0027t have any tasks you dolt, so you can\u0027t add a note to anything!\\r\""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"                    + \"Go create a task first!\";"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"            String indexText \u003d line.trim().split(\" \")[0];"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            String noteText \u003d line.substring(line.indexOf(\" \") + 1).trim();"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            int index \u003d Integer.parseInt(indexText);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            if (noteText.equals(indexText)) {"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"                return \"You\u0027ve missed out the note text!\\r\""},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027note \u003cindex\u003e \u003ctext\u003e\u0027 format, you dolt!\";"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            tasks.get(index - 1).setNote(noteText);"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"            return ui.printNoteAdded(tasks, index);"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            return e.getMessage();"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            return \"Type a number for the index, you fool!\";"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            return \"You only have \" + tasks.size() + \" task(s) in your list,\\r\""},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"                + \"why can\u0027t you type an index number from 1 to \" + tasks.size() + \"?\";"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":49}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":" * A command to create a simple Todo task."},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"public class TodoCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public static final String word \u003d \"todo\";"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    public TodoCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    public String execute()  {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            if (line.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"                return \"You missed out the task description!\\r\""},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"                    + \"Type in the \u0027todo \u003csomething\u003e\u0027 format, you dolt!\";"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"            line \u003d \"[Todo]     \" + line;"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            tasks.add(new Todo(line));"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            return e.getMessage();"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":36}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.database;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.commands.ListCommand;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import duke.task.Todo;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":" * Responsible for all interactions between the in-memory tasks and the tasks file."},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"public class Database {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    String fileName;"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    public Database(String fileName, TaskList tasks, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public void updateDatabase(TaskList tasks) throws IOException {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        FileWriter fw \u003d new FileWriter(\"./\" + fileName, false);"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            String line \u003d (i + 1) + \". \" + tasks.get(i).getDescription() + \"\\r\\r\";"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            fw.write(line);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        fw.close();"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    public String readDatabase(TaskList tasks, Ui ui, Database database) {"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"            ArrayList\u003cString\u003e lines \u003d getLines(fileName);"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            return ui.printFileExists() + extractTasks(lines, tasks, ui, database)"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"                + new ListCommand(tasks, ui).execute();"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            return ui.printNoFileFound();"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            return \"IOException encountered: \" + e.getMessage();"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"    private ArrayList\u003cString\u003e getLines(String fileName) throws FileNotFoundException {"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"        Scanner s \u003d new Scanner(new File(fileName));"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            list.add(s.nextLine());"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"        s.close();"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"        return list;"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"    public String extractTasks(ArrayList\u003cString\u003e lines, TaskList tasks, Ui ui, Database database) throws IOException {"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        String message \u003d \"\";"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"                FileWriter fw \u003d new FileWriter(fileName, true);"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"                String line \u003d lines.get(i);"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"                if (line.isEmpty()) {"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"                    continue;"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"                String note \u003d line.split(\"]\")[0].split(\"\\\\[\")[1];"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"                if (note.equals(\"Note\")) {"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"                    String noteText \u003d line.split(\"]\")[1].trim();"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"                    tasks.get(tasks.size() - 1).setNote(noteText);"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"                    continue;"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"                String taskType \u003d line.split(\"]\")[1].substring(line.indexOf(\"[\") - 1);"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"                String taskDescription \u003d line.split(\"]\")[2].trim();"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"                switch (taskType) {"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"                case \"Todo\":"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"                    tasks.add(new Todo(\"[Todo]     \" + taskDescription));"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":"                case \"Deadline\":"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"                    tasks.add(new Deadline(\"[Deadline] \" + taskDescription));"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"                    break;"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"                case \"Event\":"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"                    tasks.add(new Event(\"[Event]    \" + taskDescription));"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":"                    break;"},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":"                default:"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":"                    message \u003d message.concat(ui.printInvalidTask(i, fileName));"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"                    break;"},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"                String taskStatus \u003d line.split(\"]\")[0].split(\"\\\\[\")[1];"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":"                if (taskStatus.equals(\"D\")) {"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":"                    tasks.get(tasks.size() - 1).setDone();"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"Impala36"},"content":"                message \u003d message.concat(ui.printInvalidTask(i, fileName));"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":"        return message;"},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":107}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.commands.EventCommand;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import duke.commands.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import duke.commands.FindCommand;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import duke.commands.InvalidCommand;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import duke.commands.ListCommand;"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import duke.commands.NoteCommand;"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"     * Parses the user input into meaningful details and returns the appropriate command."},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    public Command parseInput(String line, Ui ui, TaskList tasks, Database database) {"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"        String commandWord \u003d line.trim().split(\" \")[0];"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        String lineWithoutCommand \u003d line.substring(line.indexOf(\" \") + 1).trim();"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        switch (commandWord) {"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        case ListCommand.word:"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            return new ListCommand(tasks, ui);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        case FindCommand.word:"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"            return new FindCommand(lineWithoutCommand, tasks, ui);"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"        case DoneCommand.word:"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            return new DoneCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"        case DeleteCommand.word:"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"            return new DeleteCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        case TodoCommand.word:"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            return new TodoCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        case DeadlineCommand.word:"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            return new DeadlineCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        case EventCommand.word:"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            return new EventCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        case NoteCommand.word:"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            return new NoteCommand(lineWithoutCommand, tasks, ui, database);"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        case \"bye\":"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        case \"exit\":"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            return new ExitCommand(ui);"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        default:"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            return new InvalidCommand(ui);"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":51}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Inherits the duke.task.Todo class to represent duke.task.Deadline tasks."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public class Deadline extends Todo {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    public Deadline(String input) {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"        String[] split \u003d input.split(\"/by\");"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":11}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Inherits the duke.task.Todo class to represent duke.task.Event tasks."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"public class Event extends Todo {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    public Event(String input) {"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"        String[] split \u003d input.split(\"/at\");"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":12}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * An abstract class that is inherited by the duke.task.Todo, duke.task.Deadline and duke.task.Event classes."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    String task;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    private String note;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    Task(String input) {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        task \u003d input;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    public void setDone() {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        this.isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    String getDone(Boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        return \"[\" + (isDone ? \"D\" : \"X\") + \"] \";"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    String getNote() {"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        if (note \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            return \"\";"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        return \"\\r       [Note]     \" + note;"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    public void setNote(String note) {"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"        this.note \u003d note;"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    public String getDescription() {"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        return getDone(isDone) + task + getNote();"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":38}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" * Responsible for methods regarding the task list."},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" * This class will use an ArrayList inside it."},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public int size() {"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        return tasks.size();"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    public void add(Task task) {"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"        tasks.add(task);"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    public void remove(int index) {"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        tasks.remove(index - 1);"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    public Task get(int index) {"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        return tasks.get(index);"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":35}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" * Inherits the Task class to represent duke.task.Todo tasks."},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    public Todo(String input) {"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":10}},{"path":"src/main/java/duke/ui/Style.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":" * Defines the style of graphical content for the whole program."},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"public enum Style {"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"    BORDERLINE(\"\\r⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢\\r\"),"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    LOGO(\" ____        _        \\r\""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"            + \"|  _ \\\\ _   _| | _____ \\r\""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"            + \"| | | | | | | |/ / _ \\\\\\r\""},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"            + \"| |_| | |_| |   \u003c  __/\\r\""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\r\");"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    private final String string;"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    Style(String string) {"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        this.string \u003d string;"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    public String getString() {"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        return string;"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" * Responsible for displaying all messages and its format to the user except for error-related messages."},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public String printDukeLogo() {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"        return Style.LOGO.getString();"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public String printGreeting() {"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        return \"I\u0027m a Duke, so I have no idea why I\u0027m helping a yokel like you to manage your tasks...\\r\""},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"            + \"Might as well get on with it since I\u0027m stuck here.\\r\""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"            + \"Make sure you give me proper instructions like below, else it\u0027s the stocks for you!\\r\""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Create a Todo task     | todo \u003ctask\u003e\\r\""},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  Create a Deadline task | deadline \u003ctask\u003e /by \u003cdd/MM/yyyy HHmm\u003e\\r\""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Create an Event task   | event \u003ctask\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\\r\""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  Complete a task        | done \u003cindex\u003e\\r\""},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Delete a task          | delete \u003cindex\u003e\\r\""},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  List down all tasks    | list\\r\""},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Find tasks with word   | find \u003cword\u003e\\r\""},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"            + \"  ⬢  Add a note to a task   | note \u003cindex\u003e \u003ctext\u003e\\r\""},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"            + \"  ⬡  Exit my program        | bye or exit\";"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    public String printFarewell() {"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        return \"Oh, you\u0027re finally done? Good riddance!\";"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    public String printTaskAdded(TaskList tasks) {"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        return \"At least your lowly self is able to properly add a task:\\r\""},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            + tasks.size() + \". \" + tasks.get(tasks.size() - 1).getDescription()"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            + \"\\rI hope you can count well enough to know that you have \" + tasks.size() + \" task(s) in your list!\";"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    public String printTaskRemoved(TaskList tasks, int index) {"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        return \"I wish I could remove you too, along with the task that you removed:\\r\""},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"            + index + \". \" + tasks.get(index - 1).getDescription()"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            + \"\\rWith one less, you should know that there\u0027s \" + (tasks.size() - 1) + \" task(s) remaining, right?\";"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"    public String printTaskCompleted(int index, TaskList tasks) {"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        return \"Maybe you\u0027re not a pathetic yokel after all, since you managed to complete:\\r\""},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            + index + \". \" + tasks.get(index - 1).getDescription();"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"    public String printNoteAdded(TaskList tasks, int index) {"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        return \"Good heavens, you\u0027re capable enough to add a note to a task:\\r\""},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            + index + \". \" + tasks.get(index - 1).getDescription();"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    public String printInvalidCommand() {"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        return \"Did you mutter something? Speak up!\\r\""},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"            + \"You want to be sent to the stocks, don\u0027t you?\";"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"    public String printInvalidTask(int index, String fileName) {"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"        return \"\\rYou messed up your \" + fileName + \" at Line \" + (index + 1) + \"! \""},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"            + \"It\u0027s not a Todo, Deadline, Event or Note!\\r\";"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"    public String printNoFileFound() {"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"        return \"\\rLooks like it\u0027s your first time here. Get moving and create a task!\";"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"    public String printFileExists() {"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"        return \"\\r\\rI still have the tasks you created before, so get on with it!\\r\";"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Impala36":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"            prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"758.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\""},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"724.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"752.0\" prefWidth\u003d\"788.0\"/\u003e"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Impala36":19}},{"path":"src/test/java/DatabaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"public class DatabaseTest {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public void testExtractTasks() throws IOException {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        lines.add(\"1. [X] [Todo]     Something\");"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        database.extractTasks(lines, tasks, ui, database);"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        assertEquals(tasks.get(0).getDescription(), \"[X] [Todo]     Something\");"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":23}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public class DoneCommandTest {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public void doneCommandTest() {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        String lineWithoutCommand \u003d \"Task to set as completed\";"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        new TodoCommand(lineWithoutCommand, tasks, ui, database).execute();"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        String taskIndex \u003d \"1\";"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        new DoneCommand(taskIndex, tasks, ui, database).execute();"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        assertEquals(tasks.get(0).getDescription(),\"[D] [Todo]     Task to set as completed\");"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":23}},{"path":"src/test/java/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import duke.commands.EventCommand;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"public class EventCommandTest {"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    public void eventCommandTest() {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        String lineWithoutCommand \u003d \"Submit /at 27/09/2020 2323 /to 2359\";"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        new EventCommand(lineWithoutCommand, tasks, ui, database).execute();"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        assertEquals(tasks.get(0).getDescription(),\"[X] [Event]    Submit (at: 27 Sep 2020 11:23PM - 11:59PM)\");"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":20}},{"path":"src/test/java/NoteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.commands.NoteCommand;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public class NoteCommandTest {"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public void noteCommandTest() {"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(\"duke.txt\", tasks, ui);"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        String lineWithoutCommand \u003d \"Create a note for this task\";"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        new TodoCommand(lineWithoutCommand, tasks, ui, database).execute();"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"        String noteWithIndex \u003d \"1 This note should work fine\";"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        new NoteCommand(noteWithIndex, tasks, ui, database).execute();"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        assertEquals(tasks.get(0).getDescription(),\"[X] [Todo]     Create a note for this task\""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            + \"\\r       [Note]     This note should work fine\");"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":24}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"import duke.database.Database;"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    public void testParseInput() {"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"        Database database \u003d new Database(null, tasks, ui);"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        Command first \u003d parser.parseInput(\"todo something\", ui, tasks, database);"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"        TodoCommand second \u003d new TodoCommand(\"something\", tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":""},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        assertEquals("},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"            TodoCommand.class.isAssignableFrom(first.getClass()),"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            TodoCommand.class.isAssignableFrom(second.getClass()));"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"}"}],"authorContributionMap":{"Impala36":26}}]
