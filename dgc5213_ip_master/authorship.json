[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"dgc5213":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    String javaFxVersion \u003d \u002715.0.1\u0027"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    "},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"test {"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"    useJUnitPlatform()"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"    testLogging {"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        showExceptions true"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        exceptionFormat \"full\""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"        showCauses true"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"        showStackTraces true"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        showStandardStreams \u003d false"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"application {"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"shadowJar {"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"    archiveClassifier \u003d null"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"checkstyle {"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"jar {"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"    manifest {"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"run{"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"    enableAssertions \u003d true"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"    standardInput \u003d System.in"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":73}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"## **Design**"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"### Architecture"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"The rest of the App consists of four components."},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"* [**`UI`**]: The UI of the App."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"* [**`Util`**]: (Storage) Reads data from, and writes data to, the hard disk. (Tasklist) Contains multiple tasks."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"* [**`Command`**]: Handles various commands."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"* [**`Tasks`**]: Holds the tasks related records such as todo, event, deadline."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"* [**`Exceptions`**]: The exception executor."},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"* [**`Parser`**]: The parser executor."},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"## **Appendix: Requirements**"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"### Product scope"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"**Target user profile**: This app is targeted towards any user who wish to keep track of tasks."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"**Value proposition**: This app shall allow users to manage tasks to track their progress."},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"This helps them to manage their tasks and make timely adjustments to their habits when necessary."},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"| Priority | As a …​                                    | I want to …​                                | So that I can…​                                             |"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"| -------- | ---------- | ------------------------------------------------ | ---------------------------------------------------------------------- |"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user    | add a todo task record               | keep track of a particular todo task                        |"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user    | add a event task record               | keep track of a particular event task                        |"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user    | add a deadline task record             | keep track of a particular deadline task                        |"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"|`* * *`   | user    |list my tasks                         |view all my tasks|"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"|`* * *`   | user    |clear all my tasks                         |start afresh with the app|"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user    | delete a task record                      | remove a task record that I no longer need                        |"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user     | find a task record                  | look at the particular task\u0027s information                          |"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user     | sort task records by task status, task description | see task in a proper sequence                         |"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user     | mark task records as done | label tasks which have been completed                         |"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"### Non-Functional Requirements"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"1. The app should work on any mainstream OS with Java `11` or above installed."},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"2. The response time for each command should not exceed `3` seconds."},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"3. A user with average typing speed should be able to enter any one command within `12` seconds."},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"4. After using each command for at least `5` times, a user with no cognitive disability should be able to"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"   use all the app features without having to reference the user guide."},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"### Glossary"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"* *Mainstream OS* - Windows 7, Windows 10, Linux, Unix, OS-X"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"Given below are instructions to test the app manually."},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"\u003c/div\u003e"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"### Launch and shutdown"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"1. Initial launch"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"    1. Download the jar file and copy into an empty folder"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"1. Saving window preferences"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"### Deleting a task"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"1. Deleting a task while all tasks are being shown"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"    1. Prerequisites: List all tasks using the `list` command. Multiple tasks in the list."},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":"    1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":"       Expected: First task is deleted from the list. Details of the deleted task shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"    1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"       Expected: No task is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":"    1. Other incorrect delete commands to try: `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"       Expected: Similar to previous."},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":"### Finding a task"},{"lineNumber":106,"author":{"gitId":"dgc5213"},"content":"1. Finding a task based on the key information"},{"lineNumber":107,"author":{"gitId":"dgc5213"},"content":"    1. Prerequisites: There shall be some tasks in the lists so that the system can return some results."},{"lineNumber":108,"author":{"gitId":"dgc5213"},"content":"    1. Test case: `find \u003cKEYWORD\u003e`\u003cbr\u003e"},{"lineNumber":109,"author":{"gitId":"dgc5213"},"content":"      Expected: The tasks contain the specific keyword will be found and shown to the user."},{"lineNumber":110,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":111,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":112,"author":{"gitId":"dgc5213"},"content":"### Adding a task"},{"lineNumber":113,"author":{"gitId":"dgc5213"},"content":"1. Adding different kinds of tasks such as todo, deadline, event task"},{"lineNumber":114,"author":{"gitId":"dgc5213"},"content":"1. Using the command as followings:"},{"lineNumber":115,"author":{"gitId":"dgc5213"},"content":"    1. Adds a Todo task. ToDos: tasks without any date/time attached to it `e.g., visit new theme park`. \u003cbr\u003e"},{"lineNumber":116,"author":{"gitId":"dgc5213"},"content":"       Format: `todo` **TASK DESCRIPTIONS**"},{"lineNumber":117,"author":{"gitId":"dgc5213"},"content":"    1. Adds a Deadline task. Deadlines: tasks that need to be done before a specific date `e.g., submit report by 2020-10-23` \u003cbr\u003e"},{"lineNumber":118,"author":{"gitId":"dgc5213"},"content":"       Format: `deadline` **TASK DESCRIPTIONS** `/by` **SPECIFIC DATE** (FORMAT:yyyy-MM-dd)"},{"lineNumber":119,"author":{"gitId":"dgc5213"},"content":"    1. Adds an Event task. Events: tasks that start at a specific time and ends at a specific time `e.g., team project meeting at 2020-10-23 10:00`\u003cbr\u003e"},{"lineNumber":120,"author":{"gitId":"dgc5213"},"content":"       Format: `event` **TASK DESCRIPTIONS** `/at` **SPECIFIC DATE AND TIME** (FORMAT:yyyy-MM-dd\u0027T\u0027HH:mm)"}],"authorContributionMap":{"dgc5213":120}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"# Duke"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"It is an application for managing tasks. Also it has a Graphical User Interface (GUI) for user to enter command."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"![Ui](Ui.png)"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"![Ui2](./images/Ui_2.png)"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"![Ui3](./images/Ui_3.png)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"Useful links:"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"* [Screenshots](images)"}],"authorContributionMap":{"dgc5213":9,"-":4}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"This product is not meant for end-users and therefore there is no user-friendly installer. Please refer to the Setting up section below to learn how to set up the project."},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"#Starting the program"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"Using IntelliJ"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"1.\tFind the project in the Project Explorer (usually located at the left side)"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e * If the Project Explorer is not visible, press `ALT`+`1` for Windows/Linux, `CMD`+`1` for macOS to open the Project Explorer tab"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"2.\tGo to the `src` folder and locate the duke file"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"3.\tRight click the file and select Run `duke.Launcher()`"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"4.\tThe program now should run on the `Console` (usually located at the bottom side)"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"5.\tNow you can interact with the program through the `Console`"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"Using Command Line"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"1.\t\u0027Build\u0027 the project using IntelliJ"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"2.\tOpen the Terminal/Command Prompt"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"3.\tcd into the project’s `build\\libs\\Duke.jar`"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"4.\tType `java -jar Duke.jar`  then Enter to execute "},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"5.\tNow you can interact with the program through the CLI"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"## Features "},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"- Adding a Todo task: todo"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"- Adding a Deadline task: deadline"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"- Adding an Event task: event"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"- Listing task information: list"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"- Finding all tasks containing any keyword: find"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"- Deleting a task : delete"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"- Mark as Done of a task: done"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"- View details of a task : view"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"- Clearing all entries : clear"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"- Exiting the program : bye"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"- Loading the data"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"- Saving the data"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"- Sorting all tasks : sort"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"Notes about the command format:"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"- Words in **UPPER_CASE** are the parameters to be supplied by the user."},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"`E.g. DESCRIPTIONS in the command todo TASK DESCRIPTIONS`."},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"Order of parameters are fixed."},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"### Feature 1: Adding a Todo task: todo"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"Adds a Todo task. ToDos: tasks without any date/time attached to it `e.g., visit new theme park`"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"## Usage"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"Format: `todo` **TASK DESCRIPTIONS**"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"Example of usage: "},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"`todo borrow book`"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"Expected outcome:"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"`Got it. I\u0027ve added this task:`\u003cbr /\u003e"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":" \u0026nbsp; `[T][✘] borrow book`\u003cbr /\u003e"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"`Now you have 13 tasks in the list.`"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":" \u003cbr /\u003e"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":" ### Feature 2: Adding a Deadline task: deadline"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":" Adds a Deadline task. Deadlines: tasks that need to be done before a specific date `e.g., submit report by 2020-10-23`"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":" Format: `deadline` **TASK DESCRIPTIONS** `/by` **SPECIFIC DATE** (FORMAT:yyyy-MM-dd)"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":" Example of usage: "},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"`deadline return book /by 2020-12-12`"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":" `Got it. I\u0027ve added this task:`\u003cbr /\u003e"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"  \u0026nbsp;   `[D][✘] return book (by: 2020年12月12日星期六)`\u003cbr /\u003e"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":" `Now you have 15 tasks in the list.`\u003cbr /\u003e"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":" ### Feature 3: Adding an Event task: event"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":" Adds an Event task. Events: tasks that start at a specific time and ends at a specific time `e.g., team project meeting at 2020-10-23 10:00`"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":" Format: `event` **TASK DESCRIPTIONS** `/at` **SPECIFIC DATE AND TIME** (FORMAT:yyyy-MM-dd\u0027T\u0027HH:mm)"},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":"Example of usage: "},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":"`event project meeting /at 2020-12-12 10:00`"},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"Expected outcome:"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":"`Got it. I\u0027ve added this task:`\u003cbr /\u003e"},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":"  \u0026nbsp;   `[E][✘] project meeting (at: 星期六, 12月12日, 2020 10:00:00 上午)`\u003cbr /\u003e"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"`Now you have 17 tasks in the list.`\u003cbr /\u003e"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":106,"author":{"gitId":"dgc5213"},"content":" ### Feature 4: Listing task information: list"},{"lineNumber":107,"author":{"gitId":"dgc5213"},"content":" Display the text entered by the user back to the user when requested. The list contains the task details."},{"lineNumber":108,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":109,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":110,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":111,"author":{"gitId":"dgc5213"},"content":" Format: `list` "},{"lineNumber":112,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":113,"author":{"gitId":"dgc5213"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":115,"author":{"gitId":"dgc5213"},"content":"`list`"},{"lineNumber":116,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":117,"author":{"gitId":"dgc5213"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":119,"author":{"gitId":"dgc5213"},"content":"`Here are the tasks in your list:`\u003cbr /\u003e"},{"lineNumber":120,"author":{"gitId":"dgc5213"},"content":"`1.[T][✓] write a program`\u003cbr /\u003e"},{"lineNumber":121,"author":{"gitId":"dgc5213"},"content":"`2.[E][✓] visit zoo (at: 星期二, 11月10日, 2020 10:30:00 上午)`\u003cbr /\u003e"},{"lineNumber":122,"author":{"gitId":"dgc5213"},"content":"`3.[D][✓] read book (by: 2020年11月23日星期一)`\u003cbr /\u003e"},{"lineNumber":123,"author":{"gitId":"dgc5213"},"content":"`4.[T][✓] meet friends`\u003cbr /\u003e"},{"lineNumber":124,"author":{"gitId":"dgc5213"},"content":"`5.[E][✓] be happy (at: 星期六, 10月10日, 2020 11:11:00 上午)`\u003cbr /\u003e"},{"lineNumber":125,"author":{"gitId":"dgc5213"},"content":"`6.[D][✘] to submit assignment (by: 2020年10月11日星期日)`\u003cbr /\u003e"},{"lineNumber":126,"author":{"gitId":"dgc5213"},"content":"`7.[D][✓] check coding (by: 2020年9月10日星期四)`\u003cbr /\u003e"},{"lineNumber":127,"author":{"gitId":"dgc5213"},"content":"`8.[T][✘] add book to list`\u003cbr /\u003e"},{"lineNumber":128,"author":{"gitId":"dgc5213"},"content":"`9.[T][✓] checking`\u003cbr /\u003e"},{"lineNumber":129,"author":{"gitId":"dgc5213"},"content":"`10.[E][✘] class (at: 星期六, 12月12日, 2020 11:00:00 上午)`\u003cbr /\u003e"},{"lineNumber":130,"author":{"gitId":"dgc5213"},"content":"`11.[D][✓] submit assignment (by: 2020年10月12日星期一)`\u003cbr /\u003e"},{"lineNumber":131,"author":{"gitId":"dgc5213"},"content":"`12.[T][✘] add more function`\u003cbr /\u003e"},{"lineNumber":132,"author":{"gitId":"dgc5213"},"content":"`13.[T][✘] borrow book`\u003cbr /\u003e"},{"lineNumber":133,"author":{"gitId":"dgc5213"},"content":"`14.[T][✘] return book`\u003cbr /\u003e"},{"lineNumber":134,"author":{"gitId":"dgc5213"},"content":"`15.[D][✘] return book (by: 2020年12月12日星期六)`\u003cbr /\u003e"},{"lineNumber":135,"author":{"gitId":"dgc5213"},"content":"`16.[D][✘] read book (by: 2020年12月23日星期三)`\u003cbr /\u003e"},{"lineNumber":136,"author":{"gitId":"dgc5213"},"content":"`17.[E][✘] project meeting (at: 星期六, 12月12日, 2020 10:00:00 上午)`\u003cbr /\u003e"},{"lineNumber":137,"author":{"gitId":"dgc5213"},"content":"`18.[E][✘] class meeting (at: 星期三, 12月23日, 2020 09:00:00 上午)`\u003cbr /\u003e"},{"lineNumber":138,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":139,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":140,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":141,"author":{"gitId":"dgc5213"},"content":" ### Feature 5: Finding all tasks containing any keyword: find"},{"lineNumber":142,"author":{"gitId":"dgc5213"},"content":"Finds tasks which contain any of the given keywords."},{"lineNumber":143,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":144,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":145,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":146,"author":{"gitId":"dgc5213"},"content":" Format: `find` **KEYWORD** [MORE_KEYWORDS]"},{"lineNumber":147,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":148,"author":{"gitId":"dgc5213"},"content":" Example of usage: "},{"lineNumber":149,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":150,"author":{"gitId":"dgc5213"},"content":"`find book`"},{"lineNumber":151,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":152,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":153,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":154,"author":{"gitId":"dgc5213"},"content":" `Here are the matching tasks in your list:`\u003cbr /\u003e"},{"lineNumber":155,"author":{"gitId":"dgc5213"},"content":" `1.[D][✓] read book (by: 2020年11月23日星期一)`\u003cbr /\u003e"},{"lineNumber":156,"author":{"gitId":"dgc5213"},"content":" `2.[T][✘] add book to list`\u003cbr /\u003e"},{"lineNumber":157,"author":{"gitId":"dgc5213"},"content":" `3.[T][✘] borrow book`\u003cbr /\u003e"},{"lineNumber":158,"author":{"gitId":"dgc5213"},"content":" `4.[T][✘] return book`\u003cbr /\u003e"},{"lineNumber":159,"author":{"gitId":"dgc5213"},"content":" `5.[D][✘] return book (by: 2020年12月12日星期六)`\u003cbr /\u003e"},{"lineNumber":160,"author":{"gitId":"dgc5213"},"content":" `6.[D][✘] read book (by: 2020年12月23日星期三)`\u003cbr /\u003e"},{"lineNumber":161,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":162,"author":{"gitId":"dgc5213"},"content":" \u003cbr /\u003e"},{"lineNumber":163,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":164,"author":{"gitId":"dgc5213"},"content":" ### Feature 6: Deleting a task : delete"},{"lineNumber":165,"author":{"gitId":"dgc5213"},"content":"Deletes the specified task from the task list. Irreversible."},{"lineNumber":166,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":167,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":168,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":169,"author":{"gitId":"dgc5213"},"content":" Format: `delete` **INDEX**"},{"lineNumber":170,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":171,"author":{"gitId":"dgc5213"},"content":" Select the task to delete based on the specified INDEX. The index refers to the index number shown in the most recent listing."},{"lineNumber":172,"author":{"gitId":"dgc5213"},"content":"  "},{"lineNumber":173,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":174,"author":{"gitId":"dgc5213"},"content":" Example of usage: "},{"lineNumber":175,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":176,"author":{"gitId":"dgc5213"},"content":" `list `\u003cbr /\u003e"},{"lineNumber":177,"author":{"gitId":"dgc5213"},"content":" `delete 4 `\u003cbr /\u003e"},{"lineNumber":178,"author":{"gitId":"dgc5213"},"content":" Deletes the 4th task in the task list."},{"lineNumber":179,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":180,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":181,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":182,"author":{"gitId":"dgc5213"},"content":" `Noted. I\u0027ve removed this task: `\u003cbr /\u003e"},{"lineNumber":183,"author":{"gitId":"dgc5213"},"content":"   \u0026nbsp;   `[T][✘] write a song`\u003cbr /\u003e"},{"lineNumber":184,"author":{"gitId":"dgc5213"},"content":" `Now you have 3 tasks in the list.`\u003cbr /\u003e"},{"lineNumber":185,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":186,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":187,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":188,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":189,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":190,"author":{"gitId":"dgc5213"},"content":" ### Feature 7: Mark as Done of a task: done"},{"lineNumber":191,"author":{"gitId":"dgc5213"},"content":" Mark specified task as done."},{"lineNumber":192,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":193,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":194,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":195,"author":{"gitId":"dgc5213"},"content":" Format: `done` **INDEX**"},{"lineNumber":196,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":197,"author":{"gitId":"dgc5213"},"content":" Mark as Done of the task at the specified INDEX. The index refers to the index number shown in the most recent listing."},{"lineNumber":198,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":199,"author":{"gitId":"dgc5213"},"content":" Example of usage: "},{"lineNumber":200,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":201,"author":{"gitId":"dgc5213"},"content":"  `list `\u003cbr /\u003e"},{"lineNumber":202,"author":{"gitId":"dgc5213"},"content":"  `done 4 `\u003cbr /\u003e"},{"lineNumber":203,"author":{"gitId":"dgc5213"},"content":"  Marks the 4th task in the task list as done."},{"lineNumber":204,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":205,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":206,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":207,"author":{"gitId":"dgc5213"},"content":" `Nice! I\u0027ve marked this task as done: `\u003cbr /\u003e"},{"lineNumber":208,"author":{"gitId":"dgc5213"},"content":" `[✓] set a meeting`"},{"lineNumber":209,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":210,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":211,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":212,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":213,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":214,"author":{"gitId":"dgc5213"},"content":" ### Feature 8: View details of a task : view"},{"lineNumber":215,"author":{"gitId":"dgc5213"},"content":" Displays the details of the specified task."},{"lineNumber":216,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":217,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":218,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":219,"author":{"gitId":"dgc5213"},"content":" Format: `view` **INDEX**"},{"lineNumber":220,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":221,"author":{"gitId":"dgc5213"},"content":" Views the task at the specified INDEX. The index refers to the index number shown in the most recent listing."},{"lineNumber":222,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":223,"author":{"gitId":"dgc5213"},"content":" Example of usage: "},{"lineNumber":224,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":225,"author":{"gitId":"dgc5213"},"content":"  `list `\u003cbr /\u003e"},{"lineNumber":226,"author":{"gitId":"dgc5213"},"content":"  `view 4 `\u003cbr /\u003e"},{"lineNumber":227,"author":{"gitId":"dgc5213"},"content":"  Views the 4th task in the task list."},{"lineNumber":228,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":229,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":230,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":231,"author":{"gitId":"dgc5213"},"content":" `Nice! Here is the task ready to view:`\u003cbr /\u003e"},{"lineNumber":232,"author":{"gitId":"dgc5213"},"content":" `[T][✓] set a meeting`"},{"lineNumber":233,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":234,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":235,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":236,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":237,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":238,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":239,"author":{"gitId":"dgc5213"},"content":" ### Feature 9: Clearing all entries : clear"},{"lineNumber":240,"author":{"gitId":"dgc5213"},"content":"Clears all entries from the address book."},{"lineNumber":241,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":242,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":243,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":244,"author":{"gitId":"dgc5213"},"content":" Format: `clear` "},{"lineNumber":245,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":246,"author":{"gitId":"dgc5213"},"content":" Example of usage: "},{"lineNumber":247,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":248,"author":{"gitId":"dgc5213"},"content":"  `clear `\u003cbr /\u003e"},{"lineNumber":249,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":250,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":251,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":252,"author":{"gitId":"dgc5213"},"content":" `The Task list initially:`\u003cbr /\u003e"},{"lineNumber":253,"author":{"gitId":"dgc5213"},"content":" `[[T][✓] have dinner, [T][✘] buy book, [T][✘] visit friends, [T][✓] set a meeting]`\u003cbr /\u003e"},{"lineNumber":254,"author":{"gitId":"dgc5213"},"content":" `The Task list after using clear() method:[]`"},{"lineNumber":255,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":256,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":257,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":258,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":259,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":260,"author":{"gitId":"dgc5213"},"content":" ### Feature 10: Exiting the program : bye"},{"lineNumber":261,"author":{"gitId":"dgc5213"},"content":" Exits the program."},{"lineNumber":262,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":263,"author":{"gitId":"dgc5213"},"content":" ## Usage"},{"lineNumber":264,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":265,"author":{"gitId":"dgc5213"},"content":" Format: `bye` "},{"lineNumber":266,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":267,"author":{"gitId":"dgc5213"},"content":"Example of usage: "},{"lineNumber":268,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":269,"author":{"gitId":"dgc5213"},"content":"  `bye `\u003cbr /\u003e"},{"lineNumber":270,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":271,"author":{"gitId":"dgc5213"},"content":" Expected outcome:"},{"lineNumber":272,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":273,"author":{"gitId":"dgc5213"},"content":" `Bye. Hope to see you again soon!`\u003cbr /\u003e"},{"lineNumber":274,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":275,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":276,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":277,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":278,"author":{"gitId":"dgc5213"},"content":"### Feature 11: Loading the data"},{"lineNumber":279,"author":{"gitId":"dgc5213"},"content":"Auto-load the data from the hard disk when duke starts up. \u003cbr /\u003e"},{"lineNumber":280,"author":{"gitId":"dgc5213"},"content":"The file name and location `e.g., [project_root]/data/duke.txt`"},{"lineNumber":281,"author":{"gitId":"dgc5213"},"content":" "},{"lineNumber":282,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":283,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":284,"author":{"gitId":"dgc5213"},"content":"### Feature 12: Saving the data"},{"lineNumber":285,"author":{"gitId":"dgc5213"},"content":"Save the tasks in the hard disk automatically whenever the task list changes. There is no need to save manually. If there is no existing txt file, or data folder. The program can auto create a txt file and save the data in the hard disk."},{"lineNumber":286,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":287,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":288,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"},{"lineNumber":289,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":290,"author":{"gitId":"dgc5213"},"content":"### Feature 13: Sorting all tasks : sort"},{"lineNumber":291,"author":{"gitId":"dgc5213"},"content":"Compares tasks in the list to sort tasks by task status (isDone), by task description."},{"lineNumber":292,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":293,"author":{"gitId":"dgc5213"},"content":"## Usage"},{"lineNumber":294,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":295,"author":{"gitId":"dgc5213"},"content":"Format: `sort`"},{"lineNumber":296,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":297,"author":{"gitId":"dgc5213"},"content":"Example of usage:"},{"lineNumber":298,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":299,"author":{"gitId":"dgc5213"},"content":"`sort`\u003cbr /\u003e"},{"lineNumber":300,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":301,"author":{"gitId":"dgc5213"},"content":"Expected outcome:"},{"lineNumber":302,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":303,"author":{"gitId":"dgc5213"},"content":"`Hi, your tasks have been sorted based on Task Status and Description. Thanks`\u003cbr /\u003e"},{"lineNumber":304,"author":{"gitId":"dgc5213"},"content":"`1.[D][✓] eat (by: Saturday, September 19,2020)`\u003cbr /\u003e"},{"lineNumber":305,"author":{"gitId":"dgc5213"},"content":"`2.[T][✓] go to school,buy book`\u003cbr /\u003e"},{"lineNumber":306,"author":{"gitId":"dgc5213"},"content":"`3.[T][x] birthday`\u003cbr /\u003e"},{"lineNumber":307,"author":{"gitId":"dgc5213"},"content":"`4.[D][x] to do homework (by: Saturday, September 19,2020)`\u003cbr /\u003e"},{"lineNumber":308,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":309,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":310,"author":{"gitId":"dgc5213"},"content":"\u003cbr /\u003e"}],"authorContributionMap":{"dgc5213":310}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":":init"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":":end"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":":omega"}],"authorContributionMap":{"dgc5213":104}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":" *"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":" *"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":" * in the user manual at https://docs.gradle.org/6.5.1/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"rootProject.name \u003d \u0027IP\u0027"}],"authorContributionMap":{"dgc5213":10}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"D | 1 | eat | 2020-09-19"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"D | 1 | eat | 2020-09-19"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"E | 1 | go to school, buy book | 2020-12-12T12:00"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"E | 1 | have dinner at Tom\u0027s home | 2020-10-11T23:00"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"D | 1 | read book | 2020-10-11"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"T | 1 | return book"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"E | 1 | school | 2020-01-12T07:21"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"T | 1 | testing on PC"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"T | 0 | ADD Food"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"E | 0 | Birthday | 2021-09-12T08:11"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"E | 0 | Friend | 2020-05-12T10:21"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"T | 0 | Homework"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"E | 0 | Java | 2021-03-12T09:51"}],"authorContributionMap":{"dgc5213":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.Scene;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":" * Represents the main class for the Duke application."},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    // A string to hold the data file name which contains all tasks and their details"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    public static String filename \u003d \"src/main/java/data/duke.txt\";"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    private Storage storage;"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    private Ui ui;"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    private TaskList taskList;"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    private Parser parser;"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    private VBox dialogContainer;"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    private TextField userInput;"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    private Button sendButton;"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    private Scene scene;"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"     * Constructs an instance of Duke."},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    public Duke() {"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"        ui \u003d new Ui();"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        parser \u003d new Parser();"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        storage \u003d new Storage();"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        // reading the date from task data file"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"        // if this is the first time, a message will be shown that no data file is found"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        storage.readFromFile(filename);"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        Ui.sayWelcome();"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"     * Returns Duke\u0027s response to a command after executing it."},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"     * @param input User command."},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"     * @return Duke\u0027s response."},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"     * @throws DukeException if there is any exception."},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"    public String getResponse(String input) {"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"            String reply \u003d command.execute(taskList, ui, storage);"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"            storage.saveToFile(filename);"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"            return reply;"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"        } catch (DukeException e) {"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"            return e.getMessage();"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"}"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":""}],"authorContributionMap":{"dgc5213":96,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":" * A launcher class."},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import duke.ui.MainWindow;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":" * A GUI for Duke using FXML."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    /** Duke Object created for the GUI. */"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * Sets a scene on the stage argument to initialise the GUI."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * @param stage Stage used by a JavaFX application for the GUI."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    public void start(Stage stage) {"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"            stage.setScene(scene);"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"            stage.setTitle(\"Duke ChatBot\");"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"            stage.getIcons().add(new Image(\"/images/robot.png\"));"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"            stage.show();"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":45}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":" * Executes a Bye command."},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"     * Constructs a ByeCommand."},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"     * @param input It contains user input."},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    public ByeCommand(String input) {"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"     * Executes a bye command and returns a response."},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the current tasks."},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * @param ui Responsible for displaying information to the user."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":33}},{"path":"src/main/java/duke/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"public class ClearCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"     * Constructs a ClearCommand."},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"     * @param input It contains user input."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"    public ClearCommand(String input) {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     * Executes a clear command and returns a response."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the current tasks."},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"     * @param ui Responsible for displaying information to the user."},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"        taskList.clear();"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"                \"All the tasks in the Task List have been cleared. Thanks\");"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":32}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":" * An abstract Command Class"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    // An array list of task objects"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    public ArrayList\u003cTask\u003e taskList;"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    protected String input;"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    Command(String input) {"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"        this.input \u003d input;"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     * Executes the command and then returns a response."},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the current tasks."},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"     * @param ui Responsible for displaying information to the user."},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"     * @throws DukeException If could not execute command."},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"            throws DukeException;"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":40}},{"path":"src/main/java/duke/commands/DeadLineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import java.util.Locale;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"import static duke.util.TaskList.isValidDateTimeFormat;"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":" * Executes a DeadLine command."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"public class DeadLineCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    private String taskDescription;"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    private LocalDate dueDate;"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * Constructs a DeadLineCommand."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    public DeadLineCommand(String input) {"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"     * Executes a DeadLine command and returns a response."},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"        String taskDetail;"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        int len \u003d input.split(\" \").length; // to check who many words"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        String[] lineArr \u003d input.split(\" \", 2);"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"        String commandFirstWord \u003d input.split(\" \")[0].toLowerCase();"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        if (len \u003e 1) {"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"            taskDetail \u003d lineArr[1].trim();  // filter out the first words"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + commandFirstWord + \" cannot be empty.\");"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"        String toAddTaskDetails \u003d taskDetail;"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        if (!toAddTaskDetails.toLowerCase().contains(\"/by\")) {"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"Cannot find \u0027/by\u0027 in command.Please enter valid task details.\");"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        if (toAddTaskDetails.split(\"(?i)/by\").length \u003c 2) {"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"No deadline time found after keyword /by.Please enter valid task details.\");"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"        taskDescription \u003d (toAddTaskDetails.split(\"(?i)/by\")[0]).trim();// splits case insensitive"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"        String taskDeadline \u003d (toAddTaskDetails.split(\"(?i)/by\")[1]).trim();// splits case insensitive"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"        boolean dateTimeFormatChecker \u003d isValidDateTimeFormat(\"yyyy-MM-dd\", taskDeadline, Locale.ENGLISH);"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"        // to check if the user enter the correct date format"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"        if (!dateTimeFormatChecker) {"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"Please enter correct deadline Due Date yyyy-MM-dd, example: 2019-12-31\");"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"        dueDate \u003d LocalDate.parse(taskDeadline);"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"        Task task \u003d new Deadline(taskDescription, dueDate);"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"        int previousTaskSize \u003d taskList.size();"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"        taskList.add(task);"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"        int subsequentTaskSize \u003d taskList.size();"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"        assert (previousTaskSize + 1 \u003d\u003d subsequentTaskSize);"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"                \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\","},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"                task, taskList.size()"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"        );"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":90}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":" * Executes a delete command."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     * Constructs a DeleteCommand."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * Executes a sort command and returns a response."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        String selectedTask;"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"        int len \u003d input.split(\" \").length; // to check who many words"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        if (len \u003e 1) {"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"            selectedTask \u003d  input.split(\" \")[1];"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"TASK NUM is Empty/Null/Invalid: Returning to Main Menu\");"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"            // checking if the task number is given and empty string or null"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        // checking if the task number is given and empty string or null"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        if (selectedTask.trim().equals(\"\")) {"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"TASK NUM is Empty/Null/Invalid: Returning to Main Menu\");"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        int taskIndex \u003d Integer.parseInt(selectedTask) - 1;"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e taskList.size()) {"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException("},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"                    \"TASK NUM cannot be found in the task list: Returning to Main Menu\");"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        int previousTaskSize \u003d taskList.size();"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"        Task task \u003d taskList.remove(taskIndex);"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        int subsequentTaskSize \u003d taskList.size();"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"        assert (previousTaskSize \u003d\u003d subsequentTaskSize - 1);"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"                + \"%s\\n\" + \"Now you have %d tasks in the list.\", task, taskList.size());"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":63}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":" * Executes a done command."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     * Constructs a DoneCommand."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    public DoneCommand(String input) {"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * Executes a sort command and returns a response."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        String selectedTask;"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"        int len \u003d input.split(\" \").length; // to check who many words"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        if (len \u003e 1) {"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"            selectedTask \u003d  input.split(\" \")[1];"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"TASK NUM is Empty/Null/Invalid: Returning to Main Menu\");"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"            // checking if the task number is given and empty string or null"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        // checking if the task number is given and empty string or null"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        if (selectedTask.trim().equals(\"\")) {"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"TASK NUM is Empty/Null/Invalid: Returning to Main Menu\");"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        int taskIndex \u003d Integer.parseInt(selectedTask) - 1;"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        if (taskIndex \u003c 0 || (taskIndex \u003e\u003d taskList.size())) {"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException("},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"                    \"TASK NUM cannot be found in the task list: Returning to Main Menu\");"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        Task task \u003d taskList.get(taskIndex);"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        task.setDone();"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n%s\",task);"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":59}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import java.util.Locale;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import static duke.util.TaskList.isValidDateTimeFormat;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":" * Executes a event command."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"public class EventCommand extends Command {"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    private String taskDescription;"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    private  LocalDateTime formatDateTime;"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     * Constructs a EventCommand."},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    public EventCommand(String input) {"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"     * Executes a sort command and returns a response."},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        String taskDetail;"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        int len \u003d input.split(\" \").length; // to check who many words"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"        String[] lineArr \u003d input.split(\" \", 2);"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"        String commandFirstWord \u003d input.split(\" \")[0].toLowerCase();"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        if (len \u003e 1) {"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"            taskDetail \u003d lineArr[1].trim();  // filter out the first words"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + commandFirstWord + \" cannot be empty.\");"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        String toAddTaskDetails \u003d taskDetail;"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        if (!toAddTaskDetails.toLowerCase().contains(\" /at\")) {"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"Cannot find \u0027/at\u0027 in command.Please enter valid task details.\");"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        if (toAddTaskDetails.split(\"(?i)/at \").length \u003c 2) {"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"No event time found after keyword /at.Please enter valid task details.\");"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"        taskDescription \u003d (toAddTaskDetails.split(\"(?i)/at\")[0]).trim();"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"        // splits case insensitive"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        String taskEventDate \u003d (toAddTaskDetails.split(\"(?i)/at\")[1]).trim();"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"        // splits case insensitive"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"        boolean dateTimeFormatChecker \u003d isValidDateTimeFormat(\"yyyy-MM-dd HH:mm\", taskEventDate, Locale.ENGLISH);"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"        // to check if the user enter the correct date format"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"        if (!dateTimeFormatChecker) {"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"Please enter correct event Date yyyy-MM-dd HH:mm, example: 2019-12-31 11:10\");"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"        formatDateTime \u003d LocalDateTime.parse(taskEventDate, formatter);"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"        Task task \u003d new Event(taskDescription, formatDateTime);"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"        int previousTaskSize \u003d taskList.size();"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"        taskList.add(task);"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"        int subsequentTaskSize \u003d taskList.size();"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"        assert (previousTaskSize + 1 \u003d\u003d subsequentTaskSize);"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"                \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\","},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"                task, taskList.size()"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"        );"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":92}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import java.util.StringJoiner;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":" * Executes a find command."},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     * Constructs a FindCommand."},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    public FindCommand(String input) {"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * Executes a find command and returns a response."},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        String taskDetail;"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        int len \u003d input.split(\" \").length; // to check who many words"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        String[] lineArr \u003d input.split(\" \", 2);"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        String commandFirstWord \u003d input.split(\" \")[0].toLowerCase();"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        if (len \u003e 1) {"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"            taskDetail \u003d lineArr[1].trim();  // filter out the first words"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + commandFirstWord + \" cannot be empty.\");"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        String taskDescription;"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        ArrayList\u003cTask\u003e taskListKeywordFound \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"        StringJoiner response \u003d new StringJoiner(\"\\n\");"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        int matchedCount \u003d 0;"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"            taskDescription \u003d taskList.get(i).toString();"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"            if (taskDescription.toLowerCase().contains(taskDetail.toLowerCase())) {"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"                matchedCount \u003d matchedCount + 1;"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"                taskListKeywordFound.add(taskList.get(i));"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"                // once there is a match to a task, add this task to the new task list:taskListKeywordFound"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"        if (matchedCount \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"            Ui.showMessage(\"Sorry! Cannot find any matched tasks in your list.\");"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"            return \"Sorry! Cannot find any matched tasks in your list.\";"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"            Ui.showMessage(\"Here are the matching tasks in your list:\");"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"            for (int i \u003d 0; i \u003c taskListKeywordFound.size(); i++) {"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"                Ui.showMessage((i + 1) + \".\" + taskListKeywordFound.get(i).toString());"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"                // display the matched tasks to user from the task list:taskListKeywordFound"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"                response.add(String.format(\"%d.%s\", i + 1, taskListKeywordFound.get(i).toString()));"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"            return String.format("},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"                    \"Here are the matching tasks in your list:\\n%s\",response.toString());"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":""}],"authorContributionMap":{"dgc5213":86}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import java.util.StringJoiner;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":" * Executes a list command."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     * Constructs a ListCommand."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    public ListCommand(String input) {"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * Executes a list command and returns a response."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        StringJoiner response \u003d new StringJoiner(\"\\n\");"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"            response.add(String.format(\"%d.%s\", i + 1, taskList.get(i)));"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        return response.toString().isEmpty()"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"                ? \"You have no tasks at the moment :)\""},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"                : response.toString();"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":42}},{"path":"src/main/java/duke/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import java.util.StringJoiner;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":" * Executes a sort command."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"public class SortCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     * Constructs a SortCommand."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    public SortCommand(String input) {"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * Executes a sort command and returns a response."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        taskList.sort();"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"        StringJoiner response \u003d new StringJoiner(\"\\n\");"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"            response.add(String.format(\"%d.%s\", i + 1, taskList.get(i)));"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"                \"Hi, your tasks have been sorted based on Task Status and Description. Thanks\\n%s\",response.toString());"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":45}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":" * Executes a todo command."},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"public class TodoCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     * Constructs a TodoCommand."},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    public TodoCommand(String input) {"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * Executes a find command and returns a response."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"        String taskDetail;"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        int len \u003d input.split(\" \").length; // to check who many words"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        String[] lineArr \u003d input.split(\" \", 2);"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        String commandFirstWord \u003d input.split(\" \")[0].toLowerCase();"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        if (len \u003e 1) {"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"            taskDetail \u003d lineArr[1].trim();  // filter out the first words"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + commandFirstWord + \" cannot be empty.\");"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        Task task \u003d new Todo(taskDetail);"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        int previousTaskSize \u003d taskList.size();"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        taskList.add(task);"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"        int subsequentTaskSize \u003d taskList.size();"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"        assert (previousTaskSize + 1 \u003d\u003d subsequentTaskSize);"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"                \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\","},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"                task, taskList.size()"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":61}},{"path":"src/main/java/duke/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.util.Storage;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":" * Executes a unknown command."},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"public class UnknownCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"     * Constructs a UnknownCommand."},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"     *  @param input The strings contains keywords."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    public UnknownCommand(String input) {"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"        super(input);"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"     * Executes a unknown command and returns a response."},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     * @param taskList Contains the tasks."},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"     * @param ui Displays information to the user."},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * @param storage Reads and stores data into memory."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * @return Message to users."},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)  {"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"        return String.format("},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"                \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":35}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"     * A Exception to show the error message"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"     * @param message A String that holds the user input."},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.commands.ListCommand;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.commands.DeadLineCommand;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import duke.commands.EventCommand;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import duke.commands.FindCommand;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import duke.commands.ClearCommand;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import duke.commands.UnknownCommand;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"import duke.commands.Command;"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import duke.commands.SortCommand;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":" * Parser: deals with making sense of the user command"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    public static final String KEYWORD_MULTIPLE_SPACE \u003d \"  +\";"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    public static final String KEYWORD_ONE_SPACE \u003d \" \";"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * Parses a String input into a command."},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     * @param input The input to parse."},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     * @return Command associated with the input."},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"     * @throws DukeException If the input does not match any command."},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"        assert input !\u003d null;"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        String[] inputArr \u003d getInputArray(input);"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        String commandFirstWord \u003d  inputArr[0].toLowerCase();"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        //extract the first word of the user input, and lowercase it."},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"            switch (commandFirstWord) {"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"            case \"bye\":"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"                return new ByeCommand(input);"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"            case \"list\":"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"                return new ListCommand(input);"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"            case \"done\":"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"                return new DoneCommand(input);"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"            case \"delete\":"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"                return new DeleteCommand(input);"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"            case \"todo\":"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"                return new TodoCommand(input);"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"            case \"deadline\":"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"                return new DeadLineCommand(input);"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"            case \"event\":"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"                return new EventCommand(input);"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"            case \"find\":"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"                return new FindCommand(input);"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"            case \"clear\":"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"                return new ClearCommand(input);"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"            case \"sort\":"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"                return new SortCommand(input);"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"            default:"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"                return new UnknownCommand(input);"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"        } catch (Exception e) {"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"            Ui.showMessage(e.getMessage());"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        return null;"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"     * Get a String input into a list."},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"     * @param input The input to parse."},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"     * @return Command associated with the input."},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"    public static String[] getInputArray(String input) {"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"        return input.trim().replaceAll(KEYWORD_MULTIPLE_SPACE, KEYWORD_ONE_SPACE).split(KEYWORD_ONE_SPACE, 2);"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":""}],"authorContributionMap":{"dgc5213":105}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import java.time.DateTimeException;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import java.time.format.FormatStyle;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    // A String that holds the deadline date"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    protected String by;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    // The due date of the task as yyyy-mm-dd format"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    protected LocalDate dueDate;"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    protected LocalDateTime dueDateTime;"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"     * Creating an object of Event class"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     * @param description A String that holds the description of a task"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @param dueDate     A LocalDate that holds the deadline date.The due date of the task as yyyy-mm-dd format"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    public Deadline(String description, LocalDate dueDate) {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        super(description);"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        this.setDueDate(dueDate);"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"     * Creating an object of Task class"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"     * @param description A String that holds the description of a task"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    public Deadline(String description) {"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        super(description);"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"     * Gets the deadline description of the task."},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"     * @return by This deadline description (BY)"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"    public String getBy() {"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        return by;"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"     * Changes the deadline description of the task."},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"     * This may involve a lengthy legal process."},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"     * @param by This deadline description (BY)"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"    public void setBy(String by) {"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"        this.by \u003d by;"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"     * A method to get the due date of the task"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"     * @return the due date of task as LocalDate object"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"    public LocalDate getDueDate() {"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"        return dueDate;"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"     * A method to set the due date of a task"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"     * @param dueDate The due date of the task as yyyy-mm-dd format"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"     * @throws DateTimeException if given date is a past date"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"    protected void setDueDate(LocalDate dueDate) throws DateTimeException {"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"        //Ensure dueDate is saved as yyyy-MM-dd"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter formattedDate \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate.format(formattedDate));"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"     * A method to get the Task data as formatted string to display task type [D], task status and task description"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"     * @return a formatted String of task type [D], task status and task description"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"     *     To format the date display to the users."},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"     *     LONG format:    April 3, 2019"},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":"     *     MEDIUM format:  Apr 3, 2019"},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":"     *     SHORT format:   4/3/19"},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":"     *     FULL format:    Wednesday, April 3, 2019"},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"    public String toString() {"},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":"        String formattedDate \u003d dueDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":106,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":106}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"    // A String that holds the event date or time"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    protected String at;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    protected LocalDateTime dueDateTime;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     * Creating an object of Event class"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"     * @param description A String that holds the description of a task"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"     * @param dueDateTime          A LocalDateTime that holds the event date or time"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    public Event(String description, LocalDateTime dueDateTime) {"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"        this.dueDateTime \u003d dueDateTime;"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"     * A method to set the due date of a task"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"     * @param dueDateTime The due date of the task as yyyy-MM-dd HH:mm"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"     * @throws DateTimeException if given date is a past date"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    protected void setDueDateTime(LocalDateTime dueDateTime) throws DateTimeException {"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        //Ensure dueDate is saved as yyyy-MM-dd"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter formattedDate \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        this.dueDateTime \u003d LocalDateTime.parse(dueDateTime.format(formattedDate));"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"     * Gets the Event duration."},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"     * @return getDueDateTime This Event duration/duedate (BY)"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"    public LocalDateTime getDueDateTime() {"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"        return dueDateTime;"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"     * A method to get the Task data as formatted string to display task type [E], task status and task description"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"     * @return a formatted String of task type [E], task status and task description"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"    public String toString() {"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"        //Create formatter"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter fomatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd, yyyy HH:mm:ss a\");"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"        //Get formatted String"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        String formattedDate \u003d fomatter.format(dueDateTime);"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":71}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import java.util.Comparator;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"// An abstract class"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"public abstract class Task  implements Comparable\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"    // A String that holds the description of a task"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"    // A boolean value, if true: the task is completed, otherwise false."},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     * Creating an object of Task class"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     * @param description A String that holds the description of a task"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    public Task(String description) {"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"        isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * A method to get the Task Status Icon"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     * @return a String containing the icon: tick or X symbols"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    public String getStatusIcon() {"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"     * A method to get the Task description"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"     * @return a String containing the description of task"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"    public String getDescription() {"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        return description;"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"     * A method to set the Task as done/completed"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"    public void setDone() {"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        isDone \u003d true;"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"     * @return declare is done status."},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"    public boolean isDone() {"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"        return isDone;"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"     * A method to get the Task data as formatted string to display both task status and task description"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"     * @return a formatted String of task status and task description"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"     * Compares 2 tasks by task status (isDone), by task description."},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"     * @param task The Task to compare."},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"     * @return int corresponding to the order."},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"    public int compareTo(Task task) {"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"        return Comparator"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"                .comparing(Task::getStatusIcon)"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"                .thenComparing(Task::getDescription)"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"                .compare(this, task);"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":88}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"     * Creating an object of Todo class"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"     * @param description A String that holds the description of a task"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     * A method to get the Task data as formatted string to display task type [T], task status and task description"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     * @return a formatted String of task type [T], task status and task description"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":25}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"// Reference https://se-education.org/guides/tutorials/javaFxPart4.html"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"// Edit: JavaFX tutorial part 4 Using FXML"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    // Sets the background of message box based on the role: User or Duke"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    private static final String User_MessageBox \u003d"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"            \"-fx-background-color: rgba(165, 239, 127, 0.9); -fx-background-radius: 15; -fx-font-weight: bold;\";"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    private static final String Duke_MessageBox \u003d"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"            \"-fx-background-color: rgba(252, 253, 253, 0.9); -fx-background-radius: 15; -fx-font-weight: bold;\";"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    private Label dialog;"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    private ImageView displayPicture;"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    private DialogBox(String text, Image img, boolean isDuke) {"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"        dialog.setText(text);"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        if (isDuke) {"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"            dialog.setStyle(Duke_MessageBox);"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"            dialog.setStyle(User_MessageBox);"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"        displayPicture.setImage(img);"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"        final Circle clip \u003d new Circle(50, 50, 45);"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"     * Flips the dialog box to set the ImageView is on the left and text on the right."},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"    private void flip() {"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        Collections.reverse(tmp);"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        return new DialogBox(text, img,false);"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"        var db \u003d new DialogBox(text, img,true);"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"        db.flip();"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        return db;"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":74}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import javafx.application.Platform;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import java.util.TimerTask;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import java.util.Timer;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"// Reference https://se-education.org/guides/tutorials/javaFxPart4.html"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"// Edit: JavaFX tutorial part 4 Using FXML"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":" * Controller for MainWindow."},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":" * Provides the layout for the other controls."},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    private TextField userInput;"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"    private Duke duke;"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"     * Set the main window to show Greeting Message from Duke."},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"    public void initialize() {"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"                DialogBox.getDukeDialog(new Ui().greetMessage(), dukeImage)"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        duke \u003d d;"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"     * Set two dialog boxes:user input and Duke\u0027s reply"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"    @FXML"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"    private void handleUserInput() {"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"        );"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"            startExit();"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"        userInput.clear();"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"     * Execute the program exit and close the GUI when the user inputs the command"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"    private void startExit() {"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"        TimerTask timerTask \u003d new TimerTask() {"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"            @Override"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"            public void run() {"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"                Platform.exit();"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"                System.exit(0);"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"        };"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"        Timer delay \u003d new Timer();"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":"        delay.schedule(timerTask, 1500);"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":94}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"/** ."},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":" * Ui: deals with interactions with the user"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"     * This method will scan the user input"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"    public static String readUserCommand() {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"        return in.nextLine().trim();"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     * This method will display line on standard output (terminal)"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    public static void printLine() {"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"        System.out.println(\"_________________________________________\");"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"     * This method will display welcome message to user on standard output (terminal)"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    public static void sayWelcome() {"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"        printLine();"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        printLine();"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"     * This method will display greeting message to user"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    public String greetMessage() {"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"        return \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"     * This method will display any message to user on standard output (terminal)"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"     * @param message A String which contains the message we will show to user"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"    public static void showMessage(String message) {"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"        System.out.println(message);"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"     * This method will say goodbye to user on standard output (terminal)"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"    public void sayBye() {"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        printLine();"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        printLine();"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":66}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Event;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Todo;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import duke.util.TaskList;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"import java.io.BufferedReader;"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import java.io.BufferedWriter;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import java.io.File;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"import java.io.FileReader;"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"import java.io.FileWriter;"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"import java.io.IOException;"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"import java.nio.file.Files;"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"import java.nio.file.Paths;"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDate;"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"import java.util.ArrayList;"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":" * Storage: deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":" * Task data is saved in the hard disk automatically after any command that changes the data."},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"public class Storage {"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    // An array list of task objects"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"    private Task task;"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"     * creating an TodoList object"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"    public Storage() {"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"        taskList \u003d TaskList.getList();"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"    /* readFromFile"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"     * This method will read the data file from disk which will contain the data of previously saved tasks"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"     * It can handle the case that data folder is not exist. this method can auto create data folder and data file"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"     * @param filename A String that contains the file path"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"     * */"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"    public void readFromFile(String filename) {"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"            if (!Files.isReadable(Paths.get(filename))) {"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"                Ui.showMessage(\"The data file i.e.: \" + filename + \" does not exists!\");"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"                String folderPath \u003d System.getProperty(\"user.dir\")"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"                        + File.separator + \"src\" + File.separator"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"                        + \"main\" + File.separator + \"java\" + File.separator + \"data\";"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"                File folder \u003d new File(folderPath);"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"                File myObj \u003d new File(filename);"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"                if (!folder.exists() \u0026\u0026 !folder.isDirectory()) {"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"                    folder.mkdirs();"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"                    Ui.showMessage(\"Folder created:\" + folder);"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"                } else {"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"                    Ui.showMessage(\"Folder exist\");"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"                Ui.showMessage(\"Now, New file created: \" + myObj.getName());"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"                return;"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"            BufferedReader reader \u003d null;"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"            String tempString \u003d null;"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"            int line \u003d 1; //// the line number is started from 1st"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"            try {"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"                Ui.showMessage(\"Read tasks from txt file, line by line:\" + filename);"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"                reader \u003d new BufferedReader(new FileReader(filename));"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"                while ((tempString \u003d reader.readLine()) !\u003d null) {"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"                    Ui.showMessage(\"Line\" + line + \":\" + tempString);"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"                    createTaskFromFile(tempString);"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":"                    line++;"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"                reader.close();"},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":"                // TODO Auto-generated catch block"},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":"                e.printStackTrace();"},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":"            } finally {"},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":"                if (reader !\u003d null) {"},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"                    try {"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"                        reader.close();"},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":"                    } catch (IOException e) {"},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":"                        // TODO Auto-generated catch block"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"                        e.printStackTrace();"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":"                    }"},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":107,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":109,"author":{"gitId":"dgc5213"},"content":"        } catch (IOException e) {"},{"lineNumber":110,"author":{"gitId":"dgc5213"},"content":"            e.printStackTrace();"},{"lineNumber":111,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":114,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":115,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":116,"author":{"gitId":"dgc5213"},"content":"     * This method will auto create relevant task from the data file"},{"lineNumber":117,"author":{"gitId":"dgc5213"},"content":"     * the task could be event task, deadline task, todo task"},{"lineNumber":118,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"dgc5213"},"content":"     * @param line get the task content from txt file, which contains task type, task description, task status"},{"lineNumber":120,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"dgc5213"},"content":"    private void createTaskFromFile(String line)  {"},{"lineNumber":122,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":123,"author":{"gitId":"dgc5213"},"content":"        String taskDescription;"},{"lineNumber":124,"author":{"gitId":"dgc5213"},"content":"        String taskSchedule \u003d null;"},{"lineNumber":125,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":126,"author":{"gitId":"dgc5213"},"content":"        String[] lineArr \u003d line.split(\"\\\\|\");"},{"lineNumber":127,"author":{"gitId":"dgc5213"},"content":"        /* get the value of TaskDetail \u0026 TaskDeadlineDetail */"},{"lineNumber":128,"author":{"gitId":"dgc5213"},"content":"        taskDescription \u003d lineArr[2].trim();"},{"lineNumber":129,"author":{"gitId":"dgc5213"},"content":"        if (lineArr.length \u003e 3) {"},{"lineNumber":130,"author":{"gitId":"dgc5213"},"content":"            taskSchedule \u003d lineArr[3].trim();"},{"lineNumber":131,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":133,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":134,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter formatterEventSchedule \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");"},{"lineNumber":135,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":136,"author":{"gitId":"dgc5213"},"content":"        /* pass the value to Task:  todo / deadline /event, and lable the task status */"},{"lineNumber":137,"author":{"gitId":"dgc5213"},"content":"        if (lineArr[0].equals(\"D \") \u0026 lineArr[1].equals(\" 1 \")) {"},{"lineNumber":138,"author":{"gitId":"dgc5213"},"content":"            task \u003d new Deadline(taskDescription, LocalDate.parse(taskSchedule));"},{"lineNumber":139,"author":{"gitId":"dgc5213"},"content":"            task.setDone();"},{"lineNumber":140,"author":{"gitId":"dgc5213"},"content":"            taskList.add(task);"},{"lineNumber":141,"author":{"gitId":"dgc5213"},"content":"        } else if (lineArr[0].equals(\"D \") \u0026 lineArr[1].equals(\" 0 \")) {"},{"lineNumber":142,"author":{"gitId":"dgc5213"},"content":"            taskList.add((new Deadline(taskDescription, LocalDate.parse(taskSchedule))));"},{"lineNumber":143,"author":{"gitId":"dgc5213"},"content":"        } else if (lineArr[0].equals(\"E \") \u0026 lineArr[1].equals(\" 1 \")) {"},{"lineNumber":144,"author":{"gitId":"dgc5213"},"content":"            task \u003d new Event(taskDescription, LocalDateTime.parse(taskSchedule, formatterEventSchedule));"},{"lineNumber":145,"author":{"gitId":"dgc5213"},"content":"            task.setDone();"},{"lineNumber":146,"author":{"gitId":"dgc5213"},"content":"            taskList.add(task);"},{"lineNumber":147,"author":{"gitId":"dgc5213"},"content":"        } else if (lineArr[0].equals(\"E \") \u0026 lineArr[1].equals(\" 0 \")) {"},{"lineNumber":148,"author":{"gitId":"dgc5213"},"content":"            taskList.add(new Event(taskDescription, LocalDateTime.parse(taskSchedule, formatterEventSchedule)));"},{"lineNumber":149,"author":{"gitId":"dgc5213"},"content":"        } else if (lineArr[0].equals(\"T \") \u0026 lineArr[1].equals(\" 1 \")) {"},{"lineNumber":150,"author":{"gitId":"dgc5213"},"content":"            task \u003d new Todo(taskDescription);"},{"lineNumber":151,"author":{"gitId":"dgc5213"},"content":"            task.setDone();"},{"lineNumber":152,"author":{"gitId":"dgc5213"},"content":"            taskList.add(task);"},{"lineNumber":153,"author":{"gitId":"dgc5213"},"content":"        } else if (lineArr[0].equals(\"T \") \u0026 lineArr[1].equals(\" 0 \")) {"},{"lineNumber":154,"author":{"gitId":"dgc5213"},"content":"            taskList.add(new Todo(taskDescription));"},{"lineNumber":155,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":157,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":158,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":160,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":161,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":162,"author":{"gitId":"dgc5213"},"content":"     * This method will write the data of Tasks from ArrayList to data file on disk"},{"lineNumber":163,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"dgc5213"},"content":"     * @param filename a string specifying the full path and extension of data file"},{"lineNumber":165,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"dgc5213"},"content":"    public void saveToFile(String filename) {"},{"lineNumber":167,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":168,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":169,"author":{"gitId":"dgc5213"},"content":"        File out \u003d new File(filename);"},{"lineNumber":170,"author":{"gitId":"dgc5213"},"content":"        if (out.exists()) {"},{"lineNumber":171,"author":{"gitId":"dgc5213"},"content":"            out.delete();"},{"lineNumber":172,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":174,"author":{"gitId":"dgc5213"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(out))) {"},{"lineNumber":175,"author":{"gitId":"dgc5213"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":176,"author":{"gitId":"dgc5213"},"content":"                //  System.out.println(taskList);"},{"lineNumber":177,"author":{"gitId":"dgc5213"},"content":"                if (taskList.get(i) instanceof Deadline) {"},{"lineNumber":178,"author":{"gitId":"dgc5213"},"content":"                    bw.append(\"D \");"},{"lineNumber":179,"author":{"gitId":"dgc5213"},"content":"                    bw.append(\"| \").append(taskList.get(i).isDone() ? \"1\" : \"0\")"},{"lineNumber":180,"author":{"gitId":"dgc5213"},"content":"                            .append(\" | \").append(taskList.get(i).getDescription())"},{"lineNumber":181,"author":{"gitId":"dgc5213"},"content":"                            .append(\" | \").append(((Deadline) taskList.get(i)).getDueDate().toString());"},{"lineNumber":182,"author":{"gitId":"dgc5213"},"content":"                } else if (taskList.get(i) instanceof Event) {"},{"lineNumber":183,"author":{"gitId":"dgc5213"},"content":"                    bw.append(\"E \");"},{"lineNumber":184,"author":{"gitId":"dgc5213"},"content":"                    bw.append(\"| \").append(taskList.get(i).isDone() ? \"1\" : \"0\")"},{"lineNumber":185,"author":{"gitId":"dgc5213"},"content":"                            .append(\" | \").append(taskList.get(i).getDescription())"},{"lineNumber":186,"author":{"gitId":"dgc5213"},"content":"                            .append(\" | \").append(((Event) taskList.get(i)).getDueDateTime().toString());"},{"lineNumber":187,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":188,"author":{"gitId":"dgc5213"},"content":"                } else if (taskList.get(i) instanceof Todo) {"},{"lineNumber":189,"author":{"gitId":"dgc5213"},"content":"                    bw.append(\"T \");"},{"lineNumber":190,"author":{"gitId":"dgc5213"},"content":"                    bw.append(\"| \").append(taskList.get(i).isDone() ? \"1\" : \"0\")"},{"lineNumber":191,"author":{"gitId":"dgc5213"},"content":"                            .append(\" | \").append(taskList.get(i).getDescription());"},{"lineNumber":192,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":193,"author":{"gitId":"dgc5213"},"content":"                }"},{"lineNumber":194,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":195,"author":{"gitId":"dgc5213"},"content":"                bw.append(\"\\n\");"},{"lineNumber":196,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"dgc5213"},"content":"        } catch (IOException ex) {"},{"lineNumber":198,"author":{"gitId":"dgc5213"},"content":"            Ui.showMessage(ex.getMessage());"},{"lineNumber":199,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":202,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":203,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":204,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":205,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":205}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalTime;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"import java.util.Collections;"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"import java.util.Locale;"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":" * TaskList: contains the task list e.g., it has operations to add/delete tasks in the list"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":" * TodoList"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":" */"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"public class TaskList {"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    // An array list of task objects"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    private static ArrayList\u003cTask\u003e taskList;"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     * creating an TodoList object"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    public TaskList() {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"     * creating a taskList"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"    public static ArrayList\u003cTask\u003e getList() {"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        return taskList;"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"     * Sorts tasks in the task lists."},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"    public void sort() {"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        Collections.sort(taskList);"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"     * To check the datetime if it is valid."},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"     * @param format A String that holds the format of date/time."},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"     * @param value A String that holds the details of task"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"     * @param locale A Locale that holds the locale"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"    public static boolean isValidDateTimeFormat(String format, String value, Locale locale) {"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"        LocalDateTime ldt \u003d null;"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter fomatter \u003d DateTimeFormatter.ofPattern(format, locale);"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"            ldt \u003d LocalDateTime.parse(value, fomatter);"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"            String result \u003d ldt.format(fomatter);"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"            return result.equals(value);"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"                LocalDate ld \u003d LocalDate.parse(value, fomatter);"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"                String result \u003d ld.format(fomatter);"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"                return result.equals(value);"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"            } catch (DateTimeParseException exp) {"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"                try {"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"                    LocalTime lt \u003d LocalTime.parse(value, fomatter);"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"                    String result \u003d lt.format(fomatter);"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"                    return result.equals(value);"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"                } catch (DateTimeParseException e2) {"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"                    // Debugging purposes"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"                    //e2.printStackTrace();"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"        return false;"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"     * @param task The task to add."},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"    public void add(Task task) {"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"        taskList.add(task);"},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"     * Returns the size of the list of tasks."},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":"     * @return The size of the list of tasks."},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"    public int size() {"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":"        return taskList.size();"},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":106,"author":{"gitId":"dgc5213"},"content":"    public Task remove(int index) {"},{"lineNumber":107,"author":{"gitId":"dgc5213"},"content":"        return taskList.remove(index);"},{"lineNumber":108,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":110,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":111,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":112,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":113,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"dgc5213"},"content":"     * Returns a task from the list of tasks without removing it."},{"lineNumber":115,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"dgc5213"},"content":"     * @param index The index of the task to return."},{"lineNumber":117,"author":{"gitId":"dgc5213"},"content":"     * @return The task corresponding to the given index."},{"lineNumber":118,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"dgc5213"},"content":"    public Task get(int index) {"},{"lineNumber":120,"author":{"gitId":"dgc5213"},"content":"        return taskList.get(index);"},{"lineNumber":121,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":123,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":124,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"dgc5213"},"content":"     * A method to clear all entries."},{"lineNumber":126,"author":{"gitId":"dgc5213"},"content":"     * Show the message to user and notify the user that \"All entries have been cleared.\""},{"lineNumber":127,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"dgc5213"},"content":"    public static void clearAllTasks() {"},{"lineNumber":129,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":130,"author":{"gitId":"dgc5213"},"content":"        // list initially"},{"lineNumber":131,"author":{"gitId":"dgc5213"},"content":"        Ui.showMessage(\"The Task list initially:\\n\" + taskList);"},{"lineNumber":132,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":133,"author":{"gitId":"dgc5213"},"content":"        // clear function used"},{"lineNumber":134,"author":{"gitId":"dgc5213"},"content":"        taskList.clear();"},{"lineNumber":135,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":136,"author":{"gitId":"dgc5213"},"content":"        // list after clearing all elements"},{"lineNumber":137,"author":{"gitId":"dgc5213"},"content":"        Ui.showMessage(\"The Task list after using clear() method:\" + taskList);"},{"lineNumber":138,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":139,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":141,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":142,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":143,"author":{"gitId":"dgc5213"},"content":"     * A method to view the selected task details"},{"lineNumber":144,"author":{"gitId":"dgc5213"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"dgc5213"},"content":"     * @param selectedTask A String that holds the ID (number) of a task"},{"lineNumber":146,"author":{"gitId":"dgc5213"},"content":"     * @throws NullPointerException If TASK NUM is Empty/Null: Returning to Main Menu"},{"lineNumber":147,"author":{"gitId":"dgc5213"},"content":"     * @throws ArrayIndexOutOfBoundsException If TASK NUM is invalid,"},{"lineNumber":148,"author":{"gitId":"dgc5213"},"content":"     *          TASK NUM cannot be found in the task list: Returning to Main Menu"},{"lineNumber":149,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"dgc5213"},"content":"    public void viewSelectedTask(String selectedTask) {"},{"lineNumber":151,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":152,"author":{"gitId":"dgc5213"},"content":"        try {"},{"lineNumber":153,"author":{"gitId":"dgc5213"},"content":"            // checking if the task number is given and empty string or null"},{"lineNumber":154,"author":{"gitId":"dgc5213"},"content":"            if (selectedTask.trim().equals(\"\")) {"},{"lineNumber":155,"author":{"gitId":"dgc5213"},"content":"                throw new NullPointerException(\"TASK NUM is Empty/Null: Returning to Main Menu\");"},{"lineNumber":156,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":158,"author":{"gitId":"dgc5213"},"content":"            int taskIndex \u003d Integer.parseInt(selectedTask) - 1;"},{"lineNumber":159,"author":{"gitId":"dgc5213"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e taskList.size()) {"},{"lineNumber":160,"author":{"gitId":"dgc5213"},"content":"                throw new ArrayIndexOutOfBoundsException("},{"lineNumber":161,"author":{"gitId":"dgc5213"},"content":"                        \"TASK NUM cannot be found in the task list: Returning to Main Menu\");"},{"lineNumber":162,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":164,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":165,"author":{"gitId":"dgc5213"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":166,"author":{"gitId":"dgc5213"},"content":"                if (i \u003d\u003d taskIndex) {"},{"lineNumber":167,"author":{"gitId":"dgc5213"},"content":"                    Ui.showMessage(\"Nice! Here is the task ready to view:\");"},{"lineNumber":168,"author":{"gitId":"dgc5213"},"content":"                    Ui.showMessage(taskList.get(i).toString());"},{"lineNumber":169,"author":{"gitId":"dgc5213"},"content":"                }"},{"lineNumber":170,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":171,"author":{"gitId":"dgc5213"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":173,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":174,"author":{"gitId":"dgc5213"},"content":"        } catch (Exception e) {"},{"lineNumber":175,"author":{"gitId":"dgc5213"},"content":"            Ui.showMessage(e.getMessage());"},{"lineNumber":176,"author":{"gitId":"dgc5213"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":179,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":180,"author":{"gitId":"dgc5213"},"content":"    public void clear() {"},{"lineNumber":181,"author":{"gitId":"dgc5213"},"content":"        // clear function used"},{"lineNumber":182,"author":{"gitId":"dgc5213"},"content":"        taskList.clear();"},{"lineNumber":183,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":185,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":186,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":187,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":188,"author":{"gitId":"dgc5213"},"content":"}"},{"lineNumber":189,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":190,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":191,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":192,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":193,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":194,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":195,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":196,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":197,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":198,"author":{"gitId":"dgc5213"},"content":""}],"authorContributionMap":{"dgc5213":198}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" styleClass\u003d\"root\" stylesheets\u003d\"@styles.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"5.0\" maxHeight\u003d\"-Infinity\" styleClass\u003d\"dialog\" stylesheets\u003d\"@styles.css\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"displayPicture\" /\u003e"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"  \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"  \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"  \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"dgc5213":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"777\" prefWidth\u003d\"541\" stylesheets\u003d\"@styles.css\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"465.0\""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"               promptText\u003d\"Enter your command here.\""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"               styleClass\u003d\"userInput\" stylesheets\u003d\"@styles.css\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"465\" layoutY\u003d\"735\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" styleClass\u003d\"sendButton\" stylesheets\u003d\"@styles.css\" text\u003d\"Send\" /\u003e"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"736\" prefWidth\u003d\"541\" styleClass\u003d\"scrollPane\" stylesheets\u003d\"@styles.css\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"      \u003ccontent\u003e"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"541\" styleClass\u003d\"dialogContainer\" stylesheets\u003d\"@styles.css\" /\u003e"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"      \u003c/content\u003e"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"  \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"dgc5213":21}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Deadline;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Event;"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import duke.tasks.Todo;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"class TaskListTest {"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    private Todo taskT \u003d new Todo(\"To try out Todo\");"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    DateTimeFormatter formatterDT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"    LocalDateTime formatDateTime \u003d LocalDateTime.parse(\"2020-10-14 22:00\", formatterDT);"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    private Event taskE \u003d new Event(\"To try out Event\", formatDateTime);"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    DateTimeFormatter formatterD \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"    LocalDate formatDate \u003d LocalDate.parse(\"2020-10-14\", formatterD);"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    private duke.tasks.Deadline taskD \u003d new Deadline(\"To try out Event\",formatDate);"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    // An array list of task objects"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    private static ArrayList\u003cTask\u003e taskList;"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"    /** ."},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"     * creating an TodoList object"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"    public TaskListTest() {"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        taskList.add(taskT);"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        taskList.add(taskE);"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        taskList.add(taskD);"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        System.out.println(taskList);"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"//    @Test"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"//    void getList() {"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"//        assertEquals(\"[[T][X] To try out Todo, [E][X] To try out Event \""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"//                + \"(at: Wednesday, Oct 14, 2020 22:00:00 PM), \""},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"//                +  \"[D][X] To try out Event (by: Wednesday, October 14, 2020)]\", taskList.toString());"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"//    }"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":53}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    LocalDate formatDate \u003d LocalDate.parse(\"2020-10-14\", formatter);"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    private duke.tasks.Deadline task \u003d new Deadline(\"To try out Event\",formatDate);"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    void getDueDate() {"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"        LocalDate expectedValue \u003d LocalDate.parse(\"2020-10-14\",formatter);"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"        assertEquals(expectedValue, task.getDueDate());"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"     *COMMENTED OUT STUFF HERE"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"     *AND HERE"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"     * //    @Test"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"     * //    void testToString() {"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"     * //        assertEquals(\"[D][✘] To try out Event (by: Wednesday, October 14, 2020)\", task.toString());"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"     * //    }"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":37}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"public class EventTest {"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"    LocalDateTime formatDateTime \u003d LocalDateTime.parse(\"2020-10-14 22:00\", formatter);"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    private duke.tasks.Event task2 \u003d new Event(\"To try out Event\", formatDateTime);"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    public void getDescription() {"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"        assertEquals(\"To try out Event\", task2.getDescription());"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    public void isDone() {"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"        assertFalse(task2.isDone());"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"    void testGetDueDateTime() {"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        LocalDateTime expectedValue \u003d  LocalDateTime.parse(\"2020-10-14T22:00\");"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"        assertEquals(expectedValue, task2.getDueDateTime());"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"     *COMMENTED OUT STUFF HERE"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"     *AND HERE"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"     * //    @Test"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"     * //    void testToString() {"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"     * //        assertEquals(\"[E][✘] To try out Event (at: Wednesday, Oct 14, 2020 22:00:00 PM)\", task2.toString());"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"     * //    }"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":48}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"public class TaskTest {"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"    private Todo task1 \u003d new Todo(\"To try out Todo\");"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"    LocalDateTime formatDateTime \u003d LocalDateTime.parse(\"2020-10-14 22:00\", formatter);"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    private Event task2 \u003d new Event(\"To try out Event\", formatDateTime);"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"    void testGetDescription() {"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"        assertEquals(\"To try out Todo\", task1.getDescription());"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"        assertEquals(\"To try out Event\", task2.getDescription());"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    // test default done status, before any changes"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"    void testIsDoneBefore() {"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        assertFalse(task1.isDone());"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        assertFalse(task2.isDone());"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"    // test updated done status, after the setDone changes"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"    void testIsDoneAfter() {"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        task1.setDone();"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        task2.setDone();"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"        assertTrue(task1.isDone());"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        assertTrue(task2.isDone());"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":46}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"class TodoTest {"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"    private Todo task1 \u003d new Todo(\"To try out Todo\");"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"     *COMMENTED OUT STUFF HERE"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"     *AND HERE"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"     * //    @Test"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"     * //    void testToString() {"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"     * //        assertEquals(\"[T][✘] To try out Todo\", task1.toString());"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"     * //    }"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"}"}],"authorContributionMap":{"dgc5213":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"todo read book"}],"authorContributionMap":{"dgc5213":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"dgc5213":2,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"dgc5213":1,"-":37}}]
