[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"compileJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"compileTestJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"application {"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"    mainClassName \u003d \"dukes.Launcher\""},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"shadowJar {"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"    archiveClassifier \u003d null"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"checkstyle {"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"run{"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"    standardInput \u003d System.in"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":64}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"## Design \u0026 implementation"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"This product is an educational software project that helps user to keep track of various things.You can refer to [online website](https://linqing42.github.io/ip/DeveloperGuide.html)."},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"## Design"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"### UML diagram "},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"![UML Diagram](UML.png) "},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"### Storage method: Storage.saveTaskFile()"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"![Sequence Diagram](sequenceDiagram.png)"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"## Product scope"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"### Target user profile"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"The target user is a forgetful person who can keep tracking various things, know the deadline of each task and complete the task within the deadline."},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"### Value proposition"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"Project Duke will help to solve to tracking and managing tasks. It will involve description of each task. "},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"## User Stories"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"|v3.0|new user|see usage instructions|refer to them when I forget how to use the application|"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|create a task|put in the task information|"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|add date and time for deadline tasks| remind myself and complete the task within the deadline|"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|add date and time for event tasks| remind myself and attend the task with specific date and time|"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|add the description to the task|know what is the task about|"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|save my project in a txt file|keep a record for reference|"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|delete my project| reduce the clutter|"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|have a abbreviation and status of different types of task|have a quick look for each types of tasks|"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|show a total number of tasks|remind myself and have a timeframe for tasks|"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|know the same description of different tasks|find a relevant task with relevant description|"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|catch all input exceptions | ensure is valid input in send|"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|create done command to set a task to complete| ensure task can update to be done|"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|have a summary of the tasks| summarize the tasks|"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|exit the program|end the program|"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"|v3.0|forgetful person|fix all checkstyle errors| inorder to pass the CI test|"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"## Non-Functional Requirements"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"* Operation Environment: Project Duke works on any Mainstream OS as long as it has Java **11** or above installed. "},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"* Usability: A command line interface application, user will use specified command to interact with the system."},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"* Capacity: Project Duke should be able to record at least 1,000 project records. "},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"* Reliability / Availability: Once the project Duke has been successfully deployed on user\u0027s computer, availability is 24/7.   "},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"* Scalability: The current version of project Duke only support local data file storage, users are unable to share a centralised project data."},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"               If the need of having a centralised data storage raised in the future, it can be added as system enhancement. "},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"* Security: User login is being not required by user. The project Duke use user\u0027s computer login as authentication."},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"* Maintainability: A updated JAR file will be released to user if there is any update to the current version of the project tracker.                 "},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"               "},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"## Glossary"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"* Mainstream OS * - Windows, Mac and Linux"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"## Instructions for manual testing"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"Start the program"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"*    1. Download the Jar file and copy into an empty folder"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"*    2. Use terminal/CMD to run jar file with `java -jar` command."},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"*    3. type exit command or double enter to exit the program."}],"authorContributionMap":{"linqing42":64}},{"path":"docs/ReadMe.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"# Duke project"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"Duke is a Java-based desktop app that helps the users keep track of the tasks they need to do. It comes with a Command Line Interface (CLI) that allows users to enter their commands while retaining the benefits of a Graphical User Interface (GUI). This allows users who type fast to complete their desired actions quicker than using traditional GUI apps."},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"Useful links:"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"* [User Guide](https://github.com/linqing42/ip/blob/master/docs/UserGuide.md)"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"* [Developer Guide](https://github.com/linqing42/ip/blob/master/docs/DeveloperGuide.md)"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"* [User Guide-Website](https://linqing42.github.io/ip/UserGuide.html)"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"* [Developer Guide-Website](https://linqing42.github.io/ip/DeveloperGuide.html)"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"* [Ui.png-Website](https://linqing42.github.io/ip/Ui.png)"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"![Ui](Ui.png)"}],"authorContributionMap":{"linqing42":14}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"This product is an educational software project that helps user to keep track of various things."},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e The link is [website for user guide ](https://linqing42.github.io/ip/UserGuide.html)"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"## Quick start "},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"Using IntelliJ"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"1. Ensure you have Java 11 or above installed in your Computer"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"1. Download the IntelliJ"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"1. Set up the correct JDK version as follows:"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"   1. Click `OK`"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"1. Download the latest project from [here](https://github.com/linqing42/ip)."},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"1. Import the project into Intellij."},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"1. Go to the sr folder and find src\\main\\java\\dukes\\dukes.Duke"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"1. Right click the dukes.Duke and select Run dukes.Launcher"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"1. The program now should run on the Console (usually located at the bottom side)"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"1. Type the command and press Enter to execute it.\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"1.Refer to teh [Feature](#features) below for details of each command."},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"Using Command Line"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"1.\t\u0027Build\u0027 the project using IntelliJ."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"1.\tOpen the Terminal/Command Prompt."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"1.\tcd into the project’s `out\\artifacts\\ip_jar`."},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"1.\tType `java -jar ip.jar`  then Enter to execute ."},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"1.\tNow you can interact with the program through the CLI."},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"## Features "},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"- See all commands format : help"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"- Adding a Todo task: todo"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"- Adding a Deadline task: deadline"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"- Adding an Event task: event"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"- Listing task information: list"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"- Finding all tasks containing any keyword: find"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"- Deleting a task : delete"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"- Mark as Done of a task: done"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"- Exiting the program : bye"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"- Loading the data"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"- Saving the data"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"Notes about the command format:"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"- Words in **UPPER_CASE** are the parameters to be supplied by the user."},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"`E.g. DESCRIPTIONS in the command todo TASK DESCRIPTIONS`."},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"Order of parameters fixed."},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"### Viewing help: `help`"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"Shows all available commands that the user can input."},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"**Format**: `help`"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003ehelp"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"Use following commands to control me:"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"     - todo [desc]\\n\""},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"     - event [desc] /at [date time]"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"     - deadline [desc] /by [date time]"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"     - list\\n\""},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"     - done [task number]"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"     - bye|exit (exits duke)"},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"     - find [keyword]"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"     * date format - DD/MM/YYYY "},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"     * time format - HHmm"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"### Adding a task: `todo`"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"Adding a task in the task list and show the total number of task in the list."},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"### `todo` - Adding a task into a task list."},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027todo\u0027 with description can be **upper and lowercase letters** and its outcome will not include the keyword."},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the keyword without description. There will be an error message:\"OOPS!!! The description of a todo cannot be empty. \""},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"**Format**: `todo` Description"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":82,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eTOdo Read BOOK"},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":86,"author":{"gitId":"linqing42"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":87,"author":{"gitId":"linqing42"},"content":"[T][X] Read book"},{"lineNumber":88,"author":{"gitId":"linqing42"},"content":"Now you have 1 task in the list."},{"lineNumber":89,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"### Adding a deadline task: deadline"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":93,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":"Adding a deadline task helps to know the deadline for the specific task in the task list and show the total number of task in the list."},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"### `deadline` - Adding a deadline task"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027deadline\u0027 with description can be **upper and lowercase letters** and the outcome will not include the keyword."},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe date and time format need to include."},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the keyword without description. There will be an error message:\"OOPS!!! The description of a deadline cannot be empty.\" "},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you forgot to include the date and time or /by, there will be reminder message:\"OOPS!!! Please refer to [Help] to key in Correct Format.\""},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in a wrong format for date and time. There will be message to guide you :\"Please input a date in this format : dd/MM/yyyy HHmm.\""},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":103,"author":{"gitId":"linqing42"},"content":"**Format**: `deadline` Description /by dd/mm/yyyy HHmm"},{"lineNumber":104,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":105,"author":{"gitId":"linqing42"},"content":"**Example of usage**:"},{"lineNumber":106,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003edeadline return book /by 12/12/2021 1800"},{"lineNumber":107,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":108,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":109,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":110,"author":{"gitId":"linqing42"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":111,"author":{"gitId":"linqing42"},"content":"[D][X] return book (by:12-Dec-2021 06:00 PM)"},{"lineNumber":112,"author":{"gitId":"linqing42"},"content":"Now you have 2 tasks in the list."},{"lineNumber":113,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":114,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":115,"author":{"gitId":"linqing42"},"content":"### Adding an event task: `event`"},{"lineNumber":116,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":117,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":118,"author":{"gitId":"linqing42"},"content":"Adding an event task helps to remind the user to attend the event with specific date and time in the task list and show the total number of task in the list."},{"lineNumber":119,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":120,"author":{"gitId":"linqing42"},"content":"### `event` - Adding an event task"},{"lineNumber":121,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027event\u0027 with description can be **upper and lowercase letters** and The outcome will not include the keyword."},{"lineNumber":122,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eTThe date and time format need to include."},{"lineNumber":123,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the keyword without description. There will be an error message:\"OOPS!!! The description of an event cannot be empty.\""},{"lineNumber":124,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you miss the date and time or /at, there will be reminder message:\"\"OOPS!!! Please refer to [Help] to key in Correct Format.\""},{"lineNumber":125,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in a wrong format for date and time. There will be message to guide you :\"Please input a date in this format : dd/MM/yyyy HHmm.\""},{"lineNumber":126,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":127,"author":{"gitId":"linqing42"},"content":"**Format**: `event` Description /at dd/mm/yyyy HHmm"},{"lineNumber":128,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":129,"author":{"gitId":"linqing42"},"content":"**Example of usage**:"},{"lineNumber":130,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eEVENT join club /at 12/11/2021 0900"},{"lineNumber":131,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":132,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":133,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":134,"author":{"gitId":"linqing42"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":135,"author":{"gitId":"linqing42"},"content":"[E][X] join club (at:12-Nov-2021, 09:00 AM)"},{"lineNumber":136,"author":{"gitId":"linqing42"},"content":"Now you have 3 tasks in the list."},{"lineNumber":137,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":138,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":139,"author":{"gitId":"linqing42"},"content":"### Marking a specific task: `done`"},{"lineNumber":140,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":141,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":142,"author":{"gitId":"linqing42"},"content":"Marking a specific task to remind the user that he has finished the task."},{"lineNumber":143,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":144,"author":{"gitId":"linqing42"},"content":"### `done` - Marking a specific task from the task list."},{"lineNumber":145,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027done\u0027 can be **upper and lowercase letters** "},{"lineNumber":146,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe outcome will be change X to Y in the specific task."},{"lineNumber":147,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe index refers to the index number shown in the displayed task list."},{"lineNumber":148,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003ethe index **must be positive integer** 1,2,3... and must be in the list."},{"lineNumber":149,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the keyword without INDEX. There will be an error message:\"OOPS!!! Please refer to [Help] to key in Correct Format.\" "},{"lineNumber":150,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the index number that is out of the list. There will be an error message :\"OOPS!!! There is no specific task number in the list.\""},{"lineNumber":151,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":152,"author":{"gitId":"linqing42"},"content":"**Format**: `done` INDEX"},{"lineNumber":153,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":154,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":155,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eDone 1 or DONE 1 or done 1"},{"lineNumber":156,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":157,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":158,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":159,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eNice! I\u0027ve marked this task as done:"},{"lineNumber":160,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e[T][Y] Read book"},{"lineNumber":161,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":162,"author":{"gitId":"linqing42"},"content":"### Deleting a task: `delete`"},{"lineNumber":163,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":164,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":165,"author":{"gitId":"linqing42"},"content":"Delete a specific task from task list to helps remove the completed task and tidy the task list. It will show the total number of Tasks left in the task list. "},{"lineNumber":166,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":167,"author":{"gitId":"linqing42"},"content":"### `delete` - Deleting a specific task from the task list."},{"lineNumber":168,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027delete\u0027 can be **upper and lowercase letters** and its outcome will be remove the specific task and reduce the total number of task in the list."},{"lineNumber":169,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe index refers to the index number shown in the displayed task list "},{"lineNumber":170,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe index **must be a positive integer** 1,2,3... and must be in the list."},{"lineNumber":171,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the index number that is out of the list. There will be an error message:\"OOPS!!! There is no specific task to delete.\""},{"lineNumber":172,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the keyword without INDEX. There will be an error message:\"OOPS!!! Please refer to [Help] to key in Correct Format.\" "},{"lineNumber":173,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":174,"author":{"gitId":"linqing42"},"content":"**Format**: `delete` INDEX"},{"lineNumber":175,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":176,"author":{"gitId":"linqing42"},"content":"**Example of usage**:"},{"lineNumber":177,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eDelete 1 or DELETE 1 or delete 1"},{"lineNumber":178,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":179,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":180,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":181,"author":{"gitId":"linqing42"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":182,"author":{"gitId":"linqing42"},"content":"[T][Y] Read book"},{"lineNumber":183,"author":{"gitId":"linqing42"},"content":"Now you have 2 task in the list."},{"lineNumber":184,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":185,"author":{"gitId":"linqing42"},"content":"###Listing all Tasks: `list`"},{"lineNumber":186,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":187,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":188,"author":{"gitId":"linqing42"},"content":"It shows a list of tasks with a number. It helps to summarize the task list."},{"lineNumber":189,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":190,"author":{"gitId":"linqing42"},"content":"### `list` - Listing all Tasks with number."},{"lineNumber":191,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027list\u0027 can be **upper and lowercase letters** and its outcome will be show a list of task in the task list"},{"lineNumber":192,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the keyword with empty task.There will be an error message:\"OOPS!!! There are no Tasks in your list.\""},{"lineNumber":193,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":194,"author":{"gitId":"linqing42"},"content":"**Format**: list"},{"lineNumber":195,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":196,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":197,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003elist or List or LIST"},{"lineNumber":198,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":199,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":200,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":201,"author":{"gitId":"linqing42"},"content":"Here are the Tasks in your list:"},{"lineNumber":202,"author":{"gitId":"linqing42"},"content":"1.[D][X] return book (by:12-Dec-2021 06:00 PM)"},{"lineNumber":203,"author":{"gitId":"linqing42"},"content":"2.[E][X] join club (at:12-Nov-2021, 09:00 AM)"},{"lineNumber":204,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":205,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":206,"author":{"gitId":"linqing42"},"content":"### Locating Tasks by description_keyword: `find`"},{"lineNumber":207,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":208,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":209,"author":{"gitId":"linqing42"},"content":"It helps to search a task that contain any of the given description_keyword, and the search is case-insensitive. e.g book will match BOOK. Therefore, the user can easily find out the specific task base on find function."},{"lineNumber":210,"author":{"gitId":"linqing42"},"content":"### `find` - Locating Tasks with given description_keyword"},{"lineNumber":211,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe keyword \u0027find\u0027 can be **upper and lowercase letters** and its outcome will be show a list of task in the task list when the task is match the specific description keywords."},{"lineNumber":212,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eThe order of the description_keyword does not matter."},{"lineNumber":213,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you key in the specific description_keyword that does not match the task in your list.There will be an error message:\"OOPS!!! There is no matching Tasks in your list.\""},{"lineNumber":214,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003e\u003eIf you only key in the **keyword**, there will be an error message:\"OOPS!!! The description of a find cannot be empty.\""},{"lineNumber":215,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":216,"author":{"gitId":"linqing42"},"content":"**Format**: `find` description_keyword[more_keyword]"},{"lineNumber":217,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":218,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":219,"author":{"gitId":"linqing42"},"content":"   \u003cbr/\u003estep 1.TODO Read BOOK"},{"lineNumber":220,"author":{"gitId":"linqing42"},"content":"   \u003cbr/\u003estep 2. find book or Find BOok or FIND BOOK"},{"lineNumber":221,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":222,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":223,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":224,"author":{"gitId":"linqing42"},"content":"Here are the matching Tasks in your list:"},{"lineNumber":225,"author":{"gitId":"linqing42"},"content":"1.[T][X] Read BOOK"},{"lineNumber":226,"author":{"gitId":"linqing42"},"content":"2.[D][X] return book (by:12-Dec-2021 06:00 PM)"},{"lineNumber":227,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":228,"author":{"gitId":"linqing42"},"content":"### Exiting the program: `exit`/`bye`"},{"lineNumber":229,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":230,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":231,"author":{"gitId":"linqing42"},"content":"It helps to end the program."},{"lineNumber":232,"author":{"gitId":"linqing42"},"content":"### `exit/bye` - Exiting the program "},{"lineNumber":233,"author":{"gitId":"linqing42"},"content":"   \u003cbr/\u003eThe keyword \u0027exit/bye\u0027 can be **upper and lowercase letters** and a bye message will be show:\"Bye. Hope to see you again soon!\"."},{"lineNumber":234,"author":{"gitId":"linqing42"},"content":"   \u003cbr/\u003e the Launcher will auto exit."},{"lineNumber":235,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":236,"author":{"gitId":"linqing42"},"content":"**Format**: `exit ` or `bye`"},{"lineNumber":237,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":238,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":239,"author":{"gitId":"linqing42"},"content":"   \u003cbr/\u003ebye/exit/BYE/EXIT/Bye/Exit"},{"lineNumber":240,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":241,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":242,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":243,"author":{"gitId":"linqing42"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":244,"author":{"gitId":"linqing42"},"content":"```"},{"lineNumber":245,"author":{"gitId":"linqing42"},"content":"### Loading the data "},{"lineNumber":246,"author":{"gitId":"linqing42"},"content":"Auto-load the data from the hard disk when duke starts up. "},{"lineNumber":247,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eThe file name and location `e.g., [project_root]/data/duke.txt`"},{"lineNumber":248,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":249,"author":{"gitId":"linqing42"},"content":"###Saving the task in the hard-disk"},{"lineNumber":250,"author":{"gitId":"linqing42"},"content":"It auto-save the Tasks and auto create a text file after exiting the program, and the format of display will be change when task save in hard disk. It saves the user\u0027s time as there is no need to save manually."},{"lineNumber":251,"author":{"gitId":"linqing42"},"content":" "},{"lineNumber":252,"author":{"gitId":"linqing42"},"content":"### Exceptions message"},{"lineNumber":253,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":254,"author":{"gitId":"linqing42"},"content":"## Usage"},{"lineNumber":255,"author":{"gitId":"linqing42"},"content":"It helps to handle error message that will guide the user."},{"lineNumber":256,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":257,"author":{"gitId":"linqing42"},"content":"**Example of usage**: "},{"lineNumber":258,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003ebook"},{"lineNumber":259,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":260,"author":{"gitId":"linqing42"},"content":"**Expected outcome**:"},{"lineNumber":261,"author":{"gitId":"linqing42"},"content":"\u003cbr/\u003eOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":262,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":263,"author":{"gitId":"linqing42"},"content":"## Command Summary"},{"lineNumber":264,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":265,"author":{"gitId":"linqing42"},"content":"|Action| Format | Examples |"},{"lineNumber":266,"author":{"gitId":"linqing42"},"content":"|--------|----------|---------------|"},{"lineNumber":267,"author":{"gitId":"linqing42"},"content":"|Help|help|help|"},{"lineNumber":268,"author":{"gitId":"linqing42"},"content":"|Todo|todo Description|todo read book|"},{"lineNumber":269,"author":{"gitId":"linqing42"},"content":"|Deadline|deadline Description /by dd/mm/yyyy HHmm|deadline return book /by 12/12/2021 1800| "},{"lineNumber":270,"author":{"gitId":"linqing42"},"content":"|Event|event Description /at dd/mm/yyyy HHmm|event join club /at 11/12/2021 1300| "},{"lineNumber":271,"author":{"gitId":"linqing42"},"content":"|List|list|list|"},{"lineNumber":272,"author":{"gitId":"linqing42"},"content":"|Find|find description_keyword[more_keywords]|find book|"},{"lineNumber":273,"author":{"gitId":"linqing42"},"content":"|Done|done INDEX|done 1|"},{"lineNumber":274,"author":{"gitId":"linqing42"},"content":"|Delete|delete INDEX|delete 1|"},{"lineNumber":275,"author":{"gitId":"linqing42"},"content":"|Exit|exit|exit|"},{"lineNumber":276,"author":{"gitId":"linqing42"},"content":"|Bye|bye|bye|"},{"lineNumber":277,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":277}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 seedu.tracker.command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":":init"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"@rem Get seedu.tracker.command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"@rem Slurp the seedu.tracker.command line arguments."},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":82,"author":{"gitId":"linqing42"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":"@rem Setup the seedu.tracker.command line"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":87,"author":{"gitId":"linqing42"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"linqing42"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":":end"},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":103,"author":{"gitId":"linqing42"},"content":":omega"}],"authorContributionMap":{"linqing42":103}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"rootProject.name \u003d \u0027Duke\u0027"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":2}},{"path":"src/main/java/dukes/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"import java.util.Collections;"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"public class DialogBox extends HBox {"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    private Label dialog;"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    private ImageView displayPicture;"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"            fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        dialog.setText(text);"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"        displayPicture.setImage(img);"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        final Circle clip \u003d new Circle(50, 50, 45);"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":61}},{"path":"src/main/java/dukes/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.command.Command;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.exception.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.parser.Parser;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import javafx.scene.Scene;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.Button;"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"import javafx.scene.image.Image;"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"import javafx.stage.Stage;"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"import java.util.ArrayList;"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":" * The Dukes.Duke program implements an application that can store a list of task,save to a txt file."},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":" * and print the task on the screen."},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":" * it link to other classes which is an member for Dukes.Duke such as Storage, Task and Ui Class"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":" *"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":" * @author LIN QING"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":" * @version 1.0"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":" * @since 18/1/2021"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"public class Duke {"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"    private final Storage storage;"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"    private TaskList tasks;"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"    private final Ui ui;"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"    private VBox dialogContainer;"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"    private TextField userInput;"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"    private Button sendButton;"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"    private Scene scene;"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"    private String input;"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"    /** Path program will store the task in this path."},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"     * @param path the path of which data is saved and loaded from"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"     * */"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"    public Duke(String path)  {"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"        ui \u003d new Ui();"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"        storage \u003d new Storage();"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"            e.printStackTrace();"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"    public Duke() {"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":"        storage \u003d new Storage();"},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"        ui \u003d new Ui();"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"        } catch (DukeException e) {"},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"            ui.printLoadingError(\"Problem reading file. Starting with an empty task list.\");"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"     * run program implements an application that simply shows the tasks and print on the screen"},{"lineNumber":82,"author":{"gitId":"linqing42"},"content":"     * DukeException if the command word not in the case."},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"    public void run() throws DukeException {"},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"        ui.printWelcome();"},{"lineNumber":86,"author":{"gitId":"linqing42"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":87,"author":{"gitId":"linqing42"},"content":"        boolean isExit \u003d false;"},{"lineNumber":88,"author":{"gitId":"linqing42"},"content":"        while (!isExit) {"},{"lineNumber":89,"author":{"gitId":"linqing42"},"content":"            try {"},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"                ui.showLine();"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":93,"author":{"gitId":"linqing42"},"content":"                c.execute(input, tasks, ui, storage);"},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"            } catch (DukeException e) {"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"            } finally {"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"                ui.showLine();"},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":103,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"linqing42"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":105,"author":{"gitId":"linqing42"},"content":"     * Replace this stub with your completed method."},{"lineNumber":106,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"linqing42"},"content":"    String getResponse(String input) {"},{"lineNumber":108,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"linqing42"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":110,"author":{"gitId":"linqing42"},"content":"            return c.execute(input, tasks, ui, storage);"},{"lineNumber":111,"author":{"gitId":"linqing42"},"content":"        } catch (DukeException e) {"},{"lineNumber":112,"author":{"gitId":"linqing42"},"content":"            return e.getMessage();"},{"lineNumber":113,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":116,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"linqing42"},"content":"     * This is main method which made use of Dukes.Duke and run methods."},{"lineNumber":118,"author":{"gitId":"linqing42"},"content":"     * @param args a value passed to a function."},{"lineNumber":119,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"linqing42"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":121,"author":{"gitId":"linqing42"},"content":"        assert (args.length) \u003e 0;"},{"lineNumber":122,"author":{"gitId":"linqing42"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":123,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":125,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":126,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":127,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":128,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":128}},{"path":"src/main/java/dukes/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":9}},{"path":"src/main/java/dukes/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    private Duke dukes \u003d new Duke();"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"            stage.setTitle(\"Duke ChatBot\");"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"            stage.getIcons().add(new Image(\"/images/Robot.png\"));"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dukes);"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":30}},{"path":"src/main/java/dukes/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"import java.util.Timer;"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"import java.util.TimerTask;"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    private VBox dialogContainer;"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"    private TextField userInput;"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"    private Button sendButton;"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"    private Duke duke;"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"        String hello \u003d \"Hello! I\u0027m your task manager ^_^\\n Key in help for more information\\n What can I do for you?\";"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"                DialogBox.getDukeDialog(hello, dukeImage));"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"        duke \u003d d;"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        if (input.isEmpty()) {"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"            return;"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"        );"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {"},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"            terminationExit();"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"        userInput.clear();"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"    private void terminationExit() {"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":"        TimerTask timerTask \u003d new TimerTask() {"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"            @Override"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"            public void run() {"},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"                Platform.exit();"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"                System.exit(0);"},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":"        };"},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"        Timer delay \u003d new Timer();"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"        delay.schedule(timerTask, 500);"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":81}},{"path":"src/main/java/dukes/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":" * Create a UI class to manage user interface for users and handles interaction between the user."},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"     * Reads user input."},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"     * @return User input."},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    public String readCommand() {"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"        return in.nextLine();"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    public Ui() {"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    public void showLine() {"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"    public void showError(String message) {"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        System.out.println(message);"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"     * Prints the Dukes.Duke logo and greets the user for the first time the program is run."},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"    public void printWelcome() {"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"        showLine();"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        System.out.println(\"Hello! I\u0027m Dukes\\nWhat can I do for you?\\n\");"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        showLine();"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"     * Prints the bye message and the list that will be save in hard disk when the user exits the program."},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"     * @param task the list of task that will be saved."},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"     * @return the list of task and the goodbye message will be show."},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"    public String showExitMessage(ArrayList\u003cTask\u003e task) {"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"        System.out.println(\"Your following tasks will be save: \");"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"        for (Task t : task) {"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"            System.out.println(t);"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        return (\"Bye. Hope to see you again soon!\");"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"     * Prints the error when the information in storage could not be loaded."},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"     * @param s the string of the message."},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"    public void printLoadingError(String s) {"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"        System.out.println(s);"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"    public static int indexDetails(String input) {"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"        return Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1)) - 1;"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"     * Prints the message to inform user of a successful addition of a task to the list."},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":"     * @param task Task that has been added."},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"     * @param numberOfTasks Number of tasks currently in the list."},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"     * @return a message to add in the task."},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"    public String printAddedMessage(Task task, int numberOfTasks) {"},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":"        return \"Got it. I\u0027ve added this task: \\n\""},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":"                + task"},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"                + \"\\n Now you have \""},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"                + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"                + \" in the list.\";"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"     * Prints the message to inform user of a successful deletion."},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"     * @param task Task that has been deleted."},{"lineNumber":86,"author":{"gitId":"linqing42"},"content":"     * @param numberOfTasks Number of tasks left in the list."},{"lineNumber":87,"author":{"gitId":"linqing42"},"content":"     * @return a message for remove the a task."},{"lineNumber":88,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"linqing42"},"content":"    public String printDeleteMessage(Task task, int numberOfTasks) {"},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\""},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"                + task"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":"                + \"\\nNow you have \""},{"lineNumber":93,"author":{"gitId":"linqing42"},"content":"                + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":"                + \" in the list.\";"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"     * Prints the message to inform user that a task has been successfully marked as done."},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"     * @param task Task that has been marked as done."},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"     * @return a message to show the done task."},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":"    public String printDoneMessage(Task task) {"},{"lineNumber":103,"author":{"gitId":"linqing42"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":104,"author":{"gitId":"linqing42"},"content":"                + task;"},{"lineNumber":105,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":107,"author":{"gitId":"linqing42"},"content":"    public String indentPrint(String toPrint) {"},{"lineNumber":108,"author":{"gitId":"linqing42"},"content":"        return \" \" + toPrint + \"\" + \"\\n\";"},{"lineNumber":109,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":111,"author":{"gitId":"linqing42"},"content":"    public String showHelp() {"},{"lineNumber":112,"author":{"gitId":"linqing42"},"content":"        return \"Use following commands to control me:\\n\""},{"lineNumber":113,"author":{"gitId":"linqing42"},"content":"                + \"\\t- todo [desc]\\n\""},{"lineNumber":114,"author":{"gitId":"linqing42"},"content":"                + \"\\t- event [desc] /at [date time]\\n\""},{"lineNumber":115,"author":{"gitId":"linqing42"},"content":"                + \"\\t- deadline [desc] /by [date time]\\n\""},{"lineNumber":116,"author":{"gitId":"linqing42"},"content":"                + \"\\t- list\\n\""},{"lineNumber":117,"author":{"gitId":"linqing42"},"content":"                + \"\\t- done [task number]\\n\""},{"lineNumber":118,"author":{"gitId":"linqing42"},"content":"                + \"\\t- bye|exit (exits duke)\\n\""},{"lineNumber":119,"author":{"gitId":"linqing42"},"content":"                + \"\\t- find [keyword]\\n\""},{"lineNumber":120,"author":{"gitId":"linqing42"},"content":"                + \"\\t* date format - DD/MM/YYYY \\n\""},{"lineNumber":121,"author":{"gitId":"linqing42"},"content":"                + \"\\t* time format - HHmm\";"},{"lineNumber":122,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":124,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":125,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":125}},{"path":"src/main/java/dukes/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":" * Create an AddCommand. It will add a Deadline, Event, todo task to the user list and save it."},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    public AddCommand(Task task) {"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        super.task \u003d task;"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * Adds a todo task to the task list and save the list to disk and display to user."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @param input  The strings contains keywords and descriptions."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     * @param tasks   TaskList to be appended."},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     * @param ui      UI to interact with user."},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files,temporary save and store in hard disk."},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"            if (input.length() \u003c 6) {"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"            tasks.list.add(task);"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"            storage.saveTaskFile(tasks.list);"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"            return ui.printAddedMessage(task, tasks.list.size());"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"        } catch (DukeException e) {"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"            return (e.getMessage());"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":41}},{"path":"src/main/java/dukes/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":" * Represents a command."},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":" * Parent class of all other types of commands to perform some action."},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"public abstract class Command {"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    protected Task task;"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    protected String keyWord;"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    protected String input;"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    public abstract String execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * Checks if this object is an \u003ccode\u003eExitCommand\u003c/code\u003e."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * @return Whether this command is an exit command."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":28}},{"path":"src/main/java/dukes/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import java.util.Date;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy hh:mm a\");"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"     * Adds a Deadline task to the task list and save the list to disk and display to user."},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"     * @param input  The strings contains keywords and descriptions."},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * @param tasks   TaskList to be appended."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * @param ui      UI to interact with user."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files,temporary save and store in hard disk."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"        Task taskWord;"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        if (input.length() \u003c 10) {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\\n\");"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        String[] splitDetail \u003d input.split(\"/by\");"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        if (splitDetail.length \u003c 2) {"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! Please refer to [Help] to key in Correct Format.\\n\");"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"        String task \u003d splitDetail[0].substring(9);"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"        String by \u003d splitDetail[1];"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"            Date byDeadline \u003d format.parse(by);"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"            taskWord \u003d new Deadline(task, formatter.format(byDeadline));"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"Please input a date in this format : dd/MM/yyyy HHmm\");"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"        tasks.list.add(taskWord);"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"        storage.saveTaskFile(tasks.list);"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"        return ui.printAddedMessage(taskWord, tasks.list.size());"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":47}},{"path":"src/main/java/dukes/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":" * Create a DeleteCommand. It removes user\u0027s task from the list."},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"        super.input \u003d input;"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"     * Adds a delete task from list with a specific index if index is valid, save the task to user\u0027s list."},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"     * @param input  The strings contains keywords and index number."},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * @param tasks   TaskList to be appended."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * @param ui      UI to interact with user."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files and temporary store in hard disk."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     * @throws DukeException If user key in a number that is not in the TaskList."},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"            if (input.isEmpty() || input.length() \u003c 7 || input.trim().equals(\"\")) {"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"                throw new DukeException(\"OOPS!!! Please refer to [Help] to key in Correct Format.\\n\");"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"            int index \u003d Ui.indexDetails(input);"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"            Task deletedTask \u003d tasks.list.remove(index);"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"            storage.saveTaskFile(tasks.list);"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"            return ui.printDeleteMessage(deletedTask, tasks.list.size());"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"        } catch (DukeException e) {"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"            return (e.getMessage());"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! There is no specific task number to delete.\");"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":42}},{"path":"src/main/java/dukes/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":" * Represents a done command."},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":" * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to a command to mark a \u003ccode\u003eTaskList\u003c/code\u003e object"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":" * in a \u003ccode\u003eTaskList\u003c/code\u003e as done."},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"     * Constructor for \u003ccode\u003eDoneCommand\u003c/code\u003e."},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"     * @param input  The strings contains keywords and index number"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    public DoneCommand(String input) {"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"        super.input \u003d input;"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * Mark a task in the task list as done if specified index is valid, save the task list and display to user."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     * @param input  The strings contains keywords and index number"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"     * @param tasks TaskList to be appended."},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"     * @param ui UI to interact with user."},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files and temporary store in hard disk."},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"     * @throws DukeException If user key in a number that is not in the TaskList."},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"    public String execute(String input,TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"            if (input.length() \u003c 6 || input.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"                throw new DukeException(\"OOPS!!! Please refer to [Help] to key in Correct Format.\\n\");"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"            int toEdit \u003d Ui.indexDetails(input);"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"            Task doneTask \u003d tasks.list.get(toEdit).markAsDone();"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"            storage.saveTaskFile(tasks.list);"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"            return ui.printDoneMessage(doneTask);"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! There is no specific task number in the list\");"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":46}},{"path":"src/main/java/dukes/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import java.util.Date;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"public class EventCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy hh:mm a\");"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"     * Adds a Event task to the task list and save the list to disk and display to user."},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"     * @param input  The strings contains keywords and descriptions."},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * @param tasks   TaskList to be appended."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * @param ui      UI to interact with user."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files,temporary save and store in hard disk."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"        Task taskWord;"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        if (input.length() \u003c 7 || input.isEmpty()) {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\\n\");"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        String[] splitEvent \u003d input.split(\"/at\");"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        if (splitEvent.length \u003c 2) {"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! Please refer to [Help] to key in Correct Format.\\n\");"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"        String event \u003d splitEvent[0].substring(6);"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"        String time \u003d splitEvent[1];"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"            Date timeEvent \u003d format.parse(time);"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"            taskWord \u003d new Event(event, formatter.format(timeEvent));"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"Please input a date in this format : dd/MM/yyyy HHmm\");"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"        tasks.list.add(taskWord);"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"        storage.saveTaskFile(tasks.list);"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"        return ui.printAddedMessage(taskWord, tasks.list.size());"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":48}},{"path":"src/main/java/dukes/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" * Create an ExitCommand. It ends and exit the programme and stores user\u0027s tasks."},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"     * Saves the tasks into storage and display bye message to the user."},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"     * @param input The strings contains keywords and index number."},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"     * @param tasks TaskList to be appended."},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"     * @param ui UI to interact with user."},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files and temporary store in hard disk."},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"     * @return a goodbye message will be show."},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    public String execute(String input,TaskList tasks, Ui ui, Storage storage)  {"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"        return ui.showExitMessage(tasks.list);"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     * Checks if this object is an \u003ccode\u003eExitCommand\u003c/code\u003e."},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"     * @return Whether this command is an exit command."},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":32}},{"path":"src/main/java/dukes/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":" * Creates a FindCommand. It search for tasks when given keyword."},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"public class FindCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    public FindCommand(String keyWord) {"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"        this.keyWord \u003d keyWord;"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"     * Finds the tasks with the given keyword."},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"     * @param input The strings contains keywords and index number."},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * @param tasks   TaskList to be appended."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * @param ui      UI to interact with user."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     * @return a list of tasks with the specific keyword will be show."},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"        TaskList filteredTasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        int count \u003d 0;"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"            if (input.length() \u003c 6 || input.isEmpty()) {"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"                throw new DukeException(\"OOPS!!! The description of a find cannot be empty.\\n\");"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"            for (Task task : tasks.list) {"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"                String description \u003d task.getDescription().toLowerCase();"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"                if (description.contains(keyWord)) {"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"                    filteredTasks.list.add(task);"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"                    count +\u003d 1;"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"            if (count \u003d\u003d 0) {"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"                throw new DukeException(\"OOPS!!! There is no matching task in the list\");"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"                StringBuilder toPrint \u003d new StringBuilder(ui.indentPrint(\"Here are the matching tasks in your list:\"));"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"                for (int i \u003d 0; i \u003c filteredTasks.list.size(); i++) {"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"                    toPrint.append(ui.indentPrint((i + 1) + \".\" + filteredTasks.list.get(i)));"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"                return toPrint.toString();"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"            return (\"Current task is empty in your list.\");"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":57}},{"path":"src/main/java/dukes/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"     * Parses the arguments of the Command and executes it."},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"     * @param tasks   the TaskList of Tasks"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"     * @param ui      The User Interface"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage)  {"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"        return ui.showHelp();"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":21}},{"path":"src/main/java/dukes/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.command;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.Ui;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" * Create a ListCommand. It lists all tasks for users."},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"     * Constructor for \u003ccode\u003eListCommand\u003c/code\u003e."},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    public ListCommand() {"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"     * List all the tasks in the task list that was saved on the disk, and display to user."},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     * @param tasks TaskList to be appended."},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * @param ui UI to interact with user."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @param storage Storage to read and write files and temporary store in hard disk."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     * @throws IndexOutOfBoundsException if there is empty list."},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    public String execute(String input, TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"            int count \u003d tasks.list.size();"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"            if (count \u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"                return (\"OOPS!!! There are no tasks in your list.\");"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"            } else {"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"                StringBuilder toPrint \u003d new StringBuilder(ui.indentPrint(\"     Here are the tasks in your list:\"));"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"                for (int i \u003d 0; i \u003c tasks.list.size(); i++) {"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"                    toPrint.append(ui.indentPrint(\"    \" + (i + 1) + \".\" + tasks.list.get(i)));"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"                return toPrint.toString();"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"            return (\"current task is empty in your list.\");"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":43}},{"path":"src/main/java/dukes/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.exception;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":" * Represents a checked exception."},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":" * A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to an exception that is"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":" * thrown when user inputs are invalid or contain"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":" * the wrong format."},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"public class DukeException extends Exception {"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public DukeException(String message) {"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":14}},{"path":"src/main/java/dukes/exception/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.exception;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":" * Represents a checked exception."},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":" * A \u003ccode\u003eFileNotFoundException\u003c/code\u003e object corresponds to an exception that is thrown where file are invalid or"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":" * have some issues."},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"public class FileNotFoundException extends DukeException {"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    public FileNotFoundException(String message) {"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":12}},{"path":"src/main/java/dukes/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.parser;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.command.Command;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.command.ExitCommand;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import dukes.command.ListCommand;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import dukes.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import dukes.command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import dukes.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import dukes.command.AddCommand;"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"import dukes.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"import dukes.exception.DukeException;"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.ToDo;"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":" * Parser program containing methods that deals with parsing the user command to extract meaningful details from it."},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * Processes the user input and creates the corresponding commands."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"     * @param input Command input by user."},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"     * @return Corresponding command that is input by user."},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"     * @throws DukeException If a new command cannot be created due to invalid input parameters."},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        String action \u003d input.split(\" \")[0].toLowerCase();"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        switch (action) {"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        case \"list\":"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"            return new ListCommand();"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        case \"todo\":"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"            return  new AddCommand(new ToDo(input.substring(5)));"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"        case \"delete\":"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"            return new DeleteCommand(input);"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        case \"done\":"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"            return new DoneCommand(input);"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"        case \"deadline\":"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"            return new DeadlineCommand();"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        case \"event\":"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"            return new EventCommand();"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"        case \"find\":"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"            return new FindCommand(input.substring(5).toLowerCase());"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"        case \"help\":"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"            return new HelpCommand();"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"        case \"bye\":"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"        case \"exit\":"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"            return new ExitCommand();"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"        default:"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":56}},{"path":"src/main/java/dukes/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.storage;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.ToDo;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import dukes.exception.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":" * Represents a storage in the hard disk."},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    private final ArrayList\u003cTask\u003e details \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    public static String filePath \u003d \"data/duke.txt\";"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    public Storage() {"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    public ArrayList\u003cTask\u003e load() throws dukes.exception.FileNotFoundException {"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"            Scanner in \u003d new Scanner(file);"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"            while (in.hasNext()) {"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"                String input \u003d in.nextLine();"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"                String[] strArr \u003d input.split(\" \\\\| \");"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"                Task tasks;"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"                switch (strArr[0]) {"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"                case \"T\":"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"                    tasks \u003d new ToDo(strArr[2]);"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"                    break;"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"                case \"D\":"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"                    tasks \u003d new Deadline(strArr[2], strArr[3]);"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"                    break;"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"                case \"E\":"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"                    tasks \u003d new Event(strArr[2], strArr[3]);"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"                    break;"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"                default:"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"                    throw new FileNotFoundException(\"Previous Tasks are corrupted. \""},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"                                + \"Please resetting your task.\");"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"                if (strArr[1].equals(\"1\")) {"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"                    tasks.markAsDone();"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"                details.add(tasks);"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"            in.close();"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"            System.out.println(\"You have no task.\");"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"            System.out.println(\"Problem occurred while creating a new file in Storage\");"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"            assert (false);"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"        return details;"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"    public void saveTaskFile(ArrayList\u003cTask\u003e task) {"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"            StringBuilder fileDetails \u003d new StringBuilder();"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"            for (Task t : task) {"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"                fileDetails.append(t.toWriteFile()).append(\"\\n\");"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":"            fw.write(fileDetails.toString());"},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"            fw.close();"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":"        } catch (IOException e) {"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"            System.out.println(\"FileWriting got problem\");"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":76}},{"path":"src/main/java/dukes/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.tasks;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":" * deadline task description /by specific date and time  e.g. return book by 12/12/2019 1800."},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":" *"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by  + \")\";"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    public String toWriteFile() {"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"        return \"D | \" + getFileStatusIcon() + \" | \" + description + \" | \" + by;"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":27}},{"path":"src/main/java/dukes/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.tasks;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":" * Represents an event task that start at a specific date and time. eg. event join team /at 12/12/2019 1800."},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"    protected String at;"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    public Event(String description, String at) {"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    public String toWriteFile() {"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"        return \"E | \" + getFileStatusIcon() + \" | \" + description + \" | \" + at;"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":24}},{"path":"src/main/java/dukes/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.tasks;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":" * Represents a Task."},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":" * Parent class of all other types of tasks."},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":" * A Task object corresponds to a task to be added to a \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"     * Constructor for \u003ccode\u003eTask\u003c/code\u003e."},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"     * @param description Description of the task."},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"     * Returns a tick icon if the task is completed and return a X icon if otherwise."},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"     * @return Icon to indicate status of the task."},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"        return (isDone ? \"Y\" : \"X\");"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"    public String getFileStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"     * Sets the task as done."},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"     * @return it will show Y if the task is done."},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"    public Task markAsDone() {"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        this.isDone \u003d true;"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"        return this;"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"     * Get the description of the task."},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"     * @return the description of the task"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"    public String getDescription() {"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"        return this.description;"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"    public String toWriteFile() {"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        return \"T | \" + getFileStatusIcon() + \" | \" + description;"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":63}},{"path":"src/main/java/dukes/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.tasks;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":" * Create a TaskList to store Task objects."},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    public TaskList(ArrayList\u003cTask\u003e load) {"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        for (Task task : load) {"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"            tasks.add(task);"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"            list.add(task);"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":28}},{"path":"src/main/java/dukes/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes.tasks;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":" * Represents a todo task."},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":" * ToDo object corresponds to a type of Task object with a task to be completed."},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":" */"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    public ToDo(String description) {"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    public String toWriteFile() {"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"        return \"T | \" + getFileStatusIcon() + \" | \" + description;"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"linqing42":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukes.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"linqing42":19}},{"path":"src/test/java/dukes/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"        assertEquals(2,2);"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":13}},{"path":"src/test/java/dukes/ParsersTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.command.Command;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import dukes.command.ExitCommand;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import dukes.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"public class ParsersTest {"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"    public void parseExit() {"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"        Parser exit \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"        Command command;"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"            command \u003d Parser.parse(\"exit\");"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"            assertTrue(command instanceof ExitCommand);"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"        } catch (Exception e) {"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"            fail(\"Should not shown thrown Exception.\");"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    public void parseBye() {"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"        Parser bye \u003d new Parser();"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        Command command;"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"            command \u003d Parser.parse(\"bye\");"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"            assertTrue(command instanceof ExitCommand);"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        } catch (Exception e) {"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"            fail(\"Should not shown thrown Exception.\");"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"}"}],"authorContributionMap":{"linqing42":36}},{"path":"src/test/java/dukes/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package dukes;"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import dukes.tasks.ToDo;"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"public class TodoTest {"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public void toDo() {"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        ToDo todo \u003d new ToDo(\"return book\");"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"        assertEquals(\"[T][X] return book\", todo.toString());"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"        assertEquals(\"T | 0 | return book\", todo.toWriteFile());"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"}"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":""}],"authorContributionMap":{"linqing42":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"list"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"bye"}],"authorContributionMap":{"linqing42":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"javac  -cp ..\\src\\main\\java\\dukes -Xlint:none -d ..\\bin ..\\src\\main\\java\\dukes\\Duke.java"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"linqing42":3,"-":20}}]
