[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"ZhengShijieNUS":2,"-":24}},{"path":"Test/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"class ParserTest {"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdTodo\u003d\"todo read book\";"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdDeadline\u003d\"deadline watch movie /by 2020-09-14\";"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdEvent\u003d\"event meeting with John /at 2020-09-20\";"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdList \u003d \"list\";"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdDelete \u003d \"delete 1\";"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdDone \u003d \"done 1\";"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    String cmdUnknown \u003d \"what is this?\";"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    void getCommand() {"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command todo \u003d new TodoCommand(\"read book\");"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command deadline \u003d new DeadlineCommand(\"watch movie\",\"2020-09-14\");"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command event \u003d new EventCommand(\"meeting with John\",\"2020-09-20\");"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command list \u003d new ListCommand();"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command delete \u003d new DeleteCommand(\"1\");"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command done \u003d new DoneCommand(\"1\");"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command unknown \u003d new OtherCommand(\"what\");"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(todo.getCMDType(), Parser.getCommand(cmdTodo).getCMDType());"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(deadline.getCMDType(),Parser.getCommand(cmdDeadline).getCMDType());"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(event.getCMDType(),Parser.getCommand(cmdEvent).getCMDType());"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(list.getCMDType(),Parser.getCommand(cmdList).getCMDType());"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(delete.getCMDType(),Parser.getCommand(cmdDelete).getCMDType());"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(done.getCMDType(),Parser.getCommand(cmdDone).getCMDType());"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(unknown.getCMDType(),Parser.getCommand(cmdUnknown).getCMDType());"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(todo.getCMDContent(), Parser.getCommand(cmdTodo).getCMDContent());"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(deadline.getCMDContent(),Parser.getCommand(cmdDeadline).getCMDContent());"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(event.getCMDContent(),Parser.getCommand(cmdEvent).getCMDContent());"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(delete.getCMDContent(),Parser.getCommand(cmdDelete).getCMDContent());"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"            assertEquals(done.getCMDContent(),Parser.getCommand(cmdDone).getCMDContent());"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"        }catch(Exception e){"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"            e.getMessage();"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":47}},{"path":"Test/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Deadlines;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Events;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.ToDos;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"class TaskListTest {"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    ToDos todo1 \u003d new ToDos(\"read book\");"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    ToDos todo2 \u003d new ToDos(\"read two book\");"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    Deadlines deadline1 \u003d new Deadlines(\"watch movies\", \"2020-09-14\");"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    Events event1 \u003d new Events(\"book a room\", \"2020-09-15\");"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    void findKeywordList() {"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"        ArrayList\u003cTask\u003e a \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"        TaskList original \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"        String keyword \u003d \"book\";"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        a.add(todo1);"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"        a.add(todo2);"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"        a.add(event1);"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"        original.add(todo1);"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"        original.add(todo2);"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"        original.add(deadline1);"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"        original.add(event1);"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"        assertEquals(a, original.findKeywordList(keyword));"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":38}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"}"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"group \u0027org.example\u0027"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"version \u00271.0\u0027"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"repositories {"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    mavenCentral()"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"}"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"dependencies {"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    testCompile group: \u0027junit\u0027, name: \u0027junit\u0027, version: \u00274.12\u0027"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"    //JavaFX dependencies"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"}"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"checkstyle {"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"}"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"application {"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"}"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"shadowJar {"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"    archiveClassifier \u003d null"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":50}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"T|1|read a book|# this is test /div/"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":"T|0|watch a movie"},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"T|0|read  more books"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"T|0|watch more movies"}],"authorContributionMap":{"ZhengShijieNUS":4}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"## Overall Look"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"![Image of OverallLookDiagram](https://github.com/ZhengShijieNUS/ip/blob/master/docs/Ui.png?raw\u003dtrue)"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"## Design"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"### Architechture"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"The Architecture Diagram given below is a quick overview of each component."},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"![Image of ArchitectureDiagram](https://github.com/ZhengShijieNUS/ip/blob/master/docs/architectureDiagram.png?raw\u003dtrue)"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"The rest of the App consists of few components."},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"GUI: The UI of the App."},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"Duke: The main logic handler of the App."},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"Command: The control commands accepted by the App."},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"Storage: Reads data from, and writes data to, the hard disk."},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"Parser: Parse the input and convert the format which could be accepted by the app."},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"TaskList: Define the structure of each tasks."},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"### GUI component"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"The GUI componenet is the handler of the user input and output result to the user. It includes MainWindow Class which will deal with user input, "},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"and DialogBox Class which will handle the conversation between user and app. "},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"Both MainWindow and DialogBox are initialized by the Launcher. "},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"### Duke component"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"The Duke component includes logic handle command execution. It is used to provide an organised output and passed it to the GUI component."},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"Duke initializes the Storage and the Tasklist.  "},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"### Storage Component"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"The Storage component loads a list of tasks from a text file when the program starts up. It makes use of the Parser class to create a task object from a String."},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"It also saves tasks to file upon program exit. It saves to format that is readable by the Parser class."},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"### TaskList component"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"The TaskList component is the container to save the data of tasks during execution of program. It consist an ArrayList to store all the tasks. "},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"The Task class is the class of tasks as what we defined. It contains the task name, status, type, tags and description."},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"The TaskList component:"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to interact with Storage component and load existing tasks"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to add new Todo/Deadline/Event tasks and store it in the instance of Task class"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to delete existing tasks that stored in the instance of TaskList class"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to get tasks that stored in the instance of TaskList class"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to get the whole TaskList itself "},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to set/get all details of any specified task"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to add a tag to an existing task"},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"* Able to find a task by its keyword"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"### Command component and Parser component"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":"The Command component are those classes used by the parser class."},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"The parser class is mainly in charge of parse user\u0027s input command and convert them to a workable format to the program.  "},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"## Implementation"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"Tag Implementation"},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"The ```tag``` feature gives a tag to an existing task. It is facilitated by the Tag Class and inherited by Task Class which comprises of the following implementation:"},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"1. ```tag \u003cindex\u003e /t #content``` - give a tag content by the task index"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"### Value proposition"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":"Manage tasks faster and allows the user to better manage the tasks."},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"## User Stories"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":" "},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":"|Priority| As a … | I want to … | So that I can… |"},{"lineNumber":85,"author":{"gitId":"ZhengShijieNUS"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":86,"author":{"gitId":"ZhengShijieNUS"},"content":"|* * * |New user|add tasks into the system|track my tasks|"},{"lineNumber":87,"author":{"gitId":"ZhengShijieNUS"},"content":"|* * * |New user|view an task that is based on the id|see its content.|"},{"lineNumber":88,"author":{"gitId":"ZhengShijieNUS"},"content":"|* * * |New user|delete a task|remove tasks that are completed or no longer required|"},{"lineNumber":89,"author":{"gitId":"ZhengShijieNUS"},"content":"|* * * |New user|list all tasks currently in the task list|find all of the recorded tasks currently in the list.|"},{"lineNumber":90,"author":{"gitId":"ZhengShijieNUS"},"content":"|* * |New user|I would like a given creating task format|so that I can know a structured way of using the app|"},{"lineNumber":91,"author":{"gitId":"ZhengShijieNUS"},"content":"|...|...|...|...|"},{"lineNumber":92,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":93,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":94,"author":{"gitId":"ZhengShijieNUS"},"content":"## Non-Functional Requirements"},{"lineNumber":95,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":96,"author":{"gitId":"ZhengShijieNUS"},"content":"* Should work on any mainstream OS as long as it has Java 11 or above installed."},{"lineNumber":97,"author":{"gitId":"ZhengShijieNUS"},"content":"* Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage."},{"lineNumber":98,"author":{"gitId":"ZhengShijieNUS"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse"},{"lineNumber":99,"author":{"gitId":"ZhengShijieNUS"},"content":"* Should load from and save to from a text files"},{"lineNumber":100,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":101,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":102,"author":{"gitId":"ZhengShijieNUS"},"content":"## Glossary"},{"lineNumber":103,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":104,"author":{"gitId":"ZhengShijieNUS"},"content":"* *Mainstream OS:* Windows, Linux, Unix, OS-X."},{"lineNumber":105,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":106,"author":{"gitId":"ZhengShijieNUS"},"content":"## Instructions for manual testing"},{"lineNumber":107,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":108,"author":{"gitId":"ZhengShijieNUS"},"content":"### Launch and Shutdown"},{"lineNumber":109,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":110,"author":{"gitId":"ZhengShijieNUS"},"content":"1. Initial launch"},{"lineNumber":111,"author":{"gitId":"ZhengShijieNUS"},"content":"    1. Download the jar file and copy into an empty folder"},{"lineNumber":112,"author":{"gitId":"ZhengShijieNUS"},"content":"    2. Use Command Prompt to run jar file with `java -jar` command."},{"lineNumber":113,"author":{"gitId":"ZhengShijieNUS"},"content":"    3. type bye command to exit from the program."},{"lineNumber":114,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":115,"author":{"gitId":"ZhengShijieNUS"},"content":"2. Re-launch the app by running `java -jar` command with Command Prompt."},{"lineNumber":116,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":117,"author":{"gitId":"ZhengShijieNUS"},"content":"### Adding a todo/deadline/event task"},{"lineNumber":118,"author":{"gitId":"ZhengShijieNUS"},"content":"1. Add the task through following command:"},{"lineNumber":119,"author":{"gitId":"ZhengShijieNUS"},"content":"    1. ```todo \u003cCONTENT\u003e```"},{"lineNumber":120,"author":{"gitId":"ZhengShijieNUS"},"content":"    2. ```deadline \u003cCONTENT\u003e /by \u003cDEADLINE in dd-mm-yyyy format\u003e```"},{"lineNumber":121,"author":{"gitId":"ZhengShijieNUS"},"content":"    3. ```event \u003cCONTENT\u003e /at \u003cDEADLINE in dd-mm-yyyy format\u003e```"},{"lineNumber":122,"author":{"gitId":"ZhengShijieNUS"},"content":" "},{"lineNumber":123,"author":{"gitId":"ZhengShijieNUS"},"content":"### tag a task"},{"lineNumber":124,"author":{"gitId":"ZhengShijieNUS"},"content":"1. Tag the task through following command:"},{"lineNumber":125,"author":{"gitId":"ZhengShijieNUS"},"content":"    1. ```tag \u003cINDEX\u003e /t \u003cCONTENT\u003e```"},{"lineNumber":126,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":127,"author":{"gitId":"ZhengShijieNUS"},"content":"### Listing all tasks in the system"},{"lineNumber":128,"author":{"gitId":"ZhengShijieNUS"},"content":"1. Enter the command"},{"lineNumber":129,"author":{"gitId":"ZhengShijieNUS"},"content":"    1. ```list```"},{"lineNumber":130,"author":{"gitId":"ZhengShijieNUS"},"content":"2. List of all tasks in the system will be listed in the order they were created."},{"lineNumber":131,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":132,"author":{"gitId":"ZhengShijieNUS"},"content":"### Find a particular task in the system"},{"lineNumber":133,"author":{"gitId":"ZhengShijieNUS"},"content":"1. Enter the command"},{"lineNumber":134,"author":{"gitId":"ZhengShijieNUS"},"content":"    1. ```find \u003cKEYWORD\u003e```"},{"lineNumber":135,"author":{"gitId":"ZhengShijieNUS"},"content":"2. The tasks with the specified keyword will be shown on screen in details."},{"lineNumber":136,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":137,"author":{"gitId":"ZhengShijieNUS"},"content":"### Delete a particular task in the system"},{"lineNumber":138,"author":{"gitId":"ZhengShijieNUS"},"content":"1. Enter the command"},{"lineNumber":139,"author":{"gitId":"ZhengShijieNUS"},"content":"    1. ```Delete \u003cINDEX\u003e```. Eg:delete 1"},{"lineNumber":140,"author":{"gitId":"ZhengShijieNUS"},"content":"2. The second Defect will be deleted."},{"lineNumber":141,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":142,"author":{"gitId":"ZhengShijieNUS"},"content":""}],"authorContributionMap":{"ZhengShijieNUS":142}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"# Duke Task Management System"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"Duke Task Manament System is a task management system with friendly GUI that allows user to perform a tasks management work by applying few certain commands."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"Useful links:"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"* [Developer Guide](DeveloperGuide.md)"}],"authorContributionMap":{"ZhengShijieNUS":5,"-":2}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"The duke applet is a task management applet. It supports the following features"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"_To **add a Todo task**. A Todo task is a basic type of task which is without time restriction._ "},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 2 "},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"_To **add a Deadline task**. A Deadline task is the task with a expiration date._"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 3 "},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"_To **add a Event task**. A Event task is the task with a specific time that the event occurs._"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 4 "},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"_**List down** all task exist._"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 5 "},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"_**Set task** status to be **done**._"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 6 "},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"_**Delete a task** from the list._"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 7 "},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"_**Find specific tasks** with **keyword** entered._"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 8 "},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"_**Auto saving** and **Auto loading** existing task file._"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 9 "},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"_**Add multiple tags** to a single task._"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"### Feature 10 "},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"_Supporting friendly **GUI**._"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"### `todo \u003csomething\u003e` - add a todo task in the list"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will add a todo task in the list with specific content"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"todo read a book"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"[T][✗] read a book"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"Now you have 1 tasks in the list."},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"### `deadline \u003csomething\u003e /by \u003csometime\u003e` - add a deadline task in the list"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will add a deadline task in the list with specific content and deadline time. The time is supposed to be in format \"yyyy-MM-dd\"."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":"deadline read a book /by 2019-09-20"},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"[D][✗] read a book (by: Sep 20 2019)"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":"Now you have 2 tasks in the list."},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"### `event \u003csomething\u003e /at \u003csometime\u003e` - add a event task in the list"},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will add a event task in the list with specific content and occuring time. The time is supposed to be in format \"yyyy-MM-dd\"."},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"event read a book /at 2019-09-20"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":"[E][✗] read a book (at: Sep 20 2019)"},{"lineNumber":85,"author":{"gitId":"ZhengShijieNUS"},"content":"Now you have 3 tasks in the list."},{"lineNumber":86,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":87,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":88,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":89,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":90,"author":{"gitId":"ZhengShijieNUS"},"content":"### `list` - list down all tasks in the list"},{"lineNumber":91,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":92,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will list down all tasks in the list."},{"lineNumber":93,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":94,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":95,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":96,"author":{"gitId":"ZhengShijieNUS"},"content":"list"},{"lineNumber":97,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":98,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":99,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":100,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":101,"author":{"gitId":"ZhengShijieNUS"},"content":"Here are the tasks in your list:"},{"lineNumber":102,"author":{"gitId":"ZhengShijieNUS"},"content":"1.[T][✗] read a book"},{"lineNumber":103,"author":{"gitId":"ZhengShijieNUS"},"content":"2.[D][✗] read a book (by: Sep 20 2019)"},{"lineNumber":104,"author":{"gitId":"ZhengShijieNUS"},"content":"3.[E][✗] read a book (at: Sep 20 2019)"},{"lineNumber":105,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":106,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":107,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":108,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":109,"author":{"gitId":"ZhengShijieNUS"},"content":"### `done \u003cindex\u003e` - set the status of the specific task to be done. "},{"lineNumber":110,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":111,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will set the task to be done."},{"lineNumber":112,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":113,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":115,"author":{"gitId":"ZhengShijieNUS"},"content":"done 2"},{"lineNumber":116,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":117,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":118,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":119,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":120,"author":{"gitId":"ZhengShijieNUS"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":121,"author":{"gitId":"ZhengShijieNUS"},"content":"[D][✓] read a book (by: Sep 20 2019)"},{"lineNumber":122,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":123,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":124,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":125,"author":{"gitId":"ZhengShijieNUS"},"content":"### `delete \u003cindex\u003e` - delete the task with the specific index. "},{"lineNumber":126,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":127,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will delete the task with the specific index in the list."},{"lineNumber":128,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":129,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":130,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":131,"author":{"gitId":"ZhengShijieNUS"},"content":"delete 2"},{"lineNumber":132,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":133,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":134,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":136,"author":{"gitId":"ZhengShijieNUS"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":137,"author":{"gitId":"ZhengShijieNUS"},"content":"[D][✓] read a book (by: Sep 20 2019)"},{"lineNumber":138,"author":{"gitId":"ZhengShijieNUS"},"content":"Now you have 2 tasks in the list."},{"lineNumber":139,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":140,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":141,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":142,"author":{"gitId":"ZhengShijieNUS"},"content":"### `find \u003csomething\u003e` - find the tasks with the keyword. "},{"lineNumber":143,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":144,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will find all the tasks with the keyword specified in the list."},{"lineNumber":145,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":146,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":147,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":148,"author":{"gitId":"ZhengShijieNUS"},"content":"find book"},{"lineNumber":149,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":150,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":151,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":152,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":153,"author":{"gitId":"ZhengShijieNUS"},"content":"Here are the matching tasks in your list:"},{"lineNumber":154,"author":{"gitId":"ZhengShijieNUS"},"content":"1.[T][✗] read a book"},{"lineNumber":155,"author":{"gitId":"ZhengShijieNUS"},"content":"2.[E][✗] read a book (at: Sep 20 2019)"},{"lineNumber":156,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":157,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":158,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":159,"author":{"gitId":"ZhengShijieNUS"},"content":"### `tag \u003cindex\u003e /t \u003ctag content\u003e` - add a tag to the task at the index. "},{"lineNumber":160,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":161,"author":{"gitId":"ZhengShijieNUS"},"content":"This command will allow user to add a tag to a single task in the list."},{"lineNumber":162,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":163,"author":{"gitId":"ZhengShijieNUS"},"content":"Example of usage: "},{"lineNumber":164,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":165,"author":{"gitId":"ZhengShijieNUS"},"content":"tag 1 /t testing tag"},{"lineNumber":166,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":167,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":168,"author":{"gitId":"ZhengShijieNUS"},"content":"Expected outcome:"},{"lineNumber":169,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":170,"author":{"gitId":"ZhengShijieNUS"},"content":"Adding tag testing tag to task 1"},{"lineNumber":171,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":172,"author":{"gitId":"ZhengShijieNUS"},"content":"If `list`:"},{"lineNumber":173,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":174,"author":{"gitId":"ZhengShijieNUS"},"content":"Here are the matching tasks in your list:"},{"lineNumber":175,"author":{"gitId":"ZhengShijieNUS"},"content":"1.[T][✗] read a book"},{"lineNumber":176,"author":{"gitId":"ZhengShijieNUS"},"content":"# testing tag"},{"lineNumber":177,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":178,"author":{"gitId":"ZhengShijieNUS"},"content":"2.[E][✗] read a book (at: Sep 20 2019)"},{"lineNumber":179,"author":{"gitId":"ZhengShijieNUS"},"content":"```"},{"lineNumber":180,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":181,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":182,"author":{"gitId":"ZhengShijieNUS"},"content":"## Acknowledgements"},{"lineNumber":183,"author":{"gitId":"ZhengShijieNUS"},"content":"### 3rd party Libraries"},{"lineNumber":184,"author":{"gitId":"ZhengShijieNUS"},"content":"* JavaFx: For graphics used for GUI"},{"lineNumber":185,"author":{"gitId":"ZhengShijieNUS"},"content":""}],"authorContributionMap":{"ZhengShijieNUS":172,"-":13}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem ##########################################################################"},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem ##########################################################################"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Find java.exe"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"echo."},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"echo."},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"echo location of your Java installation."},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"goto fail"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":":findJavaFromJavaHome"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"echo."},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"echo location of your Java installation."},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"goto fail"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":":init"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":":win9xME_args"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Slurp the command line arguments."},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"set _SKIP\u003d2"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":":win9xME_args_slurp"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":":execute"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Setup the command line"},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem Execute Gradle"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":":end"},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":":fail"},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"exit /b 1"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":":mainEnd"},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":":omega"}],"authorContributionMap":{"ZhengShijieNUS":84}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"rootProject.name \u003d \u0027Duke\u0027"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""}],"authorContributionMap":{"ZhengShijieNUS":2}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":" */"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.OtherCommand;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.TagCommand;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Deadlines;"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Events;"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Task;"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.ToDos;"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"    static final String HELLO \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"    static final String BYE \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"    static final String path \u003d \"/data/duke.txt\";"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Ui ui;"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Storage storage;"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"    private TaskList tasks;"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"     * constructor"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Duke() {"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.storage \u003d new Storage(path);"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"    String loadFile() {"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"            storage.load(tasks);"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"            return \"Load data successfully.\";"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"            return \"Load data fails. Reason: \" + e.getMessage();"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static String processCommand(Command cmd, TaskList tasks, Ui ui) {"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"        StringBuffer s \u003d new StringBuffer();"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"        switch (cmd.getCmdType()) {"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"list\":"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"            s.append(\"Here are the tasks in your list:\" + System.lineSeparator());"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"            listTasks(tasks, s);"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"            return s.toString();"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"find\":"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"            s.append(\"Here are the matching tasks in your list:\" + System.lineSeparator());"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"            findKeywordTasks(tasks, cmd, s);"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":"            return s.toString();"},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"done\":"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":"            setTaskDone(tasks, cmd, s);"},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"            return s.toString();"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"delete\":"},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":"            deleteTask(tasks, cmd, s);"},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":"            return s.toString();"},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"tag\":"},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"            tagTask(tasks, cmd, s);"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":"            return s.toString();"},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"todo\":"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":"            Task t \u003d addTodoTask(tasks, cmd);"},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"            return ui.printTask(t, tasks);"},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"deadline\":"},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"            Task d \u003d addDeadlineTask(tasks, cmd);"},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":"            return ui.printTask(d, tasks);"},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"event\":"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":"            Task e \u003d addEventTask(tasks, cmd);"},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"            return ui.printTask(e, tasks);"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"        default:"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":"            return \"Nothing done bro.\";"},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static Task addEventTask(TaskList tasks, Command cmd) {"},{"lineNumber":85,"author":{"gitId":"ZhengShijieNUS"},"content":"        Events e \u003d new Events(cmd.getCmdContent(), ((EventCommand) cmd).getTime());"},{"lineNumber":86,"author":{"gitId":"ZhengShijieNUS"},"content":"        tasks.add(e);"},{"lineNumber":87,"author":{"gitId":"ZhengShijieNUS"},"content":"        return e;"},{"lineNumber":88,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":90,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static Task addDeadlineTask(TaskList tasks, Command cmd) {"},{"lineNumber":91,"author":{"gitId":"ZhengShijieNUS"},"content":"        Deadlines d \u003d new Deadlines(cmd.getCmdContent(), ((DeadlineCommand) cmd).getTime());"},{"lineNumber":92,"author":{"gitId":"ZhengShijieNUS"},"content":"        tasks.add(d);"},{"lineNumber":93,"author":{"gitId":"ZhengShijieNUS"},"content":"        return d;"},{"lineNumber":94,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":96,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static Task addTodoTask(TaskList tasks, Command cmd) {"},{"lineNumber":97,"author":{"gitId":"ZhengShijieNUS"},"content":"        ToDos t \u003d new ToDos(cmd.getCmdContent());"},{"lineNumber":98,"author":{"gitId":"ZhengShijieNUS"},"content":"        tasks.add(t);"},{"lineNumber":99,"author":{"gitId":"ZhengShijieNUS"},"content":"        return t;"},{"lineNumber":100,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":102,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static void tagTask(TaskList tasks, Command cmd, StringBuffer s) {"},{"lineNumber":103,"author":{"gitId":"ZhengShijieNUS"},"content":"        int index \u003d ((TagCommand) cmd).getIndex();"},{"lineNumber":104,"author":{"gitId":"ZhengShijieNUS"},"content":"        tasks.get(index - 1).addTag(cmd.getCmdContent());"},{"lineNumber":105,"author":{"gitId":"ZhengShijieNUS"},"content":"        s.append(\"Adding tag \" + cmd.getCmdContent() + \" to task: \" + index + System.lineSeparator());"},{"lineNumber":106,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":108,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static void deleteTask(TaskList tasks, Command cmd, StringBuffer s) {"},{"lineNumber":109,"author":{"gitId":"ZhengShijieNUS"},"content":"        int index \u003d ((DeleteCommand) cmd).getIndex();"},{"lineNumber":110,"author":{"gitId":"ZhengShijieNUS"},"content":"        s.append(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator());"},{"lineNumber":111,"author":{"gitId":"ZhengShijieNUS"},"content":"        s.append(tasks.get(index - 1).toString() + System.lineSeparator());"},{"lineNumber":112,"author":{"gitId":"ZhengShijieNUS"},"content":"        tasks.remove(index - 1);"},{"lineNumber":113,"author":{"gitId":"ZhengShijieNUS"},"content":"        s.append(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":114,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":116,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static void setTaskDone(TaskList tasks, Command cmd, StringBuffer s) {"},{"lineNumber":117,"author":{"gitId":"ZhengShijieNUS"},"content":"        int index \u003d ((DoneCommand) cmd).getIndex();"},{"lineNumber":118,"author":{"gitId":"ZhengShijieNUS"},"content":"        tasks.get(index - 1).setDone(true);"},{"lineNumber":119,"author":{"gitId":"ZhengShijieNUS"},"content":"        s.append(\"Nice! I\u0027ve marked this task as done: \" + System.lineSeparator());"},{"lineNumber":120,"author":{"gitId":"ZhengShijieNUS"},"content":"        s.append(tasks.get(index - 1).toString() + System.lineSeparator());"},{"lineNumber":121,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":123,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static void findKeywordTasks(TaskList tasks, Command cmd, StringBuffer s) {"},{"lineNumber":124,"author":{"gitId":"ZhengShijieNUS"},"content":"        int i \u003d 1;"},{"lineNumber":125,"author":{"gitId":"ZhengShijieNUS"},"content":"        for (Task t : tasks.findKeywordList(cmd.getCmdContent())) {"},{"lineNumber":126,"author":{"gitId":"ZhengShijieNUS"},"content":"            s.append(i + \".\" + t.toString() + System.lineSeparator());"},{"lineNumber":127,"author":{"gitId":"ZhengShijieNUS"},"content":"            i++;"},{"lineNumber":128,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":131,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static void listTasks(TaskList tasks, StringBuffer s) {"},{"lineNumber":132,"author":{"gitId":"ZhengShijieNUS"},"content":"        int i \u003d 1;"},{"lineNumber":133,"author":{"gitId":"ZhengShijieNUS"},"content":"        for (Task t : tasks.getWholeList()) {"},{"lineNumber":134,"author":{"gitId":"ZhengShijieNUS"},"content":"            s.append(i + \".\" + t.toString() + System.lineSeparator());"},{"lineNumber":135,"author":{"gitId":"ZhengShijieNUS"},"content":"            i++;"},{"lineNumber":136,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":139,"author":{"gitId":"ZhengShijieNUS"},"content":"    /*"},{"lineNumber":140,"author":{"gitId":"ZhengShijieNUS"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":141,"author":{"gitId":"ZhengShijieNUS"},"content":"     * Replace this stub with your completed method."},{"lineNumber":142,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":144,"author":{"gitId":"ZhengShijieNUS"},"content":"    String getResponse(String input) {"},{"lineNumber":145,"author":{"gitId":"ZhengShijieNUS"},"content":"        Command cmd \u003d null;"},{"lineNumber":146,"author":{"gitId":"ZhengShijieNUS"},"content":"        String result \u003d null;"},{"lineNumber":147,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":148,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":149,"author":{"gitId":"ZhengShijieNUS"},"content":"            cmd \u003d Parser.getCommand(input);"},{"lineNumber":150,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (DukeException e) {"},{"lineNumber":151,"author":{"gitId":"ZhengShijieNUS"},"content":"            return e.getMessage();"},{"lineNumber":152,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (Exception e) {"},{"lineNumber":153,"author":{"gitId":"ZhengShijieNUS"},"content":"            return \"\\u2639 OOPS!!! Unknown internal error occurs.\";"},{"lineNumber":154,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":156,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (cmd instanceof OtherCommand \u0026\u0026 cmd.getCmdType().equalsIgnoreCase(\"bye\")) {"},{"lineNumber":157,"author":{"gitId":"ZhengShijieNUS"},"content":"            return BYE;"},{"lineNumber":158,"author":{"gitId":"ZhengShijieNUS"},"content":"        } else if (cmd instanceof OtherCommand) {"},{"lineNumber":159,"author":{"gitId":"ZhengShijieNUS"},"content":"            return new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\").getMessage();"},{"lineNumber":160,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":162,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":163,"author":{"gitId":"ZhengShijieNUS"},"content":"            result \u003d processCommand(cmd, tasks, ui);"},{"lineNumber":164,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (Exception e) {"},{"lineNumber":165,"author":{"gitId":"ZhengShijieNUS"},"content":"            result \u003d new DukeException(\"\\u2639 OOPS!!! Unknown error occurs when process command.\").getMessage();"},{"lineNumber":166,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":168,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"ZhengShijieNUS"},"content":"            storage.save(tasks);"},{"lineNumber":170,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (IOException e) {"},{"lineNumber":171,"author":{"gitId":"ZhengShijieNUS"},"content":"            return \"\\u2639 OOPS!!!Updating file is fail.\";"},{"lineNumber":172,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":174,"author":{"gitId":"ZhengShijieNUS"},"content":"        return result;"},{"lineNumber":175,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":176,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":174,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":9}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"            duke.loadFile();"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"            stage.setTitle(\"Duke_Zheng Shijie\");"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":" */"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"     * Initialize the required parameters by MainWindow"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"        introMessage();"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"     * Prints the intro message."},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"    private void introMessage() {"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"                DialogBox.getDukeDialog(\"Welcome!\", dukeImage)"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"        );"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"    private void handleUserInput() {"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (response.equalsIgnoreCase(Duke.BYE)) {"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":"            Platform.exit();"},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"        userInput.clear();"},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"    @FXML"},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":"    private void loadStoragedFile() {"},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"        String response \u003d duke.loadFile();"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"        );"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":"        userInput.clear();"},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":82}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.EventCommand;"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.OtherCommand;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.TagCommand;"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.command.TodoCommand;"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static String[] commandSplit(String s, String splitBy) {"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"        return s.split(splitBy);"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"    public static Command getCommand(String userInput) throws DukeException {"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"        String[] cmd \u003d Parser.commandSplit(userInput, \"\\\\s+\");"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        switch(cmd[0]) {"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"list\":"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"            return new ListCommand();"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"done\":"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"                return new DoneCommand(userInput.split(\" \")[1]);"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The task does not exist.\");"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Please specify the task need to be done.\");"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"delete\":"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"                return new DeleteCommand(userInput.split(\" \")[1]);"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The task does not exist.\");"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Please specify the number of the task need to be delete.\");"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"todo\":"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"                return new TodoCommand(userInput.substring(5));"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"deadline\":"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"                String deadlineSpliter \u003d \"/by\";"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"                String[] deadlineContent \u003d userInput.split(deadlineSpliter);"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"                LocalDate.parse(deadlineContent[1].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"                return new DeadlineCommand("},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"                        deadlineContent[0].substring(9, deadlineContent[0].length() - 1),"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"                        deadlineContent[1].trim());"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The keyword /by is missing.\");"},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (java.time.format.DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The time format is \""},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":"                        + \"illegal.Format should be in \\\"yyyy-MM-dd\\\" \");"},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"event\":"},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"            try {"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":"                String eventSpliter \u003d \"/at\";"},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"                String[] eventContent \u003d userInput.split(eventSpliter);"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":"                LocalDate.parse(eventContent[1].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"                return new EventCommand("},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":"                        eventContent[0].substring(6, eventContent[0].length() - 1),"},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"                        eventContent[1].trim());"},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The keyword /at is missing.\");"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (java.time.format.DateTimeParseException e) {"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The time format is illegal.Format should be in \\\"yyyy-MM-dd\\\"\");"},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"find\":"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":"            return new FindCommand(userInput.substring(5));"},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":"        case \"tag\":"},{"lineNumber":85,"author":{"gitId":"ZhengShijieNUS"},"content":"            //valid command format: tag 1 /t xxxxxxx"},{"lineNumber":86,"author":{"gitId":"ZhengShijieNUS"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"ZhengShijieNUS"},"content":"                String tagSpliter \u003d \"/t\";"},{"lineNumber":88,"author":{"gitId":"ZhengShijieNUS"},"content":"                String[] tagCommandContent \u003d userInput.split(tagSpliter);"},{"lineNumber":89,"author":{"gitId":"ZhengShijieNUS"},"content":"                int index \u003d Integer.parseInt(tagCommandContent[0].split(\" \")[1]);"},{"lineNumber":90,"author":{"gitId":"ZhengShijieNUS"},"content":"                return new TagCommand(index, tagCommandContent[1]);"},{"lineNumber":91,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":92,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The description of the tag cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":94,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! The keyword /t is missing.\");"},{"lineNumber":95,"author":{"gitId":"ZhengShijieNUS"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":96,"author":{"gitId":"ZhengShijieNUS"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Please specify the number of the task need to be tagged.\");"},{"lineNumber":97,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"ZhengShijieNUS"},"content":"        default:"},{"lineNumber":99,"author":{"gitId":"ZhengShijieNUS"},"content":"            return new OtherCommand(cmd[0]);"},{"lineNumber":100,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":103,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":103}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.Iterator;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Deadlines;"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Events;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Tag;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Task;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.ToDos;"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    static final String CURRENTWORKINGDIR \u003d System.getProperty(\"user.dir\");"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    private String path;"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"    private File f;"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param path constructor for storage class"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Storage(String path) {"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.path \u003d CURRENTWORKINGDIR + path;"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.f \u003d new File(this.path);"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param tasks the current stored task list"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @throws IOException any exception related to IO"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @throws DukeException any defined exception"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void load(TaskList tasks) throws IOException, DukeException {"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (f.exists()) {"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"            while (s.hasNext()) {"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"                String[] contents \u003d line.split(\"\\\\|\");"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"                String taskDate \u003d \"unknown date\";"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"                String taskType \u003d contents[0];"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"                String[] tags \u003d null;"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"                boolean taskDoneStatus \u003d checkDoneStatus(contents[1]);"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"                String taskDescription \u003d contents[2];"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"                if (contents.length \u003d\u003d 4) {"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"                    if (contents[3].contains(Tag.getTagDiv())) {"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"                        tags \u003d contents[3].split(Tag.getTagDiv());"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"                    } else {"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"                        taskDate \u003d contents[3];"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"                } else if (contents.length \u003d\u003d 5) {"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"                    taskDate \u003d contents[3];"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"                    tags \u003d contents[4].split(Tag.getTagDiv());"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"                try {"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"                    switch (taskType) {"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":"                    case \"T\":"},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"                        Task t \u003d createToDos(taskDescription, taskDoneStatus);"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":"                        if (tags !\u003d null) {"},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"                            addTags(t, tags);"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":"                        }"},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":"                        tasks.add(t);"},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":"                        break;"},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"                    case \"D\":"},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"                        Task d \u003d createDeadlines(taskDescription, taskDate, taskDoneStatus);"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":"                        if (tags !\u003d null) {"},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"                            addTags(d, tags);"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"                        tasks.add(d);"},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":"                        break;"},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"                    case \"E\":"},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":"                        Task e \u003d createEvents(taskDescription, taskDate, taskDoneStatus);"},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"                        if (tags !\u003d null) {"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":"                            addTags(e, tags);"},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"                        tasks.add(e);"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":"                        break;"},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":"                    default:"},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"                        throw new DukeException(\"\\u2639 OOPS!!!There\u0027s unknown tasks type in the file.\");"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":"                    }"},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":"                } catch (Exception e) {"},{"lineNumber":85,"author":{"gitId":"ZhengShijieNUS"},"content":"                    throw new DukeException(\"\\u2639 OOPS!!!There is error in the file,please check the format.\");"},{"lineNumber":86,"author":{"gitId":"ZhengShijieNUS"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"ZhengShijieNUS"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"ZhengShijieNUS"},"content":"            createDukeTxt(path);"},{"lineNumber":90,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":93,"author":{"gitId":"ZhengShijieNUS"},"content":"    private void addTags(Task t, String[] tags) {"},{"lineNumber":94,"author":{"gitId":"ZhengShijieNUS"},"content":"        for (String tag : tags) {"},{"lineNumber":95,"author":{"gitId":"ZhengShijieNUS"},"content":"            t.addTag(tag);"},{"lineNumber":96,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":99,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param tasks the current task list"},{"lineNumber":101,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @throws IOException any exception related to IO"},{"lineNumber":102,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void save(TaskList tasks) throws IOException {"},{"lineNumber":104,"author":{"gitId":"ZhengShijieNUS"},"content":"        FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":105,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":106,"author":{"gitId":"ZhengShijieNUS"},"content":"        Iterator\u003cTask\u003e i \u003d tasks.iterator();"},{"lineNumber":107,"author":{"gitId":"ZhengShijieNUS"},"content":"        while (i.hasNext()) {"},{"lineNumber":108,"author":{"gitId":"ZhengShijieNUS"},"content":"            Task t \u003d i.next();"},{"lineNumber":109,"author":{"gitId":"ZhengShijieNUS"},"content":"            if (t.existTags()) {"},{"lineNumber":110,"author":{"gitId":"ZhengShijieNUS"},"content":"                fw.write(t.toSavingStringWithTag());"},{"lineNumber":111,"author":{"gitId":"ZhengShijieNUS"},"content":"            } else {"},{"lineNumber":112,"author":{"gitId":"ZhengShijieNUS"},"content":"                fw.write(t.toSavingString());"},{"lineNumber":113,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":115,"author":{"gitId":"ZhengShijieNUS"},"content":"            fw.write(\"\\n\");"},{"lineNumber":116,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":118,"author":{"gitId":"ZhengShijieNUS"},"content":"        fw.close();"},{"lineNumber":119,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":121,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static void createDukeTxt(String path) throws IOException {"},{"lineNumber":122,"author":{"gitId":"ZhengShijieNUS"},"content":"        String folderPath \u003d CURRENTWORKINGDIR + \"/data\";"},{"lineNumber":123,"author":{"gitId":"ZhengShijieNUS"},"content":"        File folder \u003d new File(folderPath);"},{"lineNumber":124,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (!folder.exists() \u0026\u0026 !folder.isDirectory()) {"},{"lineNumber":125,"author":{"gitId":"ZhengShijieNUS"},"content":"            folder.mkdirs();"},{"lineNumber":126,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"ZhengShijieNUS"},"content":"        FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":128,"author":{"gitId":"ZhengShijieNUS"},"content":"        fw.close();"},{"lineNumber":129,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":131,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static Events createEvents(String taskDescription, String taskDate, boolean taskDoneStatus) {"},{"lineNumber":132,"author":{"gitId":"ZhengShijieNUS"},"content":"        Events e \u003d new Events(taskDescription, taskDate);"},{"lineNumber":133,"author":{"gitId":"ZhengShijieNUS"},"content":"        e.setDone(taskDoneStatus);"},{"lineNumber":134,"author":{"gitId":"ZhengShijieNUS"},"content":"        return e;"},{"lineNumber":135,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":137,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static Deadlines createDeadlines(String taskDescription, String taskDate, boolean taskDoneStatus) {"},{"lineNumber":138,"author":{"gitId":"ZhengShijieNUS"},"content":"        Deadlines d \u003d new Deadlines(taskDescription, taskDate);"},{"lineNumber":139,"author":{"gitId":"ZhengShijieNUS"},"content":"        d.setDone(taskDoneStatus);"},{"lineNumber":140,"author":{"gitId":"ZhengShijieNUS"},"content":"        return d;"},{"lineNumber":141,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":143,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static ToDos createToDos(String taskDescription, boolean taskDoneStatus) {"},{"lineNumber":144,"author":{"gitId":"ZhengShijieNUS"},"content":"        ToDos t \u003d new ToDos(taskDescription);"},{"lineNumber":145,"author":{"gitId":"ZhengShijieNUS"},"content":"        t.setDone(taskDoneStatus);"},{"lineNumber":146,"author":{"gitId":"ZhengShijieNUS"},"content":"        return t;"},{"lineNumber":147,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":149,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static boolean checkDoneStatus(String content) {"},{"lineNumber":150,"author":{"gitId":"ZhengShijieNUS"},"content":"        return content.equalsIgnoreCase(\"1\");"},{"lineNumber":151,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":153,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":153}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.Iterator;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Task get(int i) {"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"        return taskList.get(i);"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void remove(int i) {"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"        taskList.remove(i);"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void add(Task t) {"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"        taskList.add(t);"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Iterator iterator() {"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"        return taskList.iterator();"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"    public ArrayList\u003cTask\u003e getWholeList() {"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"        return this.taskList;"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"    public int size() {"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"        return taskList.size();"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param keyword the key input word"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"    public ArrayList\u003cTask\u003e findKeywordList(String keyword) {"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"        ArrayList\u003cTask\u003e keywordTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"        for (Task t:this.taskList) {"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"            if (t.getTaskDescription().contains(keyword)) {"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"                keywordTaskList.add(t);"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"        return keywordTaskList;"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":53}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"    private Scanner scanner;"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Ui() {"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param t A normal task"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param tasks the stored task list"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String printTask(Task t, TaskList tasks) {"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"        return \"Got it. I\u0027ve added this task:\" + System.lineSeparator() + t.toString() + System.lineSeparator()"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public abstract class Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected String type;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected String content;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String getCmdContent() {"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"        return content;"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String getCmdType() {"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        return type;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":14}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    private String time;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param content deadline content"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param time the deadline time"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    public DeadlineCommand(String content, String time) {"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.time \u003d time;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.type \u003d \"deadline\";"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.content \u003d content;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String getTime() {"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"        return time;"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":19}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    private int index;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param i the index"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    public DeleteCommand(String i) {"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"        type \u003d \"delete\";"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        content \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        index \u003d Integer.parseInt(i);"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    public int getIndex() {"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"        return index;"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":18}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class DoneCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    private int index;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param i the index"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    public DoneCommand(String i) {"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"        type \u003d \"done\";"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        content \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        index \u003d Integer.parseInt(i);"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    public int getIndex() {"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"        return index;"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":19}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class EventCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    private String time;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param content the content of the task"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param time the event time of task"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    public EventCommand(String content, String time) {"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.time \u003d time;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.type \u003d \"event\";"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.content \u003d content;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String getTime() {"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"        return time;"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param keyword the command keyword"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"        type \u003d \"find\";"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.content \u003d keyword;"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":12}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class ListCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"     * the constructor of list command"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    public ListCommand() {"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"        type \u003d \"list\";"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"        content \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":12}},{"path":"src/main/java/duke/command/OtherCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class OtherCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    public OtherCommand(String type) {"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.type \u003d type;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":7}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class TagCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    private int index;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param s The tag content"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    public TagCommand(int i, String s) {"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.type \u003d \"tag\";"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.content \u003d s;"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.index \u003d i;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return the index which needs to be tagged"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    public int getIndex() {"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"        return index;"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":22}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class TodoCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param content the content to create an todo command"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    public TodoCommand(String content) {"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"        type \u003d \"todo\";"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.content \u003d content;"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":12}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param message create a customized exception with certain message"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":10}},{"path":"src/main/java/duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Deadlines extends Task {"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    private LocalDate deadline;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param taskDescription description of the deadline task"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param deadline deadline time of the deadline task"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"     * create a deadline task"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Deadlines(String taskDescription, String deadline) {"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"        super(taskDescription);"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"        super.taskType \u003d \"[D]\";"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.deadline \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (existTags()) {"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"            return super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\""},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"                    + System.lineSeparator() + printTags();"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        return super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toSavingString() {"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"        return super.toSavingString() + \"|\" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":33}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"public class Events extends Task {"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    private LocalDate eventTime;"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param taskDescription description of the event"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param eventTime the time of the event"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"     * To create a event task"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Events(String taskDescription, String eventTime) {"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"        super(taskDescription);"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"        super.taskType \u003d \"[E]\";"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.eventTime \u003d LocalDate.parse(eventTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (existTags()) {"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"            return super.toString() + \" (at: \" + eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\""},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"                    + System.lineSeparator() + printTags();"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        return super.toString() + \" (at: \" + eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toSavingString() {"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":"        return super.toSavingString() + \"|\" + eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":33}},{"path":"src/main/java/duke/tasks/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"public abstract class Tag {"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    private static String tagDiv \u003d \"/div/\";"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"    public ArrayList\u003cString\u003e getTags() {"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        return tags;"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return return the tag divider"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    public static String getTagDiv() {"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"        return tagDiv;"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return return true if tag exists"},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"    public boolean existTags() {"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (tags.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"            return false;"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param s the tag"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void addTag(String s) {"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (s.charAt(0) !\u003d \u0027#\u0027) {"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"            tags.add(\u0027#\u0027 + s );"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":"            tags.add(s);"},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param s the tag"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return true if remove successfully, else false."},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":"    public boolean removeTag(String s) {"},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (tags.contains(s)) {"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"            tags.remove(tags.indexOf(s));"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"            return true;"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"        return false;"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param i the index of the tag"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return true if successfully, else false"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"    public boolean removeTag(int i) {"},{"lineNumber":60,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (i \u003e\u003d 0 \u0026\u0026 i \u003c this.tags.size()) {"},{"lineNumber":61,"author":{"gitId":"ZhengShijieNUS"},"content":"            tags.remove(i);"},{"lineNumber":62,"author":{"gitId":"ZhengShijieNUS"},"content":"            return true;"},{"lineNumber":63,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"ZhengShijieNUS"},"content":"        return false;"},{"lineNumber":65,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":67,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return Output all the tags as a single string"},{"lineNumber":69,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String printTags() {"},{"lineNumber":71,"author":{"gitId":"ZhengShijieNUS"},"content":"        StringBuffer s \u003d new StringBuffer();"},{"lineNumber":72,"author":{"gitId":"ZhengShijieNUS"},"content":"        for (String tag : this.tags) {"},{"lineNumber":73,"author":{"gitId":"ZhengShijieNUS"},"content":"            s.append(tag + System.lineSeparator());"},{"lineNumber":74,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"ZhengShijieNUS"},"content":"        return s.toString();"},{"lineNumber":76,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":78,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return return a string that contains all tags info and could be stored in file"},{"lineNumber":80,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toTagsString() {"},{"lineNumber":82,"author":{"gitId":"ZhengShijieNUS"},"content":"        StringBuffer s \u003d new StringBuffer();"},{"lineNumber":83,"author":{"gitId":"ZhengShijieNUS"},"content":"        for (String tag : this.tags) {"},{"lineNumber":84,"author":{"gitId":"ZhengShijieNUS"},"content":"            s.append(tag + tagDiv);"},{"lineNumber":85,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"ZhengShijieNUS"},"content":"        return s.toString();"},{"lineNumber":87,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":88}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public abstract class Task extends Tag {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected String taskType;"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected String taskDescription;"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"    protected String taskSymbol \u003d \"[\" + \"\\u2718\" + \"]\";"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param taskDescription Description on the task detail."},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"    public Task(String taskDescription) {"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return convert the task to a readable string"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"ZhengShijieNUS"},"content":"        return taskType + taskSymbol + \" \" + taskDescription;"},{"lineNumber":22,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":24,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param done set the task done status"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"    public void setDone(boolean done) {"},{"lineNumber":28,"author":{"gitId":"ZhengShijieNUS"},"content":"        this.isDone \u003d done;"},{"lineNumber":29,"author":{"gitId":"ZhengShijieNUS"},"content":"        setSymbol();"},{"lineNumber":30,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":32,"author":{"gitId":"ZhengShijieNUS"},"content":"    private void setSymbol() {"},{"lineNumber":33,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (isDone) {"},{"lineNumber":34,"author":{"gitId":"ZhengShijieNUS"},"content":"            this.taskSymbol \u003d \"[\" + \"\\u2714\" + \"]\";"},{"lineNumber":35,"author":{"gitId":"ZhengShijieNUS"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"ZhengShijieNUS"},"content":"            this.taskSymbol \u003d \"[\" + \"\\u2718\" + \"]\";"},{"lineNumber":37,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":40,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return a saving method used to save string"},{"lineNumber":42,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toSavingString() {"},{"lineNumber":44,"author":{"gitId":"ZhengShijieNUS"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":45,"author":{"gitId":"ZhengShijieNUS"},"content":"        return taskType.charAt(1) + \"|\" + doneStatus + \"|\" + taskDescription;"},{"lineNumber":46,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":48,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @return a saving method used to save string"},{"lineNumber":50,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toSavingStringWithTag() {"},{"lineNumber":52,"author":{"gitId":"ZhengShijieNUS"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":53,"author":{"gitId":"ZhengShijieNUS"},"content":"        return taskType.charAt(1) + \"|\" + doneStatus + \"|\" + taskDescription + \"|\" + this.toTagsString();"},{"lineNumber":54,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":56,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String getTaskDescription() {"},{"lineNumber":57,"author":{"gitId":"ZhengShijieNUS"},"content":"        return this.taskDescription;"},{"lineNumber":58,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":59}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"public class ToDos extends Task {"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"     * @param taskDescription create a ToDos task with description of the task"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":"    public ToDos(String taskDescription) {"},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"        super(taskDescription);"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"        super.taskType \u003d \"[T]\";"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"        if (existTags()) {"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"            return super.toString() + System.lineSeparator() + printTags();"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"        return super.toString();"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"}"}],"authorContributionMap":{"ZhengShijieNUS":20}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ZhengShijieNUS":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":9,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"271.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"130.0\" style\u003d\"-fx-background-color: #286bc9;\" text\u003d\"Send\" textFill\u003d\"#fffbfb\" /\u003e"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"ZhengShijieNUS"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"399.0\" style\u003d\"-fx-background-image: url(\u0027/images/background.png\u0027);\" /\u003e"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"ZhengShijieNUS"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"ZhengShijieNUS"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"ZhengShijieNUS"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ZhengShijieNUS":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhengShijieNUS"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ZhengShijieNUS"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"ZhengShijieNUS"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"ZhengShijieNUS"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"ZhengShijieNUS"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ZhengShijieNUS"},"content":"bye"},{"lineNumber":7,"author":{"gitId":"ZhengShijieNUS"},"content":""}],"authorContributionMap":{"ZhengShijieNUS":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"ZhengShijieNUS"},"content":"REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"ZhengShijieNUS"},"content":"rem javac  -cp ..\\src -Xlint:none -d ..\\bin -sourcepath D:\\repo\\TIC-4001\\individual-project\\ip\\src\\main\\java Duke.java"},{"lineNumber":12,"author":{"gitId":"ZhengShijieNUS"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":13,"author":{"gitId":"ZhengShijieNUS"},"content":"rem javac -Xlint:none -d ..\\bin -sourcepath ..\\src\\main\\java ..\\src\\main\\java\\Duke.java"},{"lineNumber":14,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":18,"author":{"gitId":"-"},"content":")"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":26,"author":{"gitId":"ZhengShijieNUS"},"content":""},{"lineNumber":27,"author":{"gitId":"ZhengShijieNUS"},"content":"pause"}],"authorContributionMap":{"ZhengShijieNUS":7,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"ZhengShijieNUS"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"ZhengShijieNUS"},"content":"java -classpath ../bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"ZhengShijieNUS":2,"-":36}}]
