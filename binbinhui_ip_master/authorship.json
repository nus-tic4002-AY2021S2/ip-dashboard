[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"D|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"}],"authorContributionMap":{"binbinhui":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"![Image of Todolist](https://github.com/binbinhui/ip/blob/master/docs/94735-istock-863607936.jpg)"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"# About"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"A task manager application help user to record their daily task."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"# What to Use Task Manager for and When to Use It"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"User can use this task manager in his/her daily live. Task Manaer is a commonly user for:"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"- Record tasks"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"- Edit tasks"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"- Find tasks"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"- Others"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"# Source"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"You can found on [GitHub](https://github.com/binbinhui/ip). Fork me!"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"# Features "},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"- `help`        "},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"- `todo`       "},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"- `event`       "},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"- `deadline`   "},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"- `list`       "},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"- `done`        "},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"- `delete`            "},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"- `find`        "},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"- `bye`        "},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"### `help`"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"If user doesnt know the commands or typo, can always use the help option.\u003cbr/\u003e"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ehelp"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"help       -Check the user manual"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"todo       -Add a to do task"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"event      -Add an event "},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"deadline   -Add a deadline task"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"list       -List all task"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"done       -Mark a task to be done"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"delete     -Delete a task"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"load       -Load task from the file"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"find       -Find a task contain the key word"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"bye        -Exit the task\u003c/pre\u003e"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"### `todo`"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"User able to add a todo task with date or without date.\u003cbr/\u003e"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ePlease enter"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"todo"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"Please add a to do task"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"read book"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"2/12/2019 1800"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"Mon Dec 02 18:00:00 SGT 2019 is valid date format"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"Task has been added\u003c/pre\u003e"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"### `event`"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"User able to add a event task with date.\u003cbr/\u003e"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ePlease enter"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"event"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"Please add a event task"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"go for party"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"2/12/2019 1800"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"Mon Dec 02 18:00:00 SGT 2019 is valid date format"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"Task has been added\u003c/pre\u003e"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"### `deadline`"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"User able to add a deadline task with date.\u003cbr/\u003e"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ePlease enter"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"deadline"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"Please add a event task"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"return book"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"2/12/2019 1800"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"Mon Dec 02 18:00:00 SGT 2019 is valid date format"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"Task has been added\u003c/pre\u003e"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"### `list`"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"User able to list all the tasks. \u003cbr/\u003e"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003elist"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"1. [T][x] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"2. [E][x] go for party  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"3. [D][x] return book  by Mon Dec 02 18:00:00 SGT 2019\u003c/pre\u003e"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"### `done`"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"User able to change the status of a task. \u003cbr/\u003e"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003edone"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"Please mark done a task"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"1. [T][x] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"2. [E][x] go for party  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":"3. [D][x] return book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":"1"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":"[T][c] read book | 2/12/2019 1800 has been set to done.\u003c/pre\u003e"},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":"### `delete`"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"User able to delete a task. \u003cbr/\u003e"},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003edelete"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":"Please delete a task"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":"1. [T][c] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":"2. [E][x] go for party  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":"3. [D][x] return book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":"1"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":131,"author":{"gitId":"binbinhui"},"content":"[T][c] read book | 2/12/2019 1800 has been detele.\u003c/pre\u003e"},{"lineNumber":132,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":133,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":134,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":135,"author":{"gitId":"binbinhui"},"content":"### `find`"},{"lineNumber":136,"author":{"gitId":"binbinhui"},"content":"User able to find any keyword from the tasks.\u003cbr/\u003e"},{"lineNumber":137,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":138,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003efind"},{"lineNumber":139,"author":{"gitId":"binbinhui"},"content":"Please type the keyword"},{"lineNumber":140,"author":{"gitId":"binbinhui"},"content":"1800"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":143,"author":{"gitId":"binbinhui"},"content":"2. [T][x] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":144,"author":{"gitId":"binbinhui"},"content":"3. [E][x] go school  by Mon Dec 02 18:00:00 SGT 2019\u003c/pre\u003e"},{"lineNumber":145,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":146,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":147,"author":{"gitId":"binbinhui"},"content":"### `bye`"},{"lineNumber":148,"author":{"gitId":"binbinhui"},"content":"User exit the program the tasks will save into a file.\u003cbr/\u003e"},{"lineNumber":149,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":150,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ebye"},{"lineNumber":151,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":152,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":153,"author":{"gitId":"binbinhui"},"content":"Successfully wrote to the file."},{"lineNumber":154,"author":{"gitId":"binbinhui"},"content":"Bye. Hope to see you again soon!\u003c/pre\u003e"},{"lineNumber":155,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"binbinhui"},"content":"# Thank You!!!"}],"authorContributionMap":{"binbinhui":146,"-":11}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide - The Duke Who Manages Tasks"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"A Personal Assistant Chatbot that helps a person to keep track of various things. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click: `File` \u003e: `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click: `Configure` \u003e: `Structure for New Projects` and then: `Project Settings` \u003e: `Project` \u003e: `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click: `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click: `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click: `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click: `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. After the importing is complete, locate the: `src/main/java/Launcher.java` file, right-click it, and choose: `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   "},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"   ![GUI](images/GUI.png)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features  "},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"  - Command line manual    : `help`"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  - Create a Todo task     : `todo`"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  - Create a Deadline task : `deadline`"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  - Create an Event task   : `event`"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  - Complete a task        : `done`"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  - Delete a task          : `delete`"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"  - List all tasks         : `list`"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  - Find tasks with word   : `find`"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"  - send a email to user   : `send`"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"  - Save the task          : `save`"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"  "},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":" #### Help    : `help`"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":" A mannul to guide the user."},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":" Format: `--help`"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":" - `--help`"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    "},{"lineNumber":42,"author":{"gitId":"-"},"content":" #### Create a Todo task    : `todo`"},{"lineNumber":43,"author":{"gitId":"-"},"content":" Creates a Todo task and adds it to the task list."},{"lineNumber":44,"author":{"gitId":"-"},"content":" "},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":" Format: `--todo --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com`"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":" - description, date and email must fill up."},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":" - date and email must be in a valid format."},{"lineNumber":48,"author":{"gitId":"-"},"content":" "},{"lineNumber":49,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":" - `--todo --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":51,"author":{"gitId":"-"},"content":" "},{"lineNumber":52,"author":{"gitId":"-"},"content":" #### Create a Deadline task: `deadline`"},{"lineNumber":53,"author":{"gitId":"-"},"content":" Creates a Deadline task and adds it to the task list."},{"lineNumber":54,"author":{"gitId":"-"},"content":" "},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":" Format: `--deadline --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com`"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":" - description, date and email must fill up."},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":" - date and email must be in a valid format."},{"lineNumber":58,"author":{"gitId":"-"},"content":" "},{"lineNumber":59,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":" - `--deadline --description finish on homework --date 12/2/2002 1900 -email hellokitty@gmail.com`"},{"lineNumber":61,"author":{"gitId":"-"},"content":" "},{"lineNumber":62,"author":{"gitId":"-"},"content":" #### Create an Event task  : `event`"},{"lineNumber":63,"author":{"gitId":"-"},"content":" Creates an Event task and adds it to the task list."},{"lineNumber":64,"author":{"gitId":"-"},"content":" "},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":" Format: `--event --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com`"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":" - description, date and email must fill up."},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":" - date and email must be in a valid format."},{"lineNumber":68,"author":{"gitId":"-"},"content":"  "},{"lineNumber":69,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":" - `--event --description TV show --date 12/2/2002 2000 -email hellokitty@gmail.com`"},{"lineNumber":71,"author":{"gitId":"-"},"content":" "},{"lineNumber":72,"author":{"gitId":"-"},"content":" #### Complete a task       : `done`"},{"lineNumber":73,"author":{"gitId":"-"},"content":" Completes a task and sets its status to D for Done."},{"lineNumber":74,"author":{"gitId":"-"},"content":" "},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":" Format: `--done \u003cindex\u003e`"},{"lineNumber":76,"author":{"gitId":"-"},"content":" - The first task starts from index number 1 and so on."},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":" - Only numeric allow"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   "},{"lineNumber":79,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":80,"author":{"gitId":"-"},"content":" - `done 2`"},{"lineNumber":81,"author":{"gitId":"-"},"content":" "},{"lineNumber":82,"author":{"gitId":"-"},"content":" #### Delete a task         : `delete`"},{"lineNumber":83,"author":{"gitId":"-"},"content":" Removes a task and its note from the task list and shifts the remaining tasks accordingly."},{"lineNumber":84,"author":{"gitId":"-"},"content":" "},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":" Format: `--delete \u003cindex\u003e`"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":" - Only numeric allow"},{"lineNumber":87,"author":{"gitId":"-"},"content":" "},{"lineNumber":88,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":" - `delete 1`"},{"lineNumber":90,"author":{"gitId":"-"},"content":" "},{"lineNumber":91,"author":{"gitId":"-"},"content":" #### List down all tasks   : `list`"},{"lineNumber":92,"author":{"gitId":"-"},"content":" Lists down all tasks in the task list."},{"lineNumber":93,"author":{"gitId":"-"},"content":" "},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":" Format: `--list`"},{"lineNumber":95,"author":{"gitId":"-"},"content":" "},{"lineNumber":96,"author":{"gitId":"-"},"content":" #### Find tasks with word  : `find`"},{"lineNumber":97,"author":{"gitId":"-"},"content":" Finds all tasks that matches with the search word(s)."},{"lineNumber":98,"author":{"gitId":"-"},"content":" "},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":" Format: `--find --\u003ckeyword\u003e`"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":" - `find` command apply on all the data in the database as long the keyword is matched."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":" - `--find TV`"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":" - `--find 28/12`"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":" - `--find hellokitty@hotmail.com`"},{"lineNumber":106,"author":{"gitId":"-"},"content":" "},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":" #### Add a note to a task  : `send`"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":" Send a email of the task to user when the due date last than 7 days for reminder or sending a email of the task to user for record purpose."},{"lineNumber":109,"author":{"gitId":"-"},"content":" "},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":" Format: `--send \u003cindex\u003e`"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":" Examples:"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":" - `--send 1`"},{"lineNumber":114,"author":{"gitId":"-"},"content":" "},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":" #### Exit the program       : `save`"},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":" save all the new changes to txt file."},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":" IMPORTANT: Please always save your changes before you close. If not nothing will be record."},{"lineNumber":118,"author":{"gitId":"-"},"content":" "},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":" Format: `--save`"},{"lineNumber":120,"author":{"gitId":"-"},"content":" "},{"lineNumber":121,"author":{"gitId":"-"},"content":" ## Command Summary"},{"lineNumber":122,"author":{"gitId":"-"},"content":" Action | Format, Examples"},{"lineNumber":123,"author":{"gitId":"-"},"content":" ------------ | -------------"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":" **help**|`--help`"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":" **todo**|`--todo --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com` \u003cbr\u003e e.g. `--todo --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":" **deadline**|`--deadline --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com` \u003cbr\u003e e.g. `--deadline --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":" **event**|`--event --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com` \u003cbr\u003e e.g. `--event --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":" **done**|`--done \u003cindex\u003e` \u003cbr\u003e e.g. `--done 1`"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":" **delete**|`--delete \u003cindex\u003e` \u003cbr\u003e e.g. `--delete 1`"},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":" **list**|`--list`"},{"lineNumber":131,"author":{"gitId":"binbinhui"},"content":" **find**|`--find \u003ckeyword\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `--find TV` \u003cbr\u003e `--find 28/11` \u003cbr\u003e `--find hellokitty@hotmail.com`"},{"lineNumber":132,"author":{"gitId":"binbinhui"},"content":" **send**|`--send \u003cindex\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `--send 1`"},{"lineNumber":133,"author":{"gitId":"binbinhui"},"content":" **save**|`--save`"}],"authorContributionMap":{"-":79,"binbinhui":54}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.MainWindow;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startDuke(duke);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":32,"binbinhui":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":12,"author":{"gitId":"-"},"content":" *"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * @author Lin Binhui"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private final ArrayList commandName \u003d new ArrayList();"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    private final Storage storage \u003d new Storage(\"/Users/linbinhui/biomindrepo/impala/data/duke.txt\", commandName);"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    String getResponse(String input) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        final Parser parser \u003d new Parser();"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        // load the current file"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        storage.readFromFile();"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        Command command \u003d parser.parserInput(input, ui, storage, commandName);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return command.execute();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    String getWelcome() {"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        return ui.welcome();"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":17,"binbinhui":20}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void startDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        initializeDuke();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void initializeDuke() {"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"        String greetings \u003d duke.getWelcome();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(greetings, dukeImage)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":60,"binbinhui":2}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * An abstract class that is inherited by every command."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"public abstract class Command {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public String line;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public Ui ui;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public Storage storage;"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public ArrayList commandName;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    protected Command() {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    protected Command(Ui ui) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    protected Command(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        this.line \u003d line;"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        this.storage \u003d storage;"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        this.commandName \u003d commandName;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    public abstract String execute();"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":40}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * A command to create a Deadline."},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--deadline\";"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public DeadlineCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        ArrayList\u003cString\u003e newProject \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"description\");"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"date\");"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"email\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        String[] splits \u003d line.split(\"--\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        boolean hasMistake \u003d false;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        String error \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        for (String command : newProject) {"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            if (!line.contains(\"--\" + command)) {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                error \u003d error.concat(\"The command line is missing for --\" + command + \"\\n\");"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"                hasMistake \u003d true;"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        if (hasMistake) {"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            return error + \"Please create the project in the correct format:\\n\""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"                    + \"--todo --description INPUT --date dd/MM/yyyy hhmm --email INPUT\";"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        String description \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        String date \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        for (int num \u003d 1; num \u003c splits.length; num++) {"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"description\")) {"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"                description \u003d arr[1];"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"date\")) {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                if (timeChecker(arr[1])) {"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                    date \u003d arr[1];"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Date Format\u003e\u003e\";"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"email\")) {"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"                if (!(arr[1].matches(\"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\"))) {"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Email Format\u003e\u003e\";"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"                    email \u003d arr[1];"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"        commandName.add(new duke.tasks.Deadline(description, date, email));"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"        return ui.description(line);"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time) {"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":90}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to delete task."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--delete\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public DeleteCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            if (commandName.isEmpty()) {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            } else {"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                String clean \u003d obj[1].replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                int num \u003d Integer.parseInt(clean);"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                if (num \u003c\u003d commandName.size()) {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                    int num1 \u003d num - 1;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                    commandName.remove(num1);"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                    return commandName.get(num1).toString() + \" has been deleted\";"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Input, There are only \" + commandName.size() + \" tasks\u003e\u003e\";"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cPlease enter a numeric input\u003e\u003e\";"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":47}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * A command to mark a task to be done."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--done\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public DoneCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            if (commandName.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"                return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                String clean \u003d obj[1].replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                int num \u003d Integer.parseInt(clean);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                if (num \u003c\u003d commandName.size()) {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                    int num1 \u003d num - 1;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                    String makeDone \u003d commandName.get(num1).toString();"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                    commandName.set(num1, makeDone.replace(\"x\", \"c\"));"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                    return makeDone.replace(\"x\", \"c\") + \" has been set to done\";"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Input, There are only \" + commandName.size() + \" tasks\u003e\u003e\";"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cPlease enter a numeric input\u003e\u003e\";"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":45}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * A command to create a Event task."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class EventCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--event\";"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public EventCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        ArrayList\u003cString\u003e newProject \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"description\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"date\");"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"email\");"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        String[] splits \u003d line.split(\"--\");"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        boolean hasMistake \u003d false;"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        String error \u003d \"\";"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        for (String command : newProject) {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            if (!line.contains(\"--\" + command)) {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"                error \u003d error.concat(\"The command line is missing for --\" + command + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                hasMistake \u003d true;"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        if (hasMistake) {"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"            return error + \"Please create the project in the correct format:\\n\""},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"                    + \"--todo --description INPUT --date dd/MM/yyyy hhmm --email INPUT\";"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        String description \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        String date \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"        for (int num \u003d 1; num \u003c splits.length; num++) {"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"description\")) {"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"                description \u003d arr[1];"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"date\")) {"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                if (timeChecker(arr[1].toString())) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                    date \u003d arr[1];"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Date Format\u003e\u003e\";"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"email\")) {"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"                if (!(arr[1].matches(\"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\"))) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Email Format\u003e\u003e\";"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"                    email \u003d arr[1];"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"        commandName.add(new duke.tasks.Event(description, date, email));"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        return ui.description(line);"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time) {"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":93}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to find the keyword."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--find\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public FindCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        if (commandName.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            String output \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"            String temp \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            int number \u003d 0;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                if (task.toString().contains(obj[1])) {"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                    temp \u003d ui.dataConverter(task.toString());"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                    output \u003d output.concat(number + 1 + \"\\n\" + temp + \"\\r\");"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                    output \u003d \"\u003c\u003cNo matching.\u003e\u003e\";"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                number++;"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            return output + \"\\nTotal has \" + number + \" matched found.\";"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":47}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * A command to help user if he /she not familiar with the command line."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"public class HelpCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--help\";"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public HelpCommand(Ui ui) {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        super(ui);"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        return ui.tasks();"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":23}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":" * A command which user has key in wrong command line."},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    public InvalidCommand() {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        return \"\u003c\u003cInvalid Command. Please refer to --help\u003e\u003e\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":15}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" * A command to list down all the tasks."},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--list\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public ListCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        if (commandName.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"            return \"No data in the database\";"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            int number \u003d 1;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            String data \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            String temp \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                temp \u003d ui.dataConverter(task.toString());"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                data \u003d data.concat(number + \"\\n\" + temp + \"\\r\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                number++;"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            return data;"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":36}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to save the recent change task from array into txt file."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class SaveCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--save\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public SaveCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        storage.saveToFile(commandName);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        return ui.saveMsg();"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":27}},{"path":"src/main/java/duke/command/SendCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.reminder.SendEmail;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * A command to send a email to user."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class SendCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--send\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public SendCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            if (commandName.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"                return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                String clean \u003d obj[1].replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                int num \u003d Integer.parseInt(clean);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                String[] data \u003d commandName.get(num).toString().split(\"\\\\|\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                String email \u003d data[3].trim();"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                new SendEmail(email, ui.dataConverter(commandName.get(num).toString()));"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                return \"Email has been send\";"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cPlease enter a numeric input\u003e\u003e\";"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":44}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.tasks.Todo;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * A command to create a todo task."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"public class TodoCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--todo\";"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    public TodoCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        System.out.println(line);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        ArrayList\u003cString\u003e newProject \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"description\");"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"date\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"email\");"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        String[] splits \u003d line.split(\"--\");"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        boolean hasMistake \u003d false;"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        String error \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        for (String command : newProject) {"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"            if (!line.contains(\"--\" + command)) {"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"                error \u003d error.concat(\"The command line is missing for --\" + command + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"                hasMistake \u003d true;"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        if (hasMistake) {"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"            return error + \"Please create the project in the correct format:\\n\""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                    + \"--todo --description INPUT --date dd/MM/yyyy hhmm --email INPUT\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        String description \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"        String date \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"        for (int num \u003d 1; num \u003c splits.length; num++) {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"description\")) {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                description \u003d arr[1];"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"date\")) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                if (timeChecker(arr[1].toString())) {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                    date \u003d arr[1];"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Date Format\u003e\u003e\";"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"email\")) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                if (!(arr[1].matches(\"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\"))) {"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Email Format\u003e\u003e\";"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"                    email \u003d arr[1];"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"        commandName.add(new Todo(description, date, email));"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"        return ui.description(line);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time) {"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":96}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.command.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.command.EventCommand;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import duke.command.FindCommand;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import duke.command.HelpCommand;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import duke.command.InvalidCommand;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import duke.command.SaveCommand;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import duke.command.SendCommand;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import duke.command.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import duke.ui.Ui;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":" * A command handler, redirect all the commandline."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"public class Parser {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public Command parserInput(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        String commandWord \u003d line.trim().split(\" \", 2)[0];"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String lineWithoutCommand \u003d line.substring(line.indexOf(\" \") + 1).trim();"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        System.out.println(commandWord);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        switch (commandWord) {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        case HelpCommand.word:"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"            return new HelpCommand(ui);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        case TodoCommand.word:"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"            return new TodoCommand(line, ui, storage, commandName);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        case DeadlineCommand.word:"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            return new DeadlineCommand(line, ui, storage, commandName);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        case EventCommand.word:"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            return new EventCommand(line, ui, storage, commandName);"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        case FindCommand.word:"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"            return new FindCommand(line, ui, storage, commandName);"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        case SendCommand.word:"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            return new SendCommand(line, ui, storage, commandName);"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        case DoneCommand.word:"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"            return new DoneCommand(line, ui, storage, commandName);"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        case DeleteCommand.word:"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"            return new DeleteCommand(line, ui, storage, commandName);"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        case ListCommand.word:"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"            return new ListCommand(line, ui, storage, commandName);"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        case SaveCommand.word:"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            return new SaveCommand(line, ui, storage, commandName);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"            return new InvalidCommand();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":17,"binbinhui":43}},{"path":"src/main/java/duke/reminder/SendEmail.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.reminder;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Message;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Session;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import javax.mail.MessagingException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import javax.mail.PasswordAuthentication;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Transport;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javax.mail.internet.InternetAddress;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import javax.mail.internet.MimeMessage;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import java.util.Properties;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * This is a email class where sending out the mail to user."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" * Credit goes to https://pepipost.com/tutorials/send-email-in-java-using-gmail-smtp/"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"public class SendEmail {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    String receiver;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    String messages;"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    public SendEmail(String receiver, String message) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        this.receiver \u003d receiver;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        this.messages \u003d message;"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        // sendEmail();"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    public void sendEmail() {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        // Recipient\u0027s email ID needs to be mentioned."},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        String to \u003d receiver;"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        // Sender\u0027s email ID needs to be mentioned"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        String from \u003d \"ProjectTracker@roject.com\";"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        // Assuming you are sending email from through gmail smtp"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        String host \u003d \"smtp.gmail.com\";"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        // Get system properties"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        Properties properties \u003d System.getProperties();"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        // Setup mail server"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.host\", host);"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.port\", \"465\");"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.ssl.enable\", \"true\");"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.auth\", \"true\");"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        // Get the Session object.// and pass username and password"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        Session session \u003d Session.getInstance(properties, new javax.mail.Authenticator() {"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            protected PasswordAuthentication getPasswordAuthentication() {"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"                return new PasswordAuthentication(\"takeaways2017@gmail.com\", \"1QazxsW\");"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        });"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"        // Used to debug SMTP issues"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"        session.setDebug(true);"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            // Create a default MimeMessage object."},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"            MimeMessage message \u003d new MimeMessage(session);"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            // Set From: header field of the header."},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            message.setFrom(new InternetAddress(from));"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            // Set To: header field of the header."},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"            // Set Subject: header field"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"            message.setSubject(\"The New Project\");"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"            // Now set the actual message"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"            message.setText(\"Hi Project Leader \\n\" + \"This project has been send you as a notification.\\n\\n\" + messages"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"                    + \"\\n Best regards \\n Project Tracker\");"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"sending...\");"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"            // Send message"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"            Transport.send(message);"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Sent message successfully....\");"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        } catch (MessagingException mex) {"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"            mex.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":""}],"authorContributionMap":{"binbinhui":91}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.reminder.SendEmail;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.tasks.Tasks;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import java.util.Calendar;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":" * This is a storage class and file read and write. All data will be handle down here."},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    private String filePath;"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    private ArrayList commandName;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public Storage(String filePath, ArrayList commandName) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        this.commandName \u003d commandName;"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    public void setCommandName(Tasks obj) {"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        commandName.add(obj);"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    public void setCommandName(String obj) {"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        commandName.add(obj);"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"    public ArrayList getCommandName() {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        return commandName;"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    // fild checker, check whether the file is create or not"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    private void fileChecker() {"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"    // save the tasks into the txt file"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"    public void saveToFile(ArrayList commandName) {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            fileChecker();"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath, false);"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                //System.out.println(task.toString());"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                String obj \u003d task.toString().replace(\"]\", \"|\").replace(\"[\", \"\")"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                        .replace(\"x\", \"0\").replace(\"c\", \"1\");"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                myWriter.write(obj + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            myWriter.close();"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Successfully wrote to the file.\");"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"File does not exist.\");"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"    // read the task from the current file on the system"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"    public void readFromFile() {"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"            fileChecker();"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"                divider(data);"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            myReader.close();"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"File does not exist.\");"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"    // convert the data from file into wanted form."},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"    private void divider(String data) {"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"        String[] words \u003d data.split(\"\\\\|\");"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"        String word0 \u003d words[0];"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"        String word1 \u003d words[1];"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"        if (word1.equals(\"0\")) {"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"            word1 \u003d \"x\";"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"            word1 \u003d \"c\";"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"        String word2 \u003d words[2];"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"        String word3 \u003d words[3];"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"        String word4 \u003d words[4];"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"        data \u003d \"[\" + word0 + \"]\" + \"[\" + word1 + \"]\" + word2 + \"|\" + word3 + \"|\" + word4;"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"        if (diff(word3) \u003c\u003d 7) {"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"            new SendEmail(word3.trim(), data);"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"        commandName.add(data);"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":"    public int diff(String time) {"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":"        Date date \u003d null;"},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":"            date \u003d formatter.parse(dateInString);"},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":"        long mill1 \u003d date.getTime();"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":"        Date today \u003d Calendar.getInstance().getTime();"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":"        long mill2 \u003d today.getTime();"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":"        int days \u003d 0;"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":"        if (mill2 \u003c mill1) {"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":"            long diff \u003d mill1 - mill2;"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":"            days \u003d (int) (diff / (1000 * 60 * 60 * 24));"},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"binbinhui"},"content":"        return days;"},{"lineNumber":132,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":134,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":135,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":135}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * adding deadline task"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Deadline extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public Deadline(String description, String time, String email) {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super(description, time, email);"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        super.type \u003d \"[D]\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        return type + status + \" \" + description + \" | \" + time + \" | \" + email;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * adding event task"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Event extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public Event(String description, String time, String email) {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        super(description, time, email);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super.type \u003d \"[E]\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        return type + status + \" \" + description + \" | \" + time + \" | \" + email;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/duke/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * An abstract class that is inherited by the duke.task.Todo, Deadline and Event classes."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"public class Tasks {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    protected String status;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    protected String description;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    protected String time;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    protected String type;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    protected String email;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public Tasks(String description, String time, String email) {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        this.status \u003d \"[x]\";"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        this.time \u003d time;"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        this.email \u003d email;"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        return status + \" \" + description;"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":31}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" * adding todo task"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Todo extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public Todo(String description, String time, String email) {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        super(description, time, email);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super.type \u003d \"[T]\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        return type + status + \" \" + description + \" | \" + time + \" | \" + email;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    // welcome come msg for the UI"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public String welcome() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String output \u003d logo + \"\\rHello! I\u0027m Duke\\nWhat can I do for you?\\n\";"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        return output;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    // divider for each line"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    public void divider() {"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"-----------------------------------------------------------------\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    // options to choose the feature"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    public String tasks() {"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        String help \u003d \"\\n--help             -Check the user manual\\n\""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                + \"--todo             -Add a to do task\\n\""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                + \"--event            -Add an event\\n\""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                + \"--deadline       -Add a deadline task\\n\""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                + \"--list                 -List all task\\n\""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                + \"--done             -Mark a task to be done\\n\""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                + \"--delete           -Delete a task\\n\""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                + \"--find             -Find a task contain the key word\\n\""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"                + \"--send               -send a email to user\\n\""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                + \"--save               -Save the task\\n\";"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        return help;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    // add time msg"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"    public void time() {"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    // good bye msg"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"    public String saveMsg() {"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        return \"Your recent changed has been save!\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"    public void showLoadingError() {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"file not exist\");"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"    public String description(String input) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"        String[] obj \u003d input.split(\"--\");"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        String output \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"        for (Object data : obj) {"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"            String[] temp;"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"todo\")) {"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"This is a todo Task has been added.\\n\");"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"event\")) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"This is a event Task has been added.\\n\");"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"deadline\")) {"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"This is a deadline Task has been added.\\n\");"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"description\")) {"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"                temp \u003d data.toString().split(\" \");"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"Description: \" + temp[1]);"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"date\")) {"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"                temp \u003d data.toString().split(\" \", 2);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"\\nDate: \" + temp[1]);"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"email\")) {"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"                temp \u003d data.toString().split(\" \");"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"\\nEmail: \" + temp[1]);"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"        return output;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"    public String dataConverter(String input) {"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"        String[] obj \u003d input.split(\" \\\\| \", 3);"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"        String output \u003d \"\";"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"        String[] firstObj \u003d obj[0].toString().split(\" \", 2);"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"        if (firstObj[0].contains(\"T\")) {"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"This is a Todo task.\");"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"        } else if (firstObj[0].contains(\"E\")) {"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"This is a Event task.\");"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"This is a Deadline task.\");"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"        if (firstObj[0].contains(\"c\")) {"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"\\nStatus: Done\");"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"\\nStatus: Undone\");"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"        output \u003d output.concat(\"\\nDescription: \" + firstObj[1]);"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"        output \u003d output.concat(\"\\nDate: \" + obj[1]);"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"        output \u003d output.concat(\"\\nEmail \" + obj[2]);"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"        return output;"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":26,"binbinhui":88}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\"/\u003e"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"            \u003c/font\u003e"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        \u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"-":18,"binbinhui":4}},{"path":"src/test/java/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class DeadlineCommandTest {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public void deadlineCommandTest() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--deadline --description haha --date 12/12/2001 1800 --email xxx@hotmail.com\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        //new DoneCommand(input,ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(input, ui, storage, commandName);"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        assertEquals(deadlineCommand.execute(), \"This is a deadline Task has been added.\""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"               + \"\\nDescription: haha\\nDate: 12/12/2001 1800 \\nEmail: xxx@hotmail.com\");"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":24}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.command.DoneCommand;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DoneCommandTest {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void doneCommandTest() {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--done gdfd\";"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        //new DoneCommand(input,ui, storage, commandName);"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(input, ui, storage, commandName);"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        assertEquals(doneCommand.execute(), \"\u003c\u003cNo data in the database\u003e\u003e\");"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"binbinhui":17,"-":9}},{"path":"src/test/java/EmailCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class EmailCheckerTest {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public void emailCheckerTest() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--deadline --description haha --date 12/12/2001 1800 --email xxxhotmail.com\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(input, ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        assertEquals(deadlineCommand.execute(), \"\u003c\u003cInvalid Email Format\u003e\u003e\");"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":21}},{"path":"src/test/java/TimeCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class TimeCheckerTest {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public void timeCheckerTest() {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--deadline --description haha --date 12/12/2001 --email xxx@hotmail.com\";"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        //new DoneCommand(input,ui, storage, commandName);"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(input, ui, storage, commandName);"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        assertEquals(deadlineCommand.execute(), \"\u003c\u003cInvalid Date Format\u003e\u003e\");"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":24}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.tasks.Todo;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class TodoTest {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public void todoTest() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        Todo todo \u003d new Todo(\"Read Book\", \"12/12/12 1800\", \"haha@hotmail.com\");"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        assertEquals(\"[T][x] Read Book | 12/12/12 1800 | haha@hotmail.com\", todo.toString());"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":17}}]
