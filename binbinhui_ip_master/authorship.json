[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"group \u0027org.example\u0027"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"version \u00271.0-SNAPSHOT\u0027"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"sourceSets {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    main {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        java {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"            srcDirs \u003d [\u0027src\u0027]"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"//dependencies {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"//    compile \u0027junit:junit:5.4\u0027"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"//}"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"apply plugin: \u0027checkstyle\u0027"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"checkstyle {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"repositories {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    mavenCentral()"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"dependencies {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    implementation \u0027junit:junit:4.12\u0027"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":47}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"T|0| hre  |  2/12/2019 1800"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"E|0| sfafsa  |  2/12/2019 1800"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"T|0| fdsa | 2/12/2019 1800"}],"authorContributionMap":{"binbinhui":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"![Image of Todolist](https://github.com/binbinhui/ip/blob/master/docs/94735-istock-863607936.jpg)"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"# About"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"A task manager application help user to record their daily task."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"# What to Use Task Manager for and When to Use It"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"User can use this task manager in his/her daily live. Task Manaer is a commonly user for:"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"- Record tasks"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"- Edit tasks"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"- Find tasks"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"- Others"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"# Source"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"You can found on [GitHub](https://github.com/binbinhui/ip). Fork me!"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"# Features "},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"- `help`        "},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"- `todo`       "},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"- `event`       "},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"- `deadline`   "},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"- `list`       "},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"- `done`        "},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"- `delete`            "},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"- `find`        "},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"- `bye`        "},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"### `help`"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"If user doesnt know the commands or typo, can always use the help option.\u003cbr/\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ehelp"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"help       -Check the user manual"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"todo       -Add a to do task"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"event      -Add an event "},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"deadline   -Add a deadline task"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"list       -List all task"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"done       -Mark a task to be done"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"delete     -Delete a task"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"load       -Load task from the file"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"find       -Find a task contain the key word"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"bye        -Exit the task\u003c/pre\u003e"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"### `todo`"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"User able to add a todo task with date or without date.\u003cbr/\u003e"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ePlease enter"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"todo"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"Please add a to do task"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"read book"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"2/12/2019 1800"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"Mon Dec 02 18:00:00 SGT 2019 is valid date format"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"Task has been added\u003c/pre\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"### `event`"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"User able to add a event task with date.\u003cbr/\u003e"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ePlease enter"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"event"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"Please add a event task"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"go for party"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"2/12/2019 1800"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"Mon Dec 02 18:00:00 SGT 2019 is valid date format"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"Task has been added\u003c/pre\u003e"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"### `deadline`"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"User able to add a deadline task with date.\u003cbr/\u003e"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ePlease enter"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"deadline"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"Please add a event task"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"return book"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"2/12/2019 1800"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"Mon Dec 02 18:00:00 SGT 2019 is valid date format"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"Task has been added\u003c/pre\u003e"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"### `list`"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"User able to list all the tasks. \u003cbr/\u003e"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003elist"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"1. [T][x] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"2. [E][x] go for party  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"3. [D][x] return book  by Mon Dec 02 18:00:00 SGT 2019\u003c/pre\u003e"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"### `done`"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"User able to change the status of a task. \u003cbr/\u003e"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003edone"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"Please mark done a task"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"1. [T][x] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"2. [E][x] go for party  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":"3. [D][x] return book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":"1"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":"[T][c] read book | 2/12/2019 1800 has been set to done.\u003c/pre\u003e"},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":"### `delete`"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"User able to delete a task. \u003cbr/\u003e"},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003edelete"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":"Please delete a task"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":"1. [T][c] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":"2. [E][x] go for party  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":"3. [D][x] return book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":"1"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":131,"author":{"gitId":"binbinhui"},"content":"[T][c] read book | 2/12/2019 1800 has been detele.\u003c/pre\u003e"},{"lineNumber":132,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":133,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":134,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":135,"author":{"gitId":"binbinhui"},"content":"### `find`"},{"lineNumber":136,"author":{"gitId":"binbinhui"},"content":"User able to find any keyword from the tasks.\u003cbr/\u003e"},{"lineNumber":137,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":138,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003efind"},{"lineNumber":139,"author":{"gitId":"binbinhui"},"content":"Please type the keyword"},{"lineNumber":140,"author":{"gitId":"binbinhui"},"content":"1800"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":143,"author":{"gitId":"binbinhui"},"content":"2. [T][x] read book  by Mon Dec 02 18:00:00 SGT 2019"},{"lineNumber":144,"author":{"gitId":"binbinhui"},"content":"3. [E][x] go school  by Mon Dec 02 18:00:00 SGT 2019\u003c/pre\u003e"},{"lineNumber":145,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":146,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":147,"author":{"gitId":"binbinhui"},"content":"### `bye`"},{"lineNumber":148,"author":{"gitId":"binbinhui"},"content":"User exit the program the tasks will save into a file.\u003cbr/\u003e"},{"lineNumber":149,"author":{"gitId":"binbinhui"},"content":"Example:\u003cbr/\u003e"},{"lineNumber":150,"author":{"gitId":"binbinhui"},"content":"\u003cpre\u003ebye"},{"lineNumber":151,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":152,"author":{"gitId":"binbinhui"},"content":"Expected outcome:"},{"lineNumber":153,"author":{"gitId":"binbinhui"},"content":"Successfully wrote to the file."},{"lineNumber":154,"author":{"gitId":"binbinhui"},"content":"Bye. Hope to see you again soon!\u003c/pre\u003e"},{"lineNumber":155,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"binbinhui"},"content":"# Thank You!!!"}],"authorContributionMap":{"binbinhui":137,"-":20}},{"path":"setting.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"binbinhui":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import command.DukeException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import command.Switch;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javafx.application.Application;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * This is a small bot program to allow user to record their tasks and save in a txt file"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" *"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"//public class Duke {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"//    public static void run() throws DukeException, ParseException {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"//        //..."},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"//        Switch switchTasks \u003d new Switch();"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"//        switchTasks.option();"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"//    public static void main(String[] args) throws DukeException, ParseException {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"//        run();"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"//}"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"public class Duke extends Application {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    // ..."},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    public void start(Stage stage) {"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        stage.setScene(scene); // Setting the stage to show our screen"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        stage.show(); // Render the stage."},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"binbinhui":41,"-":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":12}},{"path":"src/main/java/command/Converter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import tasks.Event;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":" * This is a action class, all command wil be exec down here."},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"public class Converter {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private Time timeDate;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    //private String time;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public Converter(){"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        timeDate \u003d new Time();"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public void saveToDo(String description, String time) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        storage.setCommandName(new Todo(description,time));"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    public void saveEvent(String description, String time) throws ParseException {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        storage.setCommandName(new Event(description,time));"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    public void saveDeadLine(String description, String time) throws ParseException {"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        storage.setCommandName(new Deadline(description,time));"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    public void find(String description) throws ParseException {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        printArray(description);"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"    public void fileLoader(){"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        storage.readFromFile();"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    public void fileWriter(){"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        storage.saveToFile();"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"   // make done method"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"    public void makeDone(String description) throws DukeException {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            String clean \u003d description.replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            int num \u003d Integer.parseInt(clean);"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            changeToDone(num);"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"    // change task into done. c means complete x means not done yet."},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"    private void changeToDone(int num){"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"        if (num \u003c\u003d storage.getCommandName().size()){"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            int num1\u003dnum - 1;"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            String makeDone \u003d storage.getCommandName().get(num1).toString();"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            System.out.println(makeDone.replace(\"x\",\"c\") + \" has been set to done\");"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            storage.getCommandName().set(num1,makeDone.replace(\"x\",\"c\"));"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"        else {"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Invalid Input\");"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"    // make delete method"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"    public void makeDelete(String description) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"            String clean \u003d description.replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"            int num \u003d Integer.parseInt(clean);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"            deleting(num);"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"    // tasks deleting function"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"    private void deleting(int num){"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        if (num \u003c\u003d storage.getCommandName().size()){"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"            int num1\u003dnum - 1;"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            System.out.println(storage.getCommandName().get(num1) + \" has been deleted\");"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"            storage.getCommandName().remove(num1);"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"        else {"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Invalid Input\");"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"    // print array list method"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"    public void printData() throws ParseException {"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"       printArray();"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"    private void printArray() throws ParseException {"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"            int number \u003d 1;"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"            for (Object task : storage.getCommandName()) {"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"                String data \u003d task.toString();"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"                String[] obj \u003d data.split(\"\\\\|\");"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"                System.out.println(number + \". \" + obj[0] + \" by \" + timeDate.timeConverter(obj[1].replaceFirst(\" \", \"\")));"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"                number ++;"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":"    private void printArray(String description) throws ParseException {"},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":"        int number \u003d 1;"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":"        for (Object task : storage.getCommandName()) {"},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":"            if(task.toString().contains(description)) {"},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":"                String[] obj \u003d task.toString().split(\"\\\\|\");"},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":"                Date time \u003d timeDate.timeConverter(obj[1].replaceFirst(\" \", \"\"));"},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":"                System.out.println(number + \". \" + obj[0] + \" by \" + time);"},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"            number ++;"},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":"    public boolean checkDataSize(){"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":"        if(storage.getCommandName().isEmpty()){"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":"            return true;"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":"        return false;"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":130}},{"path":"src/main/java/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":" * This is a error handling class."},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"public class DukeException extends Exception{"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"    public DukeException(String msg){"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":10}},{"path":"src/main/java/command/Switch.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * This is a switch class, all the choices will be make by here."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class Switch {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    private Time timeDate;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    private boolean task;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    private boolean timeCheck;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    private static String description;"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private static String time;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    Converter converter \u003d new Converter();"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    public Switch(){"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        timeDate \u003d new Time();"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        this.task\u003dtrue;"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    public void option() throws DukeException, ParseException {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        // print out welcome msg"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        ui.welcome();"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        // load the current file"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        converter.fileLoader();"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        // While loop will be exit once the task become false."},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        while (task) {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Please enter\");"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            // print the choices we have"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"            descriptionCheck();"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            // redirect by using switch loop"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            switch(description.toLowerCase().replace(\" \",\"\")){"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"                case \"todo\":"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Please add a to do task\");"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"                    converter.saveToDo(descriptionCheck(),timeCheck());"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                    ui.addTask();"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"                case \"event\":"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Please add a event task\");"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"                    converter.saveEvent(descriptionCheck(),timeCheck());"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"                    ui.addTask();"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                case \"deadline\":"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Please add a deadline task\");"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                    converter.saveDeadLine(descriptionCheck(),timeCheck());"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                    ui.addTask();"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                case \"list\":"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"list\");"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                    if(converter.checkDataSize()){"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                        System.out.println(\"No data in the database\");"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                    else {"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                        converter.printData();"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"                case \"done\":"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Please mark done a task\");"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"                    if(converter.checkDataSize()){"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"                        System.out.println(\"No data in the database\");"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"                    else {"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"                        converter.printData();"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"                        converter.makeDone(descriptionCheck());"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"                case \"delete\":"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Please delete a task\");"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"                    if(converter.checkDataSize()){"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"                        System.out.println(\"No data in the database\");"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"                    else {"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"                        converter.printData();"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"                        converter.makeDelete(descriptionCheck());"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"                case \"help\":"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"                    ui.tasks();"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"                case \"find\":"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Please type the keyword\");"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"                    if(converter.checkDataSize()){"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"                        System.out.println(\"No data in the database\");"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"                    else {"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"                        converter.find(descriptionCheck());"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"                    }"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":"                case \"bye\":"},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":"                    task \u003d false;"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":"                default:"},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Invalid Input. Please enter help\");"},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":"                    break;"},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"        // save the tasks into txt file."},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"        converter.fileWriter();"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":"        ui.goodBye();"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":"    private String descriptionCheck(){"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":"        description \u003d ui.input();"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":"        if(description.isEmpty()){"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":"           descriptionCheck();"},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"binbinhui"},"content":"        return description;"},{"lineNumber":132,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":134,"author":{"gitId":"binbinhui"},"content":"    private String timeCheck(){"},{"lineNumber":135,"author":{"gitId":"binbinhui"},"content":"        timeCheck \u003d true;"},{"lineNumber":136,"author":{"gitId":"binbinhui"},"content":"        while(timeCheck) {"},{"lineNumber":137,"author":{"gitId":"binbinhui"},"content":"            ui.time();"},{"lineNumber":138,"author":{"gitId":"binbinhui"},"content":"            time \u003d ui.input();"},{"lineNumber":139,"author":{"gitId":"binbinhui"},"content":"            if (time.isEmpty()) {"},{"lineNumber":140,"author":{"gitId":"binbinhui"},"content":"                System.out.println(\"No Time has been set\");"},{"lineNumber":141,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"binbinhui"},"content":"            else {"},{"lineNumber":143,"author":{"gitId":"binbinhui"},"content":"                if(timeDate.timeChecker(time)){"},{"lineNumber":144,"author":{"gitId":"binbinhui"},"content":"                    timeCheck \u003d false;"},{"lineNumber":145,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":146,"author":{"gitId":"binbinhui"},"content":"                else {"},{"lineNumber":147,"author":{"gitId":"binbinhui"},"content":"                    System.out.println(\"Invalid time\");"},{"lineNumber":148,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"binbinhui"},"content":"        return time;"},{"lineNumber":152,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":154,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":154}},{"path":"src/main/java/command/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"public class Time {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public Time(){"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time){"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"            System.out.println(date + \" is valid date format\");"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    public Date timeConverter(String time) throws ParseException {"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        Date date \u003d formatter.parse(dateInString);"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        //System.out.println(date);"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        return date;"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":39}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import tasks.Tasks;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * This is a storage class and file read and write. All data will be handle down here."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private String filePath;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    private ArrayList commandName;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public Storage() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        this.commandName \u003d new ArrayList(100);"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        this.filePath\u003d\"/Users/linbinhui/Documents/TIC4001/data/duke.txt\";"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public void setCommandName(Tasks obj){"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        commandName.add(obj);"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    public void setCommandName(String obj){"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        commandName.add(obj);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    public ArrayList getCommandName(){"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            return commandName;"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    public ArrayList getCommandName1(){"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        return new ArrayList(commandName);"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    // fild checker, check whether the file is create or not"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    private void fileChecker() {"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"    // save the tasks into the txt file"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"    public void saveToFile() {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            fileChecker();"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath, false);"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                //System.out.println(task.toString());"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                String obj \u003d task.toString().replace(\"]\", \"|\").replace(\"[\", \"\")"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                        .replace(\"x\", \"0\").replace(\"c\", \"1\");"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                myWriter.write(obj+\"\\n\");"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            myWriter.close();"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Successfully wrote to the file.\");"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"    // read the task from the current file on the system"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"    public void readFromFile(){"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"                divider(data);"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"            myReader.close();"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"    // convert the data from file into wanted form."},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"    private void divider(String data){"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"        String[] words\u003ddata.split(\"\\\\|\");"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"        String word0\u003dwords[0];"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"        String word1\u003dwords[1];"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"        if(word1.equals(\"0\")){"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"            word1\u003d\"x\";"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"        else {"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"            word1\u003d\"c\";"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"        String word2\u003dwords[2];"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"        String word3\u003dwords[3];"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"        data \u003d \"[\" + word0 + \"]\" + \"[\" + word1 + \"]\" + word2 + \"|\" + word3;"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"        setCommandName(data);"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":111}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * adding deadline task"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Deadline extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public Deadline(String description, String time){"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super(description, time);"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        super.type\u003d \"[D]\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public String toString(){"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        return type + status +\" \"+description +\" | \" + time;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * adding event task"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Event extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public Event(String description, String time){"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        super(description, time);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super.type\u003d\"[E]\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public String toString(){"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        return type + status +\" \"+description + \" | \" + time;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is a class to manage all the tasks"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" *"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    protected String status;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    protected String description;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    protected String time;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    protected boolean isDone;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    protected String type;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public Tasks(String description, String time){"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        this.description\u003ddescription;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        this.status\u003d\"[x]\";"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        this.time\u003dtime;"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        this.isDone\u003dfalse;"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public String toString(){"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        return status +\" \"+description;"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":30}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" * adding todo task"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Todo extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"  public Todo(String description, String time){"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"      super(description, time);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"      super.type\u003d \"[T]\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"  public String toString(){"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"             return type + status + \" \" + description + \" | \" + time;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    public Ui(){"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    // welcome come msg for the UI"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public void welcome(){"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"            String logo \u003d \" ____        _        \\n\""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    // divider for each line"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public void divider(){"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"-----------------------------------------------------------------\");"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    // options to choose the feature"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    public void tasks() {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        divider();"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"help       -Check the user manual\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"todo       -Add a to do task\");"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"event      -Add an event \");"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"deadline   -Add a deadline task\");"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"list       -List all task\");"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"done       -Mark a task to be done\");"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"delete     -Delete a task\");"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"find       -Find a task contain the key word\");"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"bye        -Exit the task\");"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        divider();"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    // add time msg"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"    public void time(){"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800\");"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    public void addTask(){"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"Task has been added\");"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"    // user input"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"    public String input(){"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        Scanner myObj \u003d new Scanner(System.in);"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"        return myObj.nextLine();"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"    // good bye msg"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"    public void goodBye(){"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"        divider();"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"    public void showLoadingError(){"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"file not exsit\");"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":74}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"//import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import command.Time;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import tasks.Deadline;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import tasks.Event;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class DukeTest {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"//    @Test"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"//    public void dummyTest(){"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"//        assertEquals(2,2);"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"//    @Test"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"//    public void timeValidator() throws ParseException {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"//        Time time \u003d new Time();"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"//        //time.timeChecker(\"2/12/2019 1800\");"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"//        assertEquals(true,time.timeChecker(\"2/12/2019 1800\"));"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"//        assertEquals(\"Mon Dec 02 18:00:00 SGT 2019\", time.timeConverter(\"2/12/2019 1800\").toString());"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"//    @Test"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"//    public void todoTest(){"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"//        Todo todo \u003d new Todo(\"Read Book\", \"\");"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"//        assertEquals(\"[T][x] Read Book\",todo.toString());"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"//    @Test"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"//    public void deadlineTest(){"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"//        Deadline deadline \u003d new Deadline(\"Read Book\", \"2/12/2019 1800\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"//        assertEquals(\"[D][x] Read Book | 2/12/2019 1800\",deadline.toString());"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"//    @Test"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"//    public void eventTest(){"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"//        Event event \u003d new Event(\"Read Book\", \"2/12/2019 1800\");"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"//        assertEquals(\"[E][x] Read Book | 2/12/2019 1800\",event.toString());"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"//"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"//    }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"help"}],"authorContributionMap":{"binbinhui":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"binbinhui":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"binbinhui":1}}]
