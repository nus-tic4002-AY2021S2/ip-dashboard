[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"repositories {"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    mavenCentral()"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    jcenter()"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"compileJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"compileTestJava.options.encoding \u003d \"UTF-8\""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"dependencies {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    testCompile \u0027junit:junit:4.12\u0027"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    compile \u0027junit:junit:4.12\u0027"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    compile group: \u0027com.sun.mail\u0027, name: \u0027javax.mail\u0027, version: \u00271.6.2\u0027"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    testLogging {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"jar{"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    manifest {"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        attributes("},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"                \u0027Main-Class\u0027: \u0027Launcher\u0027"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        )"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"run {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"    enableAssertions \u003d true"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"application {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"shadowJar {"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"    //archiveBaseName \u003d \"duke\""},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"    //archiveClassifier \u003d null"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"checkstyle {"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"run{"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"    standardInput \u003d System.in"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":77}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"D|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"T|0| haha  | 12/12/2001 1800  | haha@gmail.1om"}],"authorContributionMap":{"binbinhui":5}},{"path":"docs/AboutMe.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"# About me"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"Display | Name | Project Portfolio Pages"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"--------|:----:|:--------------:"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Lin Binhui | https://binbinhui.github.io/ip/Ui.png"}],"authorContributionMap":{"binbinhui":5}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"## Design \u0026 implementation"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"This product is an personal use project that helps user to keep track of his daily tasks."},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"## Design"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"### UML diagram "},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"![UML Diagram](images/IP.png) "},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"### Sequence diagram"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"![Sequence Diagram](images/Ip2.png)"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"### Ui picture"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"![Ui png](images/GUI.png)"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"## Product scope"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"### Target user profile"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"The target user is a busy person who can keep tracking his daily tasks, know the deadline of each task and complete the task within the deadline."},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"### Value proposition"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"Project Duke will help to solve to tracking and managing tasks. It will involve description of each task. "},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"## User Stories"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"|v3.0|new user|see usage instructions|refer to them when I forget how to use the application|"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|create a task|put in the task information|"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|add date and time for deadline tasks| remind myself and complete the task within the deadline|"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|add date and time for event tasks| remind myself and attend the task with specific date and time|"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|add the description to the task|know what is the task about|"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|save my project in a txt file|keep a record for reference|"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|delete my project| reduce the clutter|"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|have a abbreviation and status of different types of task|have a quick look for each types of tasks| |"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|show a total number of tasks|remind myself and have a timeframe for tasks|"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|know the same description of different tasks|find a relevant task with relevant description|"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|catch all input exceptions | ensure is valid input in send|"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|create done command to set a task to complete| ensure task can update to be done|"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|send me the reminder of the tasks when the deadline is close| so that i will been notify|"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"|v3.0|busy person|fix all checkstyle errors| inorder to pass the CI test|"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"## Non-Functional Requirements"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"* Operation Environment: Project Duke works on any Mainstream OS as long as it has Java **11** or above installed. "},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"* Usability: A command line interface application, user will use specified command to interact with the system."},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"* Capacity: Project Duke should be able to record at least 1,000 project records. "},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"* Reliability / Availability: Once the project Duke has been successfully deployed on user\u0027s computer, availability is 24/7.   "},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"* Scalability: The current version of project Duke only support local data file storage, users are unable to share a centralised project data."},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"               If the need of having a centralised data storage raised in the future, it can be added as system enhancement. "},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"* Security: User login is being not required by user. The project Duke use user\u0027s computer login as authentication."},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"* Maintainability: A updated JAR file will be released to user if there is any update to the current version of the project tracker.                 "},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"               "},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"## Glossary"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"* Mainstream OS * - Windows, Mac and Linux"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"## Instructions for manual testing"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"Start the program"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"*    1. Download the Jar file and copy into an empty folder"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"*    2. Use terminal/CMD to run jar file with `java -jar` command."},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"*    3. type exit command or double enter to exit the program."}],"authorContributionMap":{"binbinhui":67}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"![Image of Todolist](https://github.com/binbinhui/ip/blob/master/docs/94735-istock-863607936.jpg)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"# Tasks Tracker"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"Tasks Tracker is a desktop app for managing and tracking projects,  optimized for use via GUI. It will help the user to track all his tasks and remind user if the task\u0027s deadline is less than 7 days."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"Useful links:"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"* [About Me](AboutMe.md)"}],"authorContributionMap":{"binbinhui":7,"-":3}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"# User Guide - The Duke Who Manages Tasks"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"A Personal Assistant Chatbot that helps a person to keep track of various things. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"1. Open Intellij (if you are not in the welcome screen, click: `File` \u003e: `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"   1. Click: `Configure` \u003e: `Structure for New Projects` and then: `Project Settings` \u003e: `Project` \u003e: `Project SDK`"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click: `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"   1. Click: `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"   1. Click: `Open or Import`."},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"   1. Select the project directory, and click: `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"1. After the importing is complete, locate the: `src/main/java/Launcher.java` file, right-click it, and choose: `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"   "},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"   ![GUI](images/GUI.png)"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"## Features  "},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"  - Command line manual    : `help`"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"  - Create a Todo task     : `todo`"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"  - Create a Deadline task : `deadline`"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"  - Create an Event task   : `event`"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"  - Complete a task        : `done`"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"  - Delete a task          : `delete`"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"  - List all tasks         : `list`"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"  - Find tasks with word   : `find`"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"  - send a email to user   : `send`"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"  - Save the task          : `save`"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"  "},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":" #### Help    : `help`"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":" A mannul to guide the user."},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":" Format: `--help`"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":" - `--help`"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"    "},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":" #### Create a Todo task    : `todo`"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":" Creates a Todo task and adds it to the task list."},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":" Format: `--todo --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com`"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":" - description, date and email must fill up."},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":" - date and email must be in a valid format."},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":" - `--todo --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":" #### Create a Deadline task: `deadline`"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":" Creates a Deadline task and adds it to the task list."},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":" Format: `--deadline --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com`"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":" - description, date and email must fill up."},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":" - date and email must be in a valid format."},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":" - `--deadline --description finish on homework --date 12/2/2002 1900 -email hellokitty@gmail.com`"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":" #### Create an Event task  : `event`"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":" Creates an Event task and adds it to the task list."},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":" Format: `--event --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com`"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":" - description, date and email must fill up."},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":" - date and email must be in a valid format."},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"  "},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":" - `--event --description TV show --date 12/2/2002 2000 -email hellokitty@gmail.com`"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":" #### Complete a task       : `done`"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":" Completes a task and sets its status to D for Done."},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":" Format: `--done \u003cindex\u003e`"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":" - The first task starts from index number 1 and so on."},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":" - Only numeric allow"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"   "},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":" - `done 2`"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":" #### Delete a task         : `delete`"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":" Removes a task and its note from the task list and shifts the remaining tasks accordingly."},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":" Format: `--delete \u003cindex\u003e`"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":" - Only numeric allow"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":" - `delete 1`"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":" #### List down all tasks   : `list`"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":" Lists down all tasks in the task list."},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":" Format: `--list`"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":" #### Find tasks with word  : `find`"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":" Finds all tasks that matches with the search word(s)."},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":" Format: `--find --\u003ckeyword\u003e`"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":" - `find` command apply on all the data in the database as long the keyword is matched."},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":" - `--find TV`"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":" - `--find 28/12`"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":" - `--find hellokitty@hotmail.com`"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":" #### Add a note to a task  : `send`"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":" Send a email of the task to user when the due date last than 7 days for reminder or sending a email of the task to user for record purpose."},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":" Format: `--send \u003cindex\u003e`"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":" Examples:"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":" - `--send 1`"},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":" #### Exit the program       : `save`"},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":" save all the new changes to txt file."},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":" IMPORTANT: Please always save your changes before you close. If not nothing will be record."},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":" Format: `--save`"},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":" "},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":" ## Command Summary"},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":" Action | Format, Examples"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":" ------------ | -------------"},{"lineNumber":124,"author":{"gitId":"binbinhui"},"content":" **help**|`--help`"},{"lineNumber":125,"author":{"gitId":"binbinhui"},"content":" **todo**|`--todo --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com` \u003cbr\u003e e.g. `--todo --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":" **deadline**|`--deadline --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com` \u003cbr\u003e e.g. `--deadline --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":" **event**|`--event --description INPUT --date dd/mm/yyyy hhmm -email xxxxx@gmail.com` \u003cbr\u003e e.g. `--event --description going to school --date 12/12/2001 0800 -email hellokitty@gmail.com`"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":" **done**|`--done \u003cindex\u003e` \u003cbr\u003e e.g. `--done 1`"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":" **delete**|`--delete \u003cindex\u003e` \u003cbr\u003e e.g. `--delete 1`"},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":" **list**|`--list`"},{"lineNumber":131,"author":{"gitId":"binbinhui"},"content":" **find**|`--find \u003ckeyword\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `--find TV` \u003cbr\u003e `--find 28/11` \u003cbr\u003e `--find hellokitty@hotmail.com`"},{"lineNumber":132,"author":{"gitId":"binbinhui"},"content":" **send**|`--send \u003cindex\u003e` \u003cbr\u003e e.g. \u003cbr\u003e `--send 1`"},{"lineNumber":133,"author":{"gitId":"binbinhui"},"content":" **save**|`--save`"}],"authorContributionMap":{"binbinhui":124,"-":9}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"1. [X] [Todo]     Create a note for this task"},{"lineNumber":2,"content":"       [Note]     haha"},{"lineNumber":3,"content":""}],"authorContributionMap":{"null":2,"binbinhui":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":":end"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":":omega"}],"authorContributionMap":{"binbinhui":89}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"public class Launcher {"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":11}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.MainWindow;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startDuke(duke);"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":33}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":" *"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * @author Lin Binhui"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private final ArrayList commandName \u003d new ArrayList();"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    private final Storage storage \u003d new Storage(\"/Users/linbinhui/biomindrepo/impala/data/duke.txt\", commandName);"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    boolean isLoad \u003d false;"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    String getResponse(String input) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        final Parser parser \u003d new Parser();"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        // load the current file"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        if (isLoad \u003d\u003d false) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            storage.readFromFile();"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            isLoad \u003d true;"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        Command command \u003d parser.parserInput(input, ui, storage, commandName);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        return command.execute();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    String getWelcome() {"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        return ui.welcome();"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"binbinhui":36,"-":2}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    public void startDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        initializeDuke();"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"    public void initializeDuke() {"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"        String greetings \u003d duke.getWelcome();"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                DialogBox.getDukeDialog(greetings, dukeImage)"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":62}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * An abstract class that is inherited by every command."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"public abstract class Command {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public String line;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public Ui ui;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public Storage storage;"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public ArrayList commandName;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    protected Command() {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    protected Command(Ui ui) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    protected Command(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        this.line \u003d line;"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        this.storage \u003d storage;"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        this.commandName \u003d commandName;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    public abstract String execute();"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":40}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * A command to create a Deadline."},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--deadline\";"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public DeadlineCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        ArrayList\u003cString\u003e newProject \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"description\");"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"date\");"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"email\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        String[] splits \u003d line.split(\"--\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        boolean hasMistake \u003d false;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        String error \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        for (String command : newProject) {"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            if (!line.contains(\"--\" + command)) {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                error \u003d error.concat(\"The command line is missing for --\" + command + \"\\n\");"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"                hasMistake \u003d true;"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        if (hasMistake) {"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            return error + \"Please create the project in the correct format:\\n\""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"                    + \"--todo --description INPUT --date dd/MM/yyyy hhmm --email INPUT\";"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        String description \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        String date \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        for (int num \u003d 1; num \u003c splits.length; num++) {"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"description\")) {"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"                description \u003d arr[1];"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"date\")) {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                if (timeChecker(arr[1])) {"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                    date \u003d arr[1];"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Date Format\u003e\u003e\";"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"email\")) {"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"                if (!(arr[1].matches(\"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\"))) {"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Email Format\u003e\u003e\";"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"                    email \u003d arr[1];"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"        commandName.add(new duke.tasks.Deadline(description, date, email));"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"        return ui.description(line);"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time) {"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":90}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to delete task."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--delete\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public DeleteCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            if (commandName.isEmpty()) {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            } else {"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                String clean \u003d obj[1].replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                int num \u003d Integer.parseInt(clean);"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                if (num \u003c\u003d commandName.size()) {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                    int num1 \u003d num - 1;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                    commandName.remove(num1);"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                    return commandName.get(num1).toString() + \" has been deleted\";"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Input, There are only \" + commandName.size() + \" tasks\u003e\u003e\";"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cPlease enter a numeric input\u003e\u003e\";"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":47}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * A command to mark a task to be done."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--done\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public DoneCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            if (commandName.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"                return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                String clean \u003d obj[1].replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                int num \u003d Integer.parseInt(clean);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                if (num \u003c\u003d commandName.size()) {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                    int num1 \u003d num - 1;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                    String makeDone \u003d commandName.get(num1).toString();"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                    commandName.set(num1, makeDone.replace(\"x\", \"c\"));"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                    return makeDone.replace(\"x\", \"c\") + \" has been set to done\";"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Input, There are only \" + commandName.size() + \" tasks\u003e\u003e\";"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cPlease enter a numeric input\u003e\u003e\";"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":45}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * A command to create a Event task."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class EventCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--event\";"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public EventCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        ArrayList\u003cString\u003e newProject \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"description\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"date\");"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"email\");"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        String[] splits \u003d line.split(\"--\");"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        boolean hasMistake \u003d false;"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        String error \u003d \"\";"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        for (String command : newProject) {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            if (!line.contains(\"--\" + command)) {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"                error \u003d error.concat(\"The command line is missing for --\" + command + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                hasMistake \u003d true;"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        if (hasMistake) {"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"            return error + \"Please create the project in the correct format:\\n\""},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"                    + \"--todo --description INPUT --date dd/MM/yyyy hhmm --email INPUT\";"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        String description \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        String date \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"        for (int num \u003d 1; num \u003c splits.length; num++) {"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"description\")) {"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"                description \u003d arr[1];"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"date\")) {"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                if (timeChecker(arr[1].toString())) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                    date \u003d arr[1];"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Date Format\u003e\u003e\";"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"email\")) {"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"                if (!(arr[1].matches(\"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\"))) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Email Format\u003e\u003e\";"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"                    email \u003d arr[1];"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"        commandName.add(new duke.tasks.Event(description, date, email));"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        return ui.description(line);"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time) {"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":93}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to find the keyword."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--find\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public FindCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        if (commandName.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            String output \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"            String temp \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            int number \u003d 0;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                if (task.toString().contains(obj[1])) {"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                    temp \u003d ui.dataConverter(task.toString());"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                    output \u003d output.concat(number + 1 + \"\\n\" + temp + \"\\r\");"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"                    output \u003d \"\u003c\u003cNo matching.\u003e\u003e\";"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                number++;"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            return output + \"\\nTotal has \" + number + \" matched found.\";"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":47}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * A command to help user if he /she not familiar with the command line."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"public class HelpCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--help\";"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public HelpCommand(Ui ui) {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        super(ui);"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        return ui.tasks();"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":23}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":" * A command which user has key in wrong command line."},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    public InvalidCommand() {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        return \"\u003c\u003cInvalid Command. Please refer to --help\u003e\u003e\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":15}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" * A command to list down all the tasks."},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--list\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public ListCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        if (commandName.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"            return \"No data in the database\";"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            int number \u003d 1;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            String data \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            String temp \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                temp \u003d ui.dataConverter(task.toString());"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                data \u003d data.concat(number + \"\\n\" + temp + \"\\r\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                number++;"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            return data;"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":36}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to save the recent change task from array into txt file."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class SaveCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--save\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public SaveCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        storage.saveToFile(commandName);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        return ui.saveMsg();"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":27}},{"path":"src/main/java/duke/command/SendCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.reminder.SendEmail;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * A command to send a email to user."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class SendCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--send\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public SendCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            String[] obj \u003d line.split(\" \", 2);"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            if (commandName.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"                return \"\u003c\u003cNo data in the database\u003e\u003e\";"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                String clean \u003d obj[1].replaceAll(\"\\\\D+\", \"\");"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                int num \u003d Integer.parseInt(clean);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                String[] data \u003d commandName.get(num - 1).toString().split(\"\\\\|\");"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                String email \u003d data[2].trim();"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                System.out.println(email);"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                new SendEmail(email, ui.dataConverter(commandName.get(num - 1).toString()));"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                return \"Email has been send to \" + email;"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"            return \"\u003c\u003cPlease enter a numeric input\u003e\u003e\";"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":44}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.tasks.Todo;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * A command to create a todo task."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"public class TodoCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"--todo\";"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    public TodoCommand(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        super(line, ui, storage, commandName);"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        System.out.println(line);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        ArrayList\u003cString\u003e newProject \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"description\");"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"date\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        newProject.add(\"email\");"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        String[] splits \u003d line.split(\"--\");"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        boolean hasMistake \u003d false;"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        String error \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        for (String command : newProject) {"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"            if (!line.contains(\"--\" + command)) {"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"                error \u003d error.concat(\"The command line is missing for --\" + command + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"                hasMistake \u003d true;"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        if (hasMistake) {"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"            return error + \"Please create the project in the correct format:\\n\""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                    + \"--todo --description INPUT --date dd/MM/yyyy hhmm --email INPUT\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        String description \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"        String date \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"        for (int num \u003d 1; num \u003c splits.length; num++) {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"description\")) {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                description \u003d arr[1];"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"date\")) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"                if (timeChecker(arr[1].toString())) {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                    date \u003d arr[1];"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Date Format\u003e\u003e\";"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            if (splits[num].contains(\"email\")) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                String[] arr \u003d splits[num].split(\" \", 2);"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                if (!(arr[1].matches(\"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\"))) {"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"                    return \"\u003c\u003cInvalid Email Format\u003e\u003e\";"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"                } else {"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"                    email \u003d arr[1];"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"        commandName.add(new Todo(description, date, email));"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"        return ui.description(line);"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"    public boolean timeChecker(String time) {"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            Date date \u003d formatter.parse(dateInString);"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"            return false;"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"        return true;"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":96}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * An abstract class that is inherited by every command."},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    public String line;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public Ui ui;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public Database database;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    protected Command(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        this.database \u003d database;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    protected Command(String line, TaskList tasks, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        this.line \u003d line;"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    protected Command(TaskList tasks, Ui ui) {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    protected Command(Ui ui) {"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        this.ui \u003d ui;"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"    public abstract String execute();"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":39}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * A command to create a Deadline task that has a deadline."},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"deadline\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public DeadlineCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"     * Changes the format of the whole line into proper task format."},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public String reformatLine(String type, String keyword, String line) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        return type + line;"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    public String reformatDateTime(String dateTime) throws DateTimeParseException {"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(dateTime, formatter);"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"));"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            if (line.isEmpty() || !line.contains(\"/by\")) {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"                return \"You\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\r\""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            String description \u003d line.split(\"/by \")[0];"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            String dateTime \u003d line.split(\"/by \")[1];"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            if (description.isEmpty() || dateTime.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"                return \"You\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\r\""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"            line \u003d description + \"/by \" + reformatDateTime(dateTime);"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            line \u003d reformatLine(\"[Deadline] \", \"by\", line);"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"            tasks.add(new Deadline(line));"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            return e.getMessage();"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            return \"You\u0027ve missed out the deadline time!\\r\""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                + \"Please type in something for \u003cdd/MM/yyyy HHmm\u003e after \u0027deadline \u003csomething\u003e /by\u0027.\";"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"            return \"You didn\u0027t enter the time in the right format!\\r\""},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                + \"Type in the \u0027deadline \u003csomething\u003e /by \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":68}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to set a particular task as completed."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public DeleteCommand(String taskDescription, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        super(taskDescription, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"                return \"You don\u0027t have any tasks you dolt, so you can\u0027t delete any!\\r\""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"                    + \"Go create one first!\";"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            if (line.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"                return \"You almost typed a proper delete command, but you missed out the number!\\r\""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027delete \u003ctask index number\u003e\u0027 format, you dolt!\";"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            int index \u003d Integer.parseInt(line);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"            String message \u003d ui.printTaskRemoved(tasks, index);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            tasks.remove(index);"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"            return message;"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"            return e.getMessage();"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            return"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                \"Type a number for the index, you fool!\";"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            return \"You only have \" + tasks.size() + \" task(s) in your list,\\r\""},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                + \"why can\u0027t you type an index number from 1 to \" + tasks.size() + \"?\";"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":46}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to set a particular task as completed."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public DoneCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"                return \"You don\u0027t have any tasks you dolt, so you can\u0027t complete any!\\r\""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"                    + \"Go create one first!\";"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            if (line.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"                return \"You almost typed a proper done command, but you missed out the number!\\r\""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027done \u003ctask index number\u003e\u0027 format, you dolt!\";"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            int index \u003d Integer.parseInt(line);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"            tasks.get(index - 1).setDone();"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            return ui.printTaskCompleted(index, tasks);"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            return e.getMessage();"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"            return"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"                \"Type a number for the index, you fool!\";"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            return \"You only have \" + tasks.size() + \" task(s) in your list,\\r\""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"                + \"why can\u0027t you type an index number from 1 to \" + tasks.size() + \"?\";"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":45}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * A command that is similar to a Deadline task but with a different time keyword \u0027/at\u0027 and has a time duration."},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class EventCommand extends DeadlineCommand {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"event\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public EventCommand(String taskDescription, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        super(taskDescription, tasks, ui, database);"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"     * Changes the format of the whole line into proper task format."},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public String reformatLine(String type, String keyword, String keyword2, String line) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        line \u003d line.replace(\"/\" + keyword2, \"-\");"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        return type + line;"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    public String reformatTime(String time) throws DateTimeParseException {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        LocalTime date \u003d LocalTime.parse(time, formatter);"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"h:ma\"));"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    public String execute() {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            if (line.isEmpty() || !line.contains(\"/at\") || !line.contains(\"/to\")) {"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                return \"You\u0027ve missed out the required keyword(s)!\\r\""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            String description \u003d line.split(\"/at \")[0];"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"            String startDateTime \u003d line.split(\"/at \")[1].split(\" /to \")[0];"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            String endTime \u003d line.split(\"/at \")[1].split(\" /to \")[1];"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"            if (description.isEmpty() || startDateTime.isEmpty() || endTime.isEmpty()) {"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"                return \"You\u0027ve missed out the task description or the start and end duration!\\r\""},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e /to \u003cHHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"            startDateTime \u003d reformatDateTime(startDateTime);"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"            endTime \u003d reformatTime(endTime);"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            line \u003d description + \"/at \" + startDateTime + \" /to \" + endTime;"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            line \u003d reformatLine(\"[Event]    \", \"at\", \"to\", line);"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            tasks.add(new Event(line));"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"            return e.getMessage();"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            return \"You\u0027ve missed out the event duration!\\r\""},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                + \"Please type in something for \u003cdd/MM/yyyy HHmm\u003e after \u0027event \u003csomething\u003e /at\u0027.\";"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            return \"You didn\u0027t enter the time in the right format!\\r\""},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                + \"Type in the \u0027event \u003csomething\u003e /at \u003cdd/MM/yyyy HHmm\u003e\u0027 format, you dolt!\";"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":72}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":" * A command to exit the program."},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    public ExitCommand(Ui ui) {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"        super(ui);"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        return ui.printFarewell();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":17}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * A command to print out all tasks that matches the search word."},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"find\";"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public FindCommand(String line, TaskList tasks, Ui ui) {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super(line, tasks, ui);"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String searchWord \u003d line.trim();"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"            return \"You don\u0027t have any tasks you dolt, so you can\u0027t find any!\\r\""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"                + \"Go create one first!\";"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        if (searchWord.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            return \"Type in the \u0027find \u003cword\u003e\u0027 format, you dolt!\";"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        String matches \u003d \"Here\u0027s the tasks that contains \u0027\" + searchWord + \"\u0027. Satisfied?\\r\";"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        boolean hasMatch \u003d false;"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            if (tasks.get(i).getDescription().toLowerCase().contains(searchWord)) {"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                matches \u003d matches.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + System.lineSeparator();"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                hasMatch \u003d true;"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        if (!hasMatch) {"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            matches \u003d \"There\u0027s no matches for \u0027\" + searchWord + \"\u0027!\\r\""},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                + \"Go find something else!\";"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        return matches;"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":41}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":" * A command that handles invalid commands."},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"    public InvalidCommand(Ui ui) {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"        super(ui);"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        return ui.printInvalidCommand();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":17}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * A command to print out all tasks in the list."},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"list\";"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public ListCommand(TaskList tasks, Ui ui) {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        super(tasks, ui);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"            return \"You don\u0027t have any tasks you dolt, so there\u0027s no list!\\r\""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"                + \"Go create a task first!\";"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        String total \u003d \"Here\u0027s the list of your tasks, you peasant.\\r\\r\";"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"            total \u003d total.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + \"\\r\\r\";"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        return total;"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":28}},{"path":"src/main/java/duke/commands/NoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" * A command to add a note to an existing task."},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class NoteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"note\";"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public NoteCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"                return \"You don\u0027t have any tasks you dolt, so you can\u0027t add a note to anything!\\r\""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"                    + \"Go create a task first!\";"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            String indexText \u003d line.trim().split(\" \")[0];"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            String noteText \u003d line.substring(line.indexOf(\" \") + 1).trim();"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            int index \u003d Integer.parseInt(indexText);"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"            if (noteText.equals(indexText)) {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                return \"You\u0027ve missed out the note text!\\r\""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027note \u003cindex\u003e \u003ctext\u003e\u0027 format, you dolt!\";"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            tasks.get(index - 1).setNote(noteText);"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"            return ui.printNoteAdded(tasks, index);"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            return e.getMessage();"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"            return \"Type a number for the index, you fool!\";"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            return \"You only have \" + tasks.size() + \" task(s) in your list,\\r\""},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"                + \"why can\u0027t you type an index number from 1 to \" + tasks.size() + \"?\";"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":49}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.database.Database;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":" * A command to create a simple Todo task."},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"public class TodoCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String word \u003d \"todo\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    public TodoCommand(String line, TaskList tasks, Ui ui, Database database) {"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        super(line, tasks, ui, database);"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public String execute()  {"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"            if (line.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"                return \"You missed out the task description!\\r\""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"                    + \"Type in the \u0027todo \u003csomething\u003e\u0027 format, you dolt!\";"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            line \u003d \"[Todo]     \" + line;"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            tasks.add(new Todo(line));"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"            database.updateDatabase(tasks);"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            return ui.printTaskAdded(tasks);"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"            return e.getMessage();"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":36}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import duke.command.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import duke.command.EventCommand;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import duke.command.FindCommand;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import duke.command.HelpCommand;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import duke.command.InvalidCommand;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import duke.command.SaveCommand;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import duke.command.SendCommand;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import duke.command.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":" * A command handler, redirect all the commandline."},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"public class Parser {"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public Command parserInput(String line, Ui ui, Storage storage, ArrayList commandName) {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        String commandWord \u003d line.trim().split(\" \", 2)[0];"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        System.out.println(commandWord);"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        switch (commandWord) {"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        case HelpCommand.word:"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"            return new HelpCommand(ui);"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        case TodoCommand.word:"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            return new TodoCommand(line, ui, storage, commandName);"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        case DeadlineCommand.word:"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"            return new DeadlineCommand(line, ui, storage, commandName);"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        case EventCommand.word:"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"            return new EventCommand(line, ui, storage, commandName);"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        case FindCommand.word:"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            return new FindCommand(line, ui, storage, commandName);"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        case SendCommand.word:"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"            return new SendCommand(line, ui, storage, commandName);"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        case DoneCommand.word:"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            return new DoneCommand(line, ui, storage, commandName);"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        case DeleteCommand.word:"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            return new DeleteCommand(line, ui, storage, commandName);"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        case ListCommand.word:"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"            return new ListCommand(line, ui, storage, commandName);"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        case SaveCommand.word:"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"            return new SaveCommand(line, ui, storage, commandName);"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"        default:"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"            return new InvalidCommand();"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":59}},{"path":"src/main/java/duke/reminder/SendEmail.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.reminder;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Message;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Session;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import javax.mail.MessagingException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import javax.mail.PasswordAuthentication;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Transport;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javax.mail.internet.InternetAddress;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import javax.mail.internet.MimeMessage;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import java.util.Properties;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * This is a email class where sending out the mail to user."},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" * Credit goes to https://pepipost.com/tutorials/send-email-in-java-using-gmail-smtp/"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"public class SendEmail {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    String receiver;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    String messages;"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    public SendEmail(String receiver, String message) {"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        this.receiver \u003d receiver;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        this.messages \u003d message;"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        sendEmail();"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    public void sendEmail() {"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        // Recipient\u0027s email ID needs to be mentioned."},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        String to \u003d receiver;"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        // Sender\u0027s email ID needs to be mentioned"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        String from \u003d \"TaskTracker@roject.com\";"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        // Assuming you are sending email from through gmail smtp"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        String host \u003d \"smtp.gmail.com\";"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        // Get system properties"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        Properties properties \u003d System.getProperties();"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        // Setup mail server"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.host\", host);"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.port\", \"465\");"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.ssl.enable\", \"true\");"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.auth\", \"true\");"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        // Get the Session object.// and pass username and password"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        Session session \u003d Session.getInstance(properties, new javax.mail.Authenticator() {"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            protected PasswordAuthentication getPasswordAuthentication() {"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"                return new PasswordAuthentication(\"takeaways2017@gmail.com\", \"1QazxsW23Edc\");"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        });"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"        // Used to debug SMTP issues"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"        session.setDebug(true);"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            // Create a default MimeMessage object."},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"            MimeMessage message \u003d new MimeMessage(session);"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            // Set From: header field of the header."},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            message.setFrom(new InternetAddress(from));"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            // Set To: header field of the header."},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"            // Set Subject: header field"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"            message.setSubject(\"The New Project\");"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"            // Now set the actual message"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"            message.setText(\"Hi \\n\" + \"This Task has been send you as a notification.\\n\\n\" + messages"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"                    + \"\\n\\n Best regards \\n Task Tracker\");"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"sending...\");"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"            // Send message"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"            Transport.send(message);"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Sent message successfully....\");"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        } catch (MessagingException mex) {"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"            mex.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":""}],"authorContributionMap":{"binbinhui":91}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.reminder.SendEmail;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.tasks.Tasks;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import java.util.Calendar;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"import java.util.Locale;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":" * This is a storage class and file read and write. All data will be handle down here."},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    private String filePath;"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    private ArrayList commandName;"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public Storage(String filePath, ArrayList commandName) {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        this.commandName \u003d commandName;"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    // fild checker, check whether the file is create or not"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    private void fileChecker() {"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    // save the tasks into the txt file"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    public void saveToFile(ArrayList commandName) {"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"            fileChecker();"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath, false);"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"            for (Object task : commandName) {"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                //System.out.println(task.toString());"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"                String obj \u003d task.toString().replace(\"]\", \"|\").replace(\"[\", \"\")"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"                        .replace(\"x\", \"0\").replace(\"c\", \"1\");"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"                myWriter.write(obj + \"\\n\");"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"            myWriter.close();"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Successfully wrote to the file.\");"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"File does not exist.\");"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"    // read the task from the current file on the system"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"    public void readFromFile() {"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            fileChecker();"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                divider(data);"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"            myReader.close();"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"File does not exist.\");"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"    // convert the data from file into wanted form."},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"    private void divider(String data) {"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"        String[] words \u003d data.split(\"\\\\|\");"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"        String word0 \u003d words[0];"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        String word1 \u003d words[1];"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        if (word1.equals(\"0\")) {"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            word1 \u003d \"x\";"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            word1 \u003d \"c\";"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        String word2 \u003d words[2];"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"        String word3 \u003d words[3];"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"        String word4 \u003d words[4];"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"        data \u003d \"[\" + word0 + \"]\" + \"[\" + word1 + \"]\" + word2 + \"|\" + word3 + \"|\" + word4;"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"        if (diff(word3) \u003c\u003d 7) {"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"            new SendEmail(word3.trim(), data);"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"        commandName.add(data);"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"    public int diff(String time) {"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"        String dateInString \u003d time;"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"        Date date \u003d null;"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"            date \u003d formatter.parse(dateInString);"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"        } catch (ParseException e) {"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"        long mill1 \u003d date.getTime();"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"        Date today \u003d Calendar.getInstance().getTime();"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"        long mill2 \u003d today.getTime();"},{"lineNumber":113,"author":{"gitId":"binbinhui"},"content":"        int days \u003d 0;"},{"lineNumber":114,"author":{"gitId":"binbinhui"},"content":"        if (mill2 \u003c mill1) {"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":"            long diff \u003d mill1 - mill2;"},{"lineNumber":116,"author":{"gitId":"binbinhui"},"content":"            days \u003d (int) (diff / (1000 * 60 * 60 * 24));"},{"lineNumber":117,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"binbinhui"},"content":"        return days;"},{"lineNumber":119,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":122}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * adding deadline task"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Deadline extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public Deadline(String description, String time, String email) {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super(description, time, email);"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        super.type \u003d \"[D]\";"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        return type + status + \" \" + description + \" | \" + time + \" | \" + email;"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * adding event task"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Event extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public Event(String description, String time, String email) {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        super(description, time, email);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super.type \u003d \"[E]\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        return type + status + \" \" + description + \" | \" + time + \" | \" + email;"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"}"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":""}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/duke/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":" * An abstract class that is inherited by the duke.task.Todo, Deadline and Event classes."},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"public class Tasks {"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    protected String status;"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    protected String description;"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    protected String time;"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    protected String type;"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    protected String email;"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public Tasks(String description, String time, String email) {"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        this.status \u003d \"[x]\";"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        this.time \u003d time;"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        this.email \u003d email;"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        return status + \" \" + description;"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":31}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":" * This is extend class inherited from Tasks."},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":" * adding todo task"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":" */"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class Todo extends Tasks {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    public Todo(String description, String time, String email) {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        super(description, time, email);"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        super.type \u003d \"[T]\";"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        return type + status + \" \" + description + \" | \" + time + \" | \" + email;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":22}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    // welcome come msg for the UI"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public String welcome() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String output \u003d logo + \"\\rHello! I\u0027m Duke\\nWhat can I do for you?\\n\";"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        return output;"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    // options to choose the feature"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public String tasks() {"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        String help \u003d \"\\n--help             -Check the user manual\\n\""},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"                + \"--todo             -Add a to do task\\n\""},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"                + \"--event            -Add an event\\n\""},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"                + \"--deadline       -Add a deadline task\\n\""},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                + \"--list                 -List all task\\n\""},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                + \"--done             -Mark a task to be done\\n\""},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"                + \"--delete           -Delete a task\\n\""},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"                + \"--find             -Find a task contain the key word\\n\""},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"                + \"--send               -send a email to user\\n\""},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"                + \"--save               -Save the task\\n\";"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        return help;"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"    // add time msg"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"    public void time() {"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        System.out.println(\"please add date: dd/mm/yyyy hhmm eg: 2/12/2019 1800\");"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"    // good bye msg"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"    public String saveMsg() {"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        return \"Your recent changed has been save!\";"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"    public String description(String input) {"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        String[] obj \u003d input.split(\"--\");"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"        String output \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"        for (Object data : obj) {"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            String[] temp;"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"todo\")) {"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"This is a todo Task has been added.\\n\");"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"event\")) {"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"This is a event Task has been added.\\n\");"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"deadline\")) {"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"This is a deadline Task has been added.\\n\");"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"description\")) {"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"                temp \u003d data.toString().split(\" \");"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"Description: \" + temp[1]);"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"date\")) {"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"                temp \u003d data.toString().split(\" \", 2);"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"\\nDate: \" + temp[1]);"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"            if (data.toString().contains(\"email\")) {"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"                temp \u003d data.toString().split(\" \");"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"                output \u003d output.concat(\"\\nEmail: \" + temp[1]);"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"        return output;"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"    public String dataConverter(String input) {"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"        String[] obj \u003d input.split(\" \\\\| \", 3);"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        String output \u003d \"\";"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        String[] firstObj \u003d obj[0].toString().split(\" \", 2);"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        if (firstObj[0].contains(\"T\")) {"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"This is a Todo task.\");"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"        } else if (firstObj[0].contains(\"E\")) {"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"This is a Event task.\");"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"This is a Deadline task.\");"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"        if (firstObj[0].contains(\"c\")) {"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"\\nStatus: Done\");"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"            output \u003d output.concat(\"\\nStatus: Undone\");"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"        output \u003d output.concat(\"\\nDescription: \" + firstObj[1]);"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"        output \u003d output.concat(\"\\nDate: \" + obj[1]);"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"        output \u003d output.concat(\"\\nEmail \" + obj[2]);"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"        return output;"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":105}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    \u003c/children\u003e"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    \u003c/padding\u003e"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"binbinhui":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"            prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"758.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"724.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"752.0\" prefWidth\u003d\"788.0\"/\u003e"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"binbinhui":19}},{"path":"src/test/java/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class DeadlineCommandTest {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public void deadlineCommandTest() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--deadline --description haha --date 12/12/2001 1800 --email xxx@hotmail.com\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        //new DoneCommand(input,ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(input, ui, storage, commandName);"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        assertEquals(deadlineCommand.execute(), \"This is a deadline Task has been added.\""},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"               + \"\\nDescription: haha\\nDate: 12/12/2001 1800 \\nEmail: xxx@hotmail.com\");"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":24}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.command.DoneCommand;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class DoneCommandTest {"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public void doneCommandTest() {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--done gdfd\";"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        //new DoneCommand(input,ui, storage, commandName);"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(input, ui, storage, commandName);"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        assertEquals(doneCommand.execute(), \"\u003c\u003cNo data in the database\u003e\u003e\");"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":26}},{"path":"src/test/java/EmailCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class EmailCheckerTest {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public void emailCheckerTest() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--deadline --description haha --date 12/12/2001 1800 --email xxxhotmail.com\";"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(input, ui, storage, commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        assertEquals(deadlineCommand.execute(), \"\u003c\u003cInvalid Email Format\u003e\u003e\");"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":21}},{"path":"src/test/java/TimeCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import duke.parser.Parser;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"public class TimeCheckerTest {"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public void timeCheckerTest() {"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        ArrayList commandName \u003d new ArrayList();"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\", commandName);"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        String input \u003d \"--deadline --description haha --date 12/25/2001 --email xxx@hotmail.com\";"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        //new DoneCommand(input,ui, storage, commandName);"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(input, ui, storage, commandName);"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        assertEquals(deadlineCommand.execute(), \"\u003c\u003cInvalid Date Format\u003e\u003e\");"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":24}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"import duke.tasks.Todo;"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class TodoTest {"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":""},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"    public void todoTest() {"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"        Todo todo \u003d new Todo(\"Read Book\", \"12/12/12 1800\", \"haha@hotmail.com\");"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"        assertEquals(\"[T][x] Read Book | 12/12/12 1800 | haha@hotmail.com\", todo.toString());"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"}"}],"authorContributionMap":{"binbinhui":17}}]
